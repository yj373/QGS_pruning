Namespace(batch_size=128, dataset='cifar10', epochs=50, gpu='2', lr=0.01, model='resnet56', num_workers=8, pretrained_model='pretrained_model/model_best.pth.tar', prune_alpha=0.7, prune_order=1, savedir='results/prune_recover3', seed=10, soft=None, structured=None, weight_decay=0.0003)
Files already downloaded and verified
initialize CrossEntropy
importance structured pruning testing >>>>>>>>>>>>>>>>>>>>>>>>
model sum:  -1111.3250433802605
before pruning, train loss: 0.0031, train acc: 99.9780, test accuracy: 94.2900
warmup for one epoch
step: 0, CrossEntropy loss: 0.0027 (0.0027), train accuracy: 100.000(100.000), lr: 0.0100
step: 100, CrossEntropy loss: 0.0065 (0.0052), train accuracy: 100.000(99.899), lr: 0.0100
step: 200, CrossEntropy loss: 0.0019 (0.0054), train accuracy: 100.000(99.895), lr: 0.0100
step: 300, CrossEntropy loss: 0.0031 (0.0058), train accuracy: 100.000(99.883), lr: 0.0100
epoch: -1, CrossEntropy loss: 0.0059, accuracy: 99.892
test acc: 94.0900
start pruning module.conv1, num of channels: 16
tensor([ 3, 10, 12,  2,  9], device='cuda:0')
time: 0.0039s
start pruning module.layer1.0.conv1, num of channels: 16
tensor([ 5, 11,  4, 14,  8], device='cuda:0')
time: 0.0014s
start pruning module.layer1.0.conv2, num of channels: 16
tensor([11,  1,  9,  5, 12], device='cuda:0')
time: 0.0008s
start pruning module.layer1.0.conv3, num of channels: 64
tensor([54, 26, 63, 28, 44, 52,  8, 34, 48, 41, 25, 50, 59,  5, 13, 10, 27,  1,
        37], device='cuda:0')
time: 0.0011s
start pruning module.layer1.0.downsample.0, num of channels: 64
tensor([ 5, 41, 26, 34, 63, 27, 48, 44, 28, 59, 10, 50, 43,  1, 52, 25, 54,  8,
        29], device='cuda:0')
time: 0.0011s
start pruning module.layer1.1.conv1, num of channels: 16
tensor([14,  3, 10,  8,  6], device='cuda:0')
time: 0.0012s
start pruning module.layer1.1.conv2, num of channels: 16
tensor([ 3, 13, 12,  4,  1], device='cuda:0')
time: 0.0013s
start pruning module.layer1.1.conv3, num of channels: 64
tensor([28, 26, 50, 27,  5, 41,  8, 53, 48, 25, 52, 43, 10, 34, 55, 44,  1, 15,
        59], device='cuda:0')
time: 0.0015s
start pruning module.layer1.2.conv1, num of channels: 16
tensor([14,  2, 11,  1,  3], device='cuda:0')
time: 0.0010s
start pruning module.layer1.2.conv2, num of channels: 16
tensor([ 2,  3,  6, 13,  1], device='cuda:0')
time: 0.0008s
start pruning module.layer1.2.conv3, num of channels: 64
tensor([53, 25, 28, 27, 48, 63, 44, 59, 50, 43, 26, 34, 37, 52,  1, 54,  8, 41,
        51], device='cuda:0')
time: 0.0011s
start pruning module.layer1.3.conv1, num of channels: 16
tensor([11,  1,  6,  0,  8], device='cuda:0')
time: 0.0008s
start pruning module.layer1.3.conv2, num of channels: 16
tensor([11,  2,  0,  3,  1], device='cuda:0')
time: 0.0009s
start pruning module.layer1.3.conv3, num of channels: 64
tensor([53, 59, 10,  8, 28, 54, 48, 34, 39, 63, 43, 52, 37, 26,  1,  5, 11, 13,
        29], device='cuda:0')
time: 0.0011s
start pruning module.layer1.4.conv1, num of channels: 16
tensor([ 7,  8, 12,  3, 14], device='cuda:0')
time: 0.0008s
start pruning module.layer1.4.conv2, num of channels: 16
tensor([13,  8,  9, 14,  1], device='cuda:0')
time: 0.0008s
start pruning module.layer1.4.conv3, num of channels: 64
tensor([27, 57, 48, 10, 16, 56, 62, 49, 28,  7, 20,  6, 51, 58, 37,  2, 42, 61,
        55], device='cuda:0')
time: 0.0011s
start pruning module.layer1.5.conv1, num of channels: 16
tensor([13,  4, 11,  1, 14], device='cuda:0')
time: 0.0008s
start pruning module.layer1.5.conv2, num of channels: 16
tensor([4, 3, 0, 1, 9], device='cuda:0')
time: 0.0008s
start pruning module.layer1.5.conv3, num of channels: 64
tensor([14, 49,  2, 22, 20, 57, 30,  9, 36, 17, 38, 12, 39, 33, 32, 56, 42, 61,
         4], device='cuda:0')
time: 0.0011s
start pruning module.layer1.6.conv1, num of channels: 16
tensor([ 2, 14, 15, 11,  5], device='cuda:0')
time: 0.0008s
start pruning module.layer1.6.conv2, num of channels: 16
tensor([ 9,  7, 15,  4,  5], device='cuda:0')
time: 0.0008s
start pruning module.layer1.6.conv3, num of channels: 64
tensor([27, 23, 45, 36, 42, 49, 14, 40, 61, 20,  3, 25, 10, 18, 55, 47, 48, 28,
        17], device='cuda:0')
time: 0.0011s
start pruning module.layer1.7.conv1, num of channels: 16
tensor([ 7,  2, 15,  3, 12], device='cuda:0')
time: 0.0008s
start pruning module.layer1.7.conv2, num of channels: 16
tensor([ 1,  8, 12,  6,  5], device='cuda:0')
time: 0.0008s
start pruning module.layer1.7.conv3, num of channels: 64
tensor([47, 49, 61,  2, 31, 46, 40, 12,  0, 20,  9, 30, 33, 58, 60, 17, 27, 18,
        45], device='cuda:0')
time: 0.0014s
start pruning module.layer1.8.conv1, num of channels: 16
tensor([14,  6,  0,  7, 12], device='cuda:0')
time: 0.0008s
start pruning module.layer1.8.conv2, num of channels: 16
tensor([10,  3,  1,  0, 15], device='cuda:0')
time: 0.0008s
start pruning module.layer1.8.conv3, num of channels: 64
tensor([40, 17,  6, 43,  3, 10, 25, 61, 18,  2, 23, 20, 42, 51, 26, 46, 45, 60,
        29], device='cuda:0')
time: 0.0011s
start pruning module.layer2.0.conv1, num of channels: 32
tensor([30, 23, 10, 15, 26,  1,  0, 24, 21, 19], device='cuda:0')
time: 0.0009s
start pruning module.layer2.0.conv2, num of channels: 32
tensor([26,  2, 11,  8, 25, 13, 20, 30,  6, 16], device='cuda:0')
time: 0.0009s
start pruning module.layer2.0.conv3, num of channels: 128
tensor([  9,  23,  58,  52,  70, 126,   4,  87,  11,  98,  10,  79,  84, 106,
        124,  48,  38,   1,  54,   5,  71, 122,  27,  35, 120,  78, 110,  86,
         17, 105,  96,  24,  12,  53, 101,   7,  45,  73], device='cuda:0')
time: 0.0015s
start pruning module.layer2.0.downsample.0, num of channels: 128
tensor([ 56, 102,  79,  62,  35,  29,  49, 124,  93,  83, 116,   0,  21,  70,
         51,  71,  48,  28,   4,  59,  60, 120,   1,  90,  42,  82,  96, 103,
         61, 114,  26,  22,  19,  78, 104,   5,  46, 110], device='cuda:0')
time: 0.0015s
start pruning module.layer2.1.conv1, num of channels: 32
tensor([ 5,  2, 16, 31,  7, 10,  3, 12,  1, 27], device='cuda:0')
time: 0.0009s
start pruning module.layer2.1.conv2, num of channels: 32
tensor([22, 17,  4, 28, 30, 23, 20,  6,  2,  5], device='cuda:0')
time: 0.0009s
start pruning module.layer2.1.conv3, num of channels: 128
tensor([ 94,  60,  88,  37, 111,  89,  72,  61,  31,  28, 123, 120, 121, 109,
         59,  13,  80,  97, 116,   8, 112,  39,  54, 102,  21,  75,  26,  82,
         45,  17, 125,  44,  40,  73,  64,  14,  19,  93], device='cuda:0')
time: 0.0015s
start pruning module.layer2.2.conv1, num of channels: 32
tensor([12, 26, 14, 15, 27,  5, 20, 21, 23,  2], device='cuda:0')
time: 0.0009s
start pruning module.layer2.2.conv2, num of channels: 32
tensor([25, 18,  3,  6, 19, 12,  8, 16,  4, 14], device='cuda:0')
time: 0.0009s
start pruning module.layer2.2.conv3, num of channels: 128
tensor([102,  79,  61,  95,  28,  94,  31,  93,  71,  64,  72,  43,  11, 117,
         52, 123,  19,   8,  40, 126,  33,   0,  14,  59,   5,  13,  73,  39,
         37,  88, 112, 113,  97, 109,  27,  54, 121, 111], device='cuda:0')
time: 0.0015s
start pruning module.layer2.3.conv1, num of channels: 32
tensor([24, 19, 26, 13, 18,  9, 31, 16,  7, 29], device='cuda:0')
time: 0.0009s
start pruning module.layer2.3.conv2, num of channels: 32
tensor([ 8,  5, 28,  1,  2, 30, 21, 25,  3, 24], device='cuda:0')
time: 0.0009s
start pruning module.layer2.3.conv3, num of channels: 128
tensor([  3,  82, 112,  80,  65,  95,  72,  44, 116,  60,  88, 118,   0,  28,
        111,  92, 108,  40,  64, 109,  97,  31,  45,  66,  18,  73,  63, 120,
         13,  89,  62,  29,  38,  27,  56,   8,  67,  74], device='cuda:0')
time: 0.0015s
start pruning module.layer2.4.conv1, num of channels: 32
tensor([ 1,  8, 23, 24, 22, 11, 29, 16, 28, 25], device='cuda:0')
time: 0.0009s
start pruning module.layer2.4.conv2, num of channels: 32
tensor([11,  7, 27, 16,  1,  8, 13, 15, 23, 22], device='cuda:0')
time: 0.0009s
start pruning module.layer2.4.conv3, num of channels: 128
tensor([ 92,  69,  63,  90,  40,  18,  51,  46, 116,  29, 124, 121,  78, 112,
         95,  56,   7, 120,  73,  77,  42,  80, 108,  34,  26, 122,  61, 119,
         21,  60,  59,  37, 123,  43,  27, 101, 125,  91], device='cuda:0')
time: 0.0015s
start pruning module.layer2.5.conv1, num of channels: 32
tensor([30, 12, 17, 11, 28,  7,  8, 21, 23, 26], device='cuda:0')
time: 0.0009s
start pruning module.layer2.5.conv2, num of channels: 32
tensor([29, 12, 26, 13, 30, 14, 18, 28, 21,  7], device='cuda:0')
time: 0.0009s
start pruning module.layer2.5.conv3, num of channels: 128
tensor([113,  98,  68,  47,  11,   5,  34,  43,  52,  75, 101, 119,  32, 124,
        125,  33, 117,  38,  21,  90, 126,  73,  10,  81,  85,   7,  63, 115,
         54,  96,  53, 104,  95, 118, 120,  50,  86, 110], device='cuda:0')
time: 0.0015s
start pruning module.layer2.6.conv1, num of channels: 32
tensor([29, 27, 28, 31,  9, 24, 22,  5, 18,  6], device='cuda:0')
time: 0.0009s
start pruning module.layer2.6.conv2, num of channels: 32
tensor([12,  9, 25, 31, 14, 20, 23,  1, 26, 22], device='cuda:0')
time: 0.0009s
start pruning module.layer2.6.conv3, num of channels: 128
tensor([ 68, 117,  31, 126,  87,  81,  11,   5,  38,  52,  17,  23,  86,  61,
         96,  47,  51,  91,  65, 100,  57,  78,  98,  54,  46,  75,  43, 107,
          6, 120,  21,  62,  50,  28, 115,  88,  90, 122], device='cuda:0')
time: 0.0015s
start pruning module.layer2.7.conv1, num of channels: 32
tensor([16, 20, 12, 14,  0, 13,  9,  1, 10,  8], device='cuda:0')
time: 0.0009s
start pruning module.layer2.7.conv2, num of channels: 32
tensor([30, 15, 31, 27, 21, 11, 13, 16, 10, 22], device='cuda:0')
time: 0.0009s
start pruning module.layer2.7.conv3, num of channels: 128
tensor([127,  76,  36,  20,  53,  77, 106,  92, 113,  41, 103,  71,  25,  38,
         64,   1, 108,  15,  14,  54,  81,  55,  91,  23,  32,  45,   2,  74,
        119,  22,  67, 100,  66,  44,  21,  30, 104,  50], device='cuda:0')
time: 0.0015s
start pruning module.layer2.8.conv1, num of channels: 32
tensor([10,  4, 22, 12, 28,  2, 23,  9, 18, 17], device='cuda:0')
time: 0.0009s
start pruning module.layer2.8.conv2, num of channels: 32
tensor([ 1, 11,  0, 31, 16, 23, 17,  6, 30, 13], device='cuda:0')
time: 0.0009s
start pruning module.layer2.8.conv3, num of channels: 128
tensor([  9,  55,  27,  12,   6,  70,  36,  17,  86,  85,  48,  81,  76, 108,
         24,  30, 103,  42,  10, 106,  89,  99,  43, 110, 105,   5,  65,  21,
         60,  44, 100,  92,  90,  33, 119,  87, 122, 107], device='cuda:0')
time: 0.0015s
start pruning module.layer3.0.conv1, num of channels: 64
tensor([22, 63, 52, 32, 36,  5, 26, 44, 39, 28, 49, 11, 35,  9,  3, 55, 30,  7,
        50], device='cuda:0')
time: 0.0011s
start pruning module.layer3.0.conv2, num of channels: 64
tensor([19, 52, 49, 54, 63, 17, 43,  8, 28, 57, 61, 46,  0,  5, 11,  6, 12, 45,
        20], device='cuda:0')
time: 0.0011s
start pruning module.layer3.0.conv3, num of channels: 256
tensor([ 76, 255,  65, 159,  27, 183, 122, 168,   4,  83, 139,  40,  92, 189,
        248,  68, 121,   3, 195,  50,  58, 185, 125,  88, 207, 141, 234, 151,
        136,  87, 219, 150,  80, 144, 137,  52, 100,  21, 164,  39,  59, 175,
        101, 190,  16,  26,  56,  97, 117,  69,  67,  25,  93, 200, 133, 148,
        244, 155,  77, 129, 212, 209, 130,  47,  72, 180, 107,  13,  46, 174,
         51, 215, 233, 208, 177,  36, 251], device='cuda:0')
time: 0.0023s
start pruning module.layer3.0.downsample.0, num of channels: 256
tensor([ 64,  12, 255,  89, 110,  36,  72, 165, 125,   7,  77, 187, 122,  60,
         19,  76, 189, 147,  33, 141,  27,  52, 129, 216,  43,  85, 175, 174,
        179, 222, 150,  92,  34,  82, 130,   8, 136, 156, 100,  38, 240, 134,
         11, 167,  79, 101,  66,  83,  39, 170,  35, 251, 127,  47,  62,  59,
        115,   5, 185, 164,  90,  21, 160,  65, 212, 237,  53,  70, 117, 197,
        229, 207, 155, 208, 248,  91, 250], device='cuda:0')
time: 0.0022s
start pruning module.layer3.1.conv1, num of channels: 64
tensor([ 6, 28, 62, 52, 58, 35, 32, 39,  2, 31, 19, 42, 21, 18, 25,  7, 14,  1,
        29], device='cuda:0')
time: 0.0011s
start pruning module.layer3.1.conv2, num of channels: 64
tensor([14, 29, 15, 54, 27,  5, 45,  3, 50,  4, 25, 19, 20, 12,  9, 39, 30,  6,
        35], device='cuda:0')
time: 0.0011s
start pruning module.layer3.1.conv3, num of channels: 256
tensor([250, 122,  40, 147,  81, 178,  43,  27, 154, 117, 221,  65,  96,  95,
         11,  39, 235, 174, 240, 249,  49,   7, 112,  45, 187,  85, 248, 164,
         79,  30, 180, 100, 232, 228, 121, 157, 116, 229, 132,  16, 199, 255,
         28,  89,  47,  60,  52, 231, 190,  51, 247, 179, 134, 216,  97, 254,
         83,  70, 166, 206, 138, 159,  80, 244,  34,  53, 173,  77, 212, 222,
         33, 227, 234,  90, 209, 210,  67], device='cuda:0')
time: 0.0022s
start pruning module.layer3.2.conv1, num of channels: 64
tensor([ 0, 32, 55, 60,  7, 24, 59, 51,  1,  9, 39, 11, 61, 18, 38,  3, 31, 46,
        44], device='cuda:0')
time: 0.0011s
start pruning module.layer3.2.conv2, num of channels: 64
tensor([57, 59, 33, 53, 51, 50, 34, 41, 24, 54, 16, 13,  7,  4, 38, 26, 43, 58,
        49], device='cuda:0')
time: 0.0011s
start pruning module.layer3.2.conv3, num of channels: 256
tensor([ 39, 175, 112,  52,  73,  56, 216,   3,  95, 121, 206, 148,  64,  85,
         19, 199,  77,  20,  16, 250, 190, 162, 174, 255, 159, 147, 231, 136,
        160,  97,   1,   7,  29,  59, 106,  12, 165, 170, 222, 150, 141, 247,
         89,  32, 220, 201, 252, 187, 225, 205, 179,  69, 251, 122,  46, 181,
        200,  92, 254, 172,  40,  27, 117,  21,  67, 240, 227, 193, 116, 146,
        125,  43, 129,  45, 134,  54, 248], device='cuda:0')
time: 0.0022s
start pruning module.layer3.3.conv1, num of channels: 64
tensor([58, 36, 63, 31,  8, 33,  2, 42, 32, 26, 57, 45,  7, 37,  9, 62,  6, 53,
        38], device='cuda:0')
time: 0.0011s
start pruning module.layer3.3.conv2, num of channels: 64
tensor([55, 40, 26, 36, 12, 14, 16, 61,  5, 38, 52, 49, 39,  8, 33, 29, 34, 41,
        17], device='cuda:0')
time: 0.0011s
start pruning module.layer3.3.conv3, num of channels: 256
tensor([222,  42, 121,  86, 250, 146,  52, 157, 112,  65, 117, 227, 148,   0,
        179, 220, 174, 185,   7,   4, 206, 244,  33, 125, 223,  64,  87, 249,
        175,  48, 197, 208,   8, 173, 255, 230,  85, 105, 178,  27, 204,  51,
        182,   1, 115, 254, 216, 198,  54,  94, 147,  80, 187,  56, 145, 191,
        241, 162, 252,  22,  12,  21, 160, 193,  35, 234, 215, 141, 200,  20,
         77,   9, 109,  41,  29,  25, 205], device='cuda:0')
time: 0.0022s
start pruning module.layer3.4.conv1, num of channels: 64
tensor([24, 51, 42, 31, 56,  5, 21, 58,  2, 10, 23, 62, 29,  7, 53, 55, 40, 22,
        14], device='cuda:0')
time: 0.0011s
start pruning module.layer3.4.conv2, num of channels: 64
tensor([ 2, 59, 24, 28, 29, 37, 14,  3, 50, 13, 35, 38, 40, 57, 58,  5, 21, 15,
         7], device='cuda:0')
time: 0.0011s
start pruning module.layer3.4.conv3, num of channels: 256
tensor([ 86, 188,  85, 185, 114,  77,   8, 230, 149, 236, 250,   4, 117, 112,
         74,  45, 137,  33, 115, 233, 204,  18,  34, 151, 210, 121, 191,  29,
         42, 180, 179, 206, 222, 215, 220, 158, 187,  56,  38, 130, 255,  60,
         83,  55, 199,  90,  11,  41, 238,   1,  96,  27,   7, 241,  17, 216,
         89, 198,  44, 200, 189, 125, 249, 170,  20,  51,   5, 133, 100,  75,
        147,  47, 168, 217, 244, 186, 231], device='cuda:0')
time: 0.0022s
start pruning module.layer3.5.conv1, num of channels: 64
tensor([14, 61, 59,  4, 34, 55,  2, 27,  1, 60, 43, 21, 36, 13, 40, 50,  8, 47,
        41], device='cuda:0')
time: 0.0011s
start pruning module.layer3.5.conv2, num of channels: 64
tensor([35, 29, 43, 60,  2, 28, 31, 22,  3, 18, 27, 23, 49, 50, 53, 13, 58, 55,
        59], device='cuda:0')
time: 0.0015s
start pruning module.layer3.5.conv3, num of channels: 256
tensor([ 20,   8,  86,  43,  76, 153, 220, 179, 208, 162,  53, 190, 186,  26,
         34, 126,  13,  44,  45, 120,   2, 250,  89, 117, 146,   7, 144, 230,
         27, 193, 175, 108, 211,  39, 243,  82, 236,   1, 207,  88,  40,  60,
         37,  80, 149, 252, 222, 122, 154, 132,   3, 245, 137,  61, 255, 159,
         28,  56, 160,  74, 200, 210, 130, 174, 148, 192, 151, 163,  91, 254,
        241, 141, 206, 133,  42,  78,  52], device='cuda:0')
time: 0.0022s
start pruning module.layer3.6.conv1, num of channels: 64
tensor([23, 57, 36, 55, 18, 26, 29, 61, 24, 38, 43, 60,  4, 56, 15, 22, 48, 12,
        17], device='cuda:0')
time: 0.0011s
start pruning module.layer3.6.conv2, num of channels: 64
tensor([50, 17, 31, 40, 27, 28,  1, 38, 62, 48, 16, 58, 49, 23, 33, 34, 53, 19,
        54], device='cuda:0')
time: 0.0011s
start pruning module.layer3.6.conv3, num of channels: 256
tensor([120, 190, 126,  20, 206, 168, 121,  39,  42,  45, 147, 210, 179, 193,
        238,   1,   5,  27, 152,  85,  37, 109, 117, 175, 240, 242, 173, 233,
         58, 101, 136, 112,  61, 250,  49,  86,  34,  40, 174, 153,  35, 133,
          8, 236,  93,  82,  13, 186,  30, 222,  12, 220, 202,  71,   7, 244,
        211,   6, 149,  89,  87,  92, 122, 106,  43,  53, 104, 218, 252, 239,
        201, 144, 205, 208,  80, 154,  21], device='cuda:0')
time: 0.0022s
start pruning module.layer3.7.conv1, num of channels: 64
tensor([33, 10, 58, 41, 40, 42, 54, 27, 53, 61, 12, 37, 45,  0, 44,  9, 43, 50,
         3], device='cuda:0')
time: 0.0011s
start pruning module.layer3.7.conv2, num of channels: 64
tensor([ 6, 47, 13, 15, 39, 27,  2, 60, 21, 52, 55, 19, 25, 41, 36, 40, 43,  5,
        59], device='cuda:0')
time: 0.0011s
start pruning module.layer3.7.conv3, num of channels: 256
tensor([ 43,   1, 179,  85, 244, 127, 206, 168, 117, 126, 174, 114, 162,   8,
         86,   4,  42,  34,  53, 222, 153,  30, 170, 178, 165,  87,  90, 240,
         32, 147, 140,  47, 204, 160,   5, 205, 142,  27, 132,  20, 220, 191,
        173,  39, 122, 231, 217, 236,  45, 199,  82, 190, 109, 234, 158, 149,
        230, 245, 185, 200,  89, 121, 212, 239, 193,   7,  65, 141, 151,  36,
        120,  49, 103,  92, 135,  52,  37], device='cuda:0')
time: 0.0022s
start pruning module.layer3.8.conv1, num of channels: 64
tensor([ 3, 37, 52, 13, 38, 30, 62, 53, 16, 15, 61, 20, 60, 39,  6, 29, 26, 63,
        34], device='cuda:0')
time: 0.0011s
start pruning module.layer3.8.conv2, num of channels: 64
tensor([20, 58,  8, 55, 57, 56, 32, 46, 21, 24,  7, 31, 62, 16, 50,  9, 37, 36,
        23], device='cuda:0')
time: 0.0011s
start pruning module.layer3.8.conv3, num of channels: 256
tensor([170,  96,   5,  33, 179, 182,  87, 141, 206, 103, 240, 101,   7, 218,
         57,   4,  10, 153, 221, 136,  29,  27,  43, 165,   1, 190,  97,  45,
        148, 232, 230,  93, 210, 152,  38,   8, 122, 106, 117,  95, 127,  82,
        203, 255, 167, 135, 220,  52, 178, 104,  30, 180, 154,  73,  42, 155,
         44, 126, 226, 112, 205, 132, 147, 149,  65, 245, 242, 191, 116, 247,
        145, 114,  40, 183, 125, 159, 208], device='cuda:0')
time: 0.0022s
Global sparsity: 69.22%
epoch: 0, train loss: 5.8061, train acc: 10.0000, test accuracy: 10.0000
step: 0, CrossEntropy loss: 3.5365 (3.5365), train accuracy: 16.406(16.406), lr: 0.0100
step: 100, CrossEntropy loss: 1.1027 (1.4281), train accuracy: 63.281(52.119), lr: 0.0100
step: 200, CrossEntropy loss: 0.7933 (1.1634), train accuracy: 69.531(60.273), lr: 0.0100
step: 300, CrossEntropy loss: 0.8237 (1.0284), train accuracy: 74.219(64.875), lr: 0.0100
epoch: 0, CrossEntropy loss: 0.9471, accuracy: 67.558
test acc: 76.3900
step: 0, CrossEntropy loss: 0.6514 (0.6514), train accuracy: 80.469(80.469), lr: 0.0100
step: 100, CrossEntropy loss: 0.4379 (0.6077), train accuracy: 85.938(79.293), lr: 0.0100
step: 200, CrossEntropy loss: 0.5905 (0.5892), train accuracy: 77.344(79.905), lr: 0.0100
step: 300, CrossEntropy loss: 0.4393 (0.5736), train accuracy: 84.375(80.461), lr: 0.0100
epoch: 1, CrossEntropy loss: 0.5595, accuracy: 80.830
test acc: 80.1700
step: 0, CrossEntropy loss: 0.5305 (0.5305), train accuracy: 80.469(80.469), lr: 0.0099
step: 100, CrossEntropy loss: 0.4473 (0.4803), train accuracy: 82.812(83.222), lr: 0.0099
step: 200, CrossEntropy loss: 0.3670 (0.4736), train accuracy: 85.938(83.602), lr: 0.0099
step: 300, CrossEntropy loss: 0.3593 (0.4657), train accuracy: 85.156(83.874), lr: 0.0099
epoch: 2, CrossEntropy loss: 0.4598, accuracy: 84.132
test acc: 82.3600
step: 0, CrossEntropy loss: 0.5328 (0.5328), train accuracy: 80.469(80.469), lr: 0.0098
step: 100, CrossEntropy loss: 0.3415 (0.4183), train accuracy: 89.062(85.837), lr: 0.0098
step: 200, CrossEntropy loss: 0.4147 (0.4096), train accuracy: 84.375(86.070), lr: 0.0098
step: 300, CrossEntropy loss: 0.3933 (0.4088), train accuracy: 87.500(86.174), lr: 0.0098
epoch: 3, CrossEntropy loss: 0.4076, accuracy: 86.228
test acc: 84.1600
step: 0, CrossEntropy loss: 0.3387 (0.3387), train accuracy: 89.062(89.062), lr: 0.0098
step: 100, CrossEntropy loss: 0.3033 (0.3706), train accuracy: 89.062(87.330), lr: 0.0098
step: 200, CrossEntropy loss: 0.2956 (0.3710), train accuracy: 88.281(87.321), lr: 0.0098
step: 300, CrossEntropy loss: 0.2928 (0.3742), train accuracy: 90.625(87.261), lr: 0.0098
epoch: 4, CrossEntropy loss: 0.3761, accuracy: 87.126
test acc: 85.1500
step: 0, CrossEntropy loss: 0.2710 (0.2710), train accuracy: 90.625(90.625), lr: 0.0096
step: 100, CrossEntropy loss: 0.3952 (0.3451), train accuracy: 86.719(87.755), lr: 0.0096
step: 200, CrossEntropy loss: 0.3243 (0.3487), train accuracy: 89.062(87.593), lr: 0.0096
step: 300, CrossEntropy loss: 0.4073 (0.3527), train accuracy: 86.719(87.521), lr: 0.0096
epoch: 5, CrossEntropy loss: 0.3512, accuracy: 87.668
test acc: 84.8200
step: 0, CrossEntropy loss: 0.2800 (0.2800), train accuracy: 89.844(89.844), lr: 0.0095
step: 100, CrossEntropy loss: 0.2550 (0.3201), train accuracy: 92.969(89.055), lr: 0.0095
step: 200, CrossEntropy loss: 0.2112 (0.3259), train accuracy: 92.188(89.016), lr: 0.0095
step: 300, CrossEntropy loss: 0.4424 (0.3299), train accuracy: 86.719(88.761), lr: 0.0095
epoch: 6, CrossEntropy loss: 0.3299, accuracy: 88.740
test acc: 85.6200
step: 0, CrossEntropy loss: 0.3243 (0.3243), train accuracy: 89.844(89.844), lr: 0.0094
step: 100, CrossEntropy loss: 0.3506 (0.3164), train accuracy: 87.500(89.155), lr: 0.0094
step: 200, CrossEntropy loss: 0.3339 (0.3137), train accuracy: 87.500(89.136), lr: 0.0094
step: 300, CrossEntropy loss: 0.3001 (0.3175), train accuracy: 87.500(89.060), lr: 0.0094
epoch: 7, CrossEntropy loss: 0.3152, accuracy: 89.112
test acc: 86.8800
step: 0, CrossEntropy loss: 0.2464 (0.2464), train accuracy: 89.062(89.062), lr: 0.0092
step: 100, CrossEntropy loss: 0.2562 (0.2934), train accuracy: 91.406(89.681), lr: 0.0092
step: 200, CrossEntropy loss: 0.2335 (0.3010), train accuracy: 89.062(89.541), lr: 0.0092
step: 300, CrossEntropy loss: 0.2647 (0.3009), train accuracy: 92.188(89.576), lr: 0.0092
epoch: 8, CrossEntropy loss: 0.3014, accuracy: 89.502
test acc: 87.0100
step: 0, CrossEntropy loss: 0.3296 (0.3296), train accuracy: 85.938(85.938), lr: 0.0090
step: 100, CrossEntropy loss: 0.3723 (0.2766), train accuracy: 88.281(90.408), lr: 0.0090
step: 200, CrossEntropy loss: 0.2781 (0.2820), train accuracy: 91.406(90.287), lr: 0.0090
step: 300, CrossEntropy loss: 0.2499 (0.2840), train accuracy: 89.062(90.223), lr: 0.0090
epoch: 9, CrossEntropy loss: 0.2850, accuracy: 90.176
test acc: 86.6400
step: 0, CrossEntropy loss: 0.2679 (0.2679), train accuracy: 90.625(90.625), lr: 0.0089
step: 100, CrossEntropy loss: 0.2137 (0.2629), train accuracy: 93.750(90.973), lr: 0.0089
step: 200, CrossEntropy loss: 0.2265 (0.2659), train accuracy: 90.625(90.948), lr: 0.0089
step: 300, CrossEntropy loss: 0.2977 (0.2715), train accuracy: 90.625(90.708), lr: 0.0089
epoch: 10, CrossEntropy loss: 0.2768, accuracy: 90.488
test acc: 87.3800
step: 0, CrossEntropy loss: 0.3231 (0.3231), train accuracy: 88.281(88.281), lr: 0.0086
step: 100, CrossEntropy loss: 0.2629 (0.2684), train accuracy: 91.406(90.919), lr: 0.0086
step: 200, CrossEntropy loss: 0.1996 (0.2700), train accuracy: 92.969(90.711), lr: 0.0086
step: 300, CrossEntropy loss: 0.2639 (0.2731), train accuracy: 92.188(90.589), lr: 0.0086
epoch: 11, CrossEntropy loss: 0.2744, accuracy: 90.602
test acc: 86.4500
step: 0, CrossEntropy loss: 0.2228 (0.2228), train accuracy: 92.188(92.188), lr: 0.0084
step: 100, CrossEntropy loss: 0.2951 (0.2682), train accuracy: 89.062(90.594), lr: 0.0084
step: 200, CrossEntropy loss: 0.2045 (0.2660), train accuracy: 92.188(90.711), lr: 0.0084
step: 300, CrossEntropy loss: 0.2238 (0.2656), train accuracy: 92.188(90.786), lr: 0.0084
epoch: 12, CrossEntropy loss: 0.2659, accuracy: 90.768
test acc: 88.1200
step: 0, CrossEntropy loss: 0.2686 (0.2686), train accuracy: 92.969(92.969), lr: 0.0082
step: 100, CrossEntropy loss: 0.3295 (0.2405), train accuracy: 90.625(91.739), lr: 0.0082
step: 200, CrossEntropy loss: 0.3181 (0.2483), train accuracy: 90.625(91.531), lr: 0.0082
step: 300, CrossEntropy loss: 0.3155 (0.2508), train accuracy: 89.062(91.406), lr: 0.0082
epoch: 13, CrossEntropy loss: 0.2553, accuracy: 91.250
test acc: 86.8500
step: 0, CrossEntropy loss: 0.1942 (0.1942), train accuracy: 94.531(94.531), lr: 0.0079
step: 100, CrossEntropy loss: 0.2695 (0.2401), train accuracy: 90.625(91.569), lr: 0.0079
step: 200, CrossEntropy loss: 0.2647 (0.2355), train accuracy: 90.625(91.915), lr: 0.0079
step: 300, CrossEntropy loss: 0.2376 (0.2425), train accuracy: 92.969(91.700), lr: 0.0079
epoch: 14, CrossEntropy loss: 0.2456, accuracy: 91.600
test acc: 87.7600
step: 0, CrossEntropy loss: 0.2166 (0.2166), train accuracy: 90.625(90.625), lr: 0.0077
step: 100, CrossEntropy loss: 0.3284 (0.2202), train accuracy: 90.625(92.110), lr: 0.0077
step: 200, CrossEntropy loss: 0.3394 (0.2307), train accuracy: 89.062(91.791), lr: 0.0077
step: 300, CrossEntropy loss: 0.2939 (0.2361), train accuracy: 89.844(91.718), lr: 0.0077
epoch: 15, CrossEntropy loss: 0.2372, accuracy: 91.652
test acc: 87.5100
step: 0, CrossEntropy loss: 0.2234 (0.2234), train accuracy: 93.750(93.750), lr: 0.0074
step: 100, CrossEntropy loss: 0.2264 (0.2202), train accuracy: 90.625(92.381), lr: 0.0074
step: 200, CrossEntropy loss: 0.2405 (0.2294), train accuracy: 92.969(92.040), lr: 0.0074
step: 300, CrossEntropy loss: 0.1941 (0.2303), train accuracy: 92.969(92.040), lr: 0.0074
epoch: 16, CrossEntropy loss: 0.2315, accuracy: 92.000
test acc: 88.5900
step: 0, CrossEntropy loss: 0.1623 (0.1623), train accuracy: 93.750(93.750), lr: 0.0071
step: 100, CrossEntropy loss: 0.3038 (0.2223), train accuracy: 86.719(92.164), lr: 0.0071
step: 200, CrossEntropy loss: 0.2982 (0.2253), train accuracy: 87.500(92.160), lr: 0.0071
step: 300, CrossEntropy loss: 0.2525 (0.2258), train accuracy: 91.406(92.130), lr: 0.0071
epoch: 17, CrossEntropy loss: 0.2259, accuracy: 92.224
test acc: 88.7100
step: 0, CrossEntropy loss: 0.2218 (0.2218), train accuracy: 88.281(88.281), lr: 0.0068
step: 100, CrossEntropy loss: 0.1208 (0.2078), train accuracy: 96.875(92.644), lr: 0.0068
step: 200, CrossEntropy loss: 0.3069 (0.2083), train accuracy: 87.500(92.638), lr: 0.0068
step: 300, CrossEntropy loss: 0.1225 (0.2114), train accuracy: 95.312(92.522), lr: 0.0068
epoch: 18, CrossEntropy loss: 0.2148, accuracy: 92.494
test acc: 88.6700
step: 0, CrossEntropy loss: 0.1700 (0.1700), train accuracy: 95.312(95.312), lr: 0.0065
step: 100, CrossEntropy loss: 0.1674 (0.2128), train accuracy: 93.750(92.543), lr: 0.0065
step: 200, CrossEntropy loss: 0.3630 (0.2075), train accuracy: 87.500(92.642), lr: 0.0065
step: 300, CrossEntropy loss: 0.3224 (0.2114), train accuracy: 89.062(92.595), lr: 0.0065
epoch: 19, CrossEntropy loss: 0.2151, accuracy: 92.522
test acc: 88.1200
step: 0, CrossEntropy loss: 0.1767 (0.1767), train accuracy: 95.312(95.312), lr: 0.0062
step: 100, CrossEntropy loss: 0.1796 (0.1962), train accuracy: 91.406(93.209), lr: 0.0062
step: 200, CrossEntropy loss: 0.3453 (0.2034), train accuracy: 87.500(93.012), lr: 0.0062
step: 300, CrossEntropy loss: 0.2238 (0.2044), train accuracy: 90.625(92.868), lr: 0.0062
epoch: 20, CrossEntropy loss: 0.2087, accuracy: 92.714
test acc: 88.5200
step: 0, CrossEntropy loss: 0.2172 (0.2172), train accuracy: 92.188(92.188), lr: 0.0059
step: 100, CrossEntropy loss: 0.2219 (0.1948), train accuracy: 92.969(93.286), lr: 0.0059
step: 200, CrossEntropy loss: 0.1679 (0.1982), train accuracy: 94.531(93.159), lr: 0.0059
step: 300, CrossEntropy loss: 0.2340 (0.2012), train accuracy: 92.188(93.057), lr: 0.0059
epoch: 21, CrossEntropy loss: 0.2011, accuracy: 93.058
test acc: 89.1000
step: 0, CrossEntropy loss: 0.1424 (0.1424), train accuracy: 95.312(95.312), lr: 0.0056
step: 100, CrossEntropy loss: 0.2803 (0.1847), train accuracy: 89.062(93.518), lr: 0.0056
step: 200, CrossEntropy loss: 0.2907 (0.1861), train accuracy: 87.500(93.354), lr: 0.0056
step: 300, CrossEntropy loss: 0.2711 (0.1889), train accuracy: 90.625(93.371), lr: 0.0056
epoch: 22, CrossEntropy loss: 0.1917, accuracy: 93.300
test acc: 89.0200
step: 0, CrossEntropy loss: 0.2103 (0.2103), train accuracy: 94.531(94.531), lr: 0.0053
step: 100, CrossEntropy loss: 0.1011 (0.1829), train accuracy: 97.656(93.719), lr: 0.0053
step: 200, CrossEntropy loss: 0.1643 (0.1857), train accuracy: 94.531(93.595), lr: 0.0053
step: 300, CrossEntropy loss: 0.2149 (0.1895), train accuracy: 91.406(93.353), lr: 0.0053
epoch: 23, CrossEntropy loss: 0.1890, accuracy: 93.364
test acc: 88.7700
step: 0, CrossEntropy loss: 0.1882 (0.1882), train accuracy: 94.531(94.531), lr: 0.0050
step: 100, CrossEntropy loss: 0.1194 (0.1723), train accuracy: 96.094(94.005), lr: 0.0050
step: 200, CrossEntropy loss: 0.1438 (0.1791), train accuracy: 95.312(93.758), lr: 0.0050
step: 300, CrossEntropy loss: 0.2076 (0.1774), train accuracy: 92.188(93.895), lr: 0.0050
epoch: 24, CrossEntropy loss: 0.1793, accuracy: 93.840
test acc: 89.6700
step: 0, CrossEntropy loss: 0.2448 (0.2448), train accuracy: 91.406(91.406), lr: 0.0047
step: 100, CrossEntropy loss: 0.1875 (0.1790), train accuracy: 92.969(93.959), lr: 0.0047
step: 200, CrossEntropy loss: 0.2309 (0.1788), train accuracy: 89.844(93.851), lr: 0.0047
step: 300, CrossEntropy loss: 0.1926 (0.1780), train accuracy: 92.188(93.851), lr: 0.0047
epoch: 25, CrossEntropy loss: 0.1786, accuracy: 93.822
test acc: 89.1700
step: 0, CrossEntropy loss: 0.1462 (0.1462), train accuracy: 93.750(93.750), lr: 0.0044
step: 100, CrossEntropy loss: 0.1301 (0.1665), train accuracy: 96.094(94.083), lr: 0.0044
step: 200, CrossEntropy loss: 0.1988 (0.1660), train accuracy: 94.531(94.248), lr: 0.0044
step: 300, CrossEntropy loss: 0.1975 (0.1716), train accuracy: 93.750(94.160), lr: 0.0044
epoch: 26, CrossEntropy loss: 0.1740, accuracy: 94.088
test acc: 89.4500
step: 0, CrossEntropy loss: 0.1815 (0.1815), train accuracy: 94.531(94.531), lr: 0.0041
step: 100, CrossEntropy loss: 0.1465 (0.1552), train accuracy: 96.094(94.686), lr: 0.0041
step: 200, CrossEntropy loss: 0.0983 (0.1601), train accuracy: 97.656(94.527), lr: 0.0041
step: 300, CrossEntropy loss: 0.1894 (0.1612), train accuracy: 95.312(94.503), lr: 0.0041
epoch: 27, CrossEntropy loss: 0.1662, accuracy: 94.300
test acc: 89.6900
step: 0, CrossEntropy loss: 0.2418 (0.2418), train accuracy: 92.188(92.188), lr: 0.0038
step: 100, CrossEntropy loss: 0.1558 (0.1555), train accuracy: 96.875(94.531), lr: 0.0038
step: 200, CrossEntropy loss: 0.2296 (0.1592), train accuracy: 94.531(94.527), lr: 0.0038
step: 300, CrossEntropy loss: 0.1259 (0.1610), train accuracy: 95.312(94.388), lr: 0.0038
epoch: 28, CrossEntropy loss: 0.1622, accuracy: 94.320
test acc: 89.7200
step: 0, CrossEntropy loss: 0.1841 (0.1841), train accuracy: 92.969(92.969), lr: 0.0035
step: 100, CrossEntropy loss: 0.0583 (0.1533), train accuracy: 98.438(94.864), lr: 0.0035
step: 200, CrossEntropy loss: 0.1319 (0.1548), train accuracy: 96.094(94.753), lr: 0.0035
step: 300, CrossEntropy loss: 0.2167 (0.1536), train accuracy: 90.625(94.830), lr: 0.0035
epoch: 29, CrossEntropy loss: 0.1557, accuracy: 94.698
test acc: 89.6800
step: 0, CrossEntropy loss: 0.0985 (0.0985), train accuracy: 96.094(96.094), lr: 0.0032
step: 100, CrossEntropy loss: 0.2166 (0.1431), train accuracy: 90.625(94.879), lr: 0.0032
step: 200, CrossEntropy loss: 0.1014 (0.1449), train accuracy: 96.875(94.994), lr: 0.0032
step: 300, CrossEntropy loss: 0.2126 (0.1467), train accuracy: 92.188(94.957), lr: 0.0032
epoch: 30, CrossEntropy loss: 0.1471, accuracy: 94.974
test acc: 89.6600
step: 0, CrossEntropy loss: 0.0961 (0.0961), train accuracy: 96.875(96.875), lr: 0.0029
step: 100, CrossEntropy loss: 0.1048 (0.1458), train accuracy: 96.094(95.135), lr: 0.0029
step: 200, CrossEntropy loss: 0.1408 (0.1442), train accuracy: 96.094(95.149), lr: 0.0029
step: 300, CrossEntropy loss: 0.1559 (0.1456), train accuracy: 94.531(95.040), lr: 0.0029
epoch: 31, CrossEntropy loss: 0.1462, accuracy: 95.014
test acc: 89.8700
step: 0, CrossEntropy loss: 0.0948 (0.0948), train accuracy: 96.875(96.875), lr: 0.0026
step: 100, CrossEntropy loss: 0.0872 (0.1437), train accuracy: 97.656(94.918), lr: 0.0026
step: 200, CrossEntropy loss: 0.1319 (0.1406), train accuracy: 95.312(95.192), lr: 0.0026
step: 300, CrossEntropy loss: 0.1805 (0.1420), train accuracy: 92.188(95.175), lr: 0.0026
epoch: 32, CrossEntropy loss: 0.1439, accuracy: 95.106
test acc: 90.0100
step: 0, CrossEntropy loss: 0.1442 (0.1442), train accuracy: 95.312(95.312), lr: 0.0023
step: 100, CrossEntropy loss: 0.1756 (0.1304), train accuracy: 95.312(95.537), lr: 0.0023
step: 200, CrossEntropy loss: 0.1656 (0.1361), train accuracy: 93.750(95.328), lr: 0.0023
step: 300, CrossEntropy loss: 0.1340 (0.1361), train accuracy: 96.875(95.336), lr: 0.0023
epoch: 33, CrossEntropy loss: 0.1343, accuracy: 95.368
test acc: 90.1700
step: 0, CrossEntropy loss: 0.1446 (0.1446), train accuracy: 95.312(95.312), lr: 0.0021
step: 100, CrossEntropy loss: 0.2122 (0.1324), train accuracy: 93.750(95.514), lr: 0.0021
step: 200, CrossEntropy loss: 0.0795 (0.1299), train accuracy: 98.438(95.756), lr: 0.0021
step: 300, CrossEntropy loss: 0.1305 (0.1296), train accuracy: 94.531(95.665), lr: 0.0021
epoch: 34, CrossEntropy loss: 0.1281, accuracy: 95.708
test acc: 90.4700
step: 0, CrossEntropy loss: 0.1318 (0.1318), train accuracy: 94.531(94.531), lr: 0.0018
step: 100, CrossEntropy loss: 0.1189 (0.1227), train accuracy: 96.875(95.761), lr: 0.0018
step: 200, CrossEntropy loss: 0.1635 (0.1248), train accuracy: 96.094(95.662), lr: 0.0018
step: 300, CrossEntropy loss: 0.1181 (0.1258), train accuracy: 93.750(95.653), lr: 0.0018
epoch: 35, CrossEntropy loss: 0.1262, accuracy: 95.614
test acc: 90.2600
step: 0, CrossEntropy loss: 0.1241 (0.1241), train accuracy: 93.750(93.750), lr: 0.0016
step: 100, CrossEntropy loss: 0.1041 (0.1250), train accuracy: 97.656(95.699), lr: 0.0016
step: 200, CrossEntropy loss: 0.1147 (0.1237), train accuracy: 96.875(95.814), lr: 0.0016
step: 300, CrossEntropy loss: 0.1675 (0.1255), train accuracy: 95.312(95.751), lr: 0.0016
epoch: 36, CrossEntropy loss: 0.1244, accuracy: 95.778
test acc: 90.2700
step: 0, CrossEntropy loss: 0.0922 (0.0922), train accuracy: 97.656(97.656), lr: 0.0014
step: 100, CrossEntropy loss: 0.0974 (0.1193), train accuracy: 98.438(95.993), lr: 0.0014
step: 200, CrossEntropy loss: 0.0726 (0.1192), train accuracy: 97.656(95.962), lr: 0.0014
step: 300, CrossEntropy loss: 0.0921 (0.1193), train accuracy: 96.875(95.995), lr: 0.0014
epoch: 37, CrossEntropy loss: 0.1184, accuracy: 96.044
test acc: 90.3200
step: 0, CrossEntropy loss: 0.1011 (0.1011), train accuracy: 96.875(96.875), lr: 0.0012
step: 100, CrossEntropy loss: 0.1450 (0.1157), train accuracy: 94.531(96.086), lr: 0.0012
step: 200, CrossEntropy loss: 0.1071 (0.1166), train accuracy: 96.875(96.035), lr: 0.0012
step: 300, CrossEntropy loss: 0.1441 (0.1180), train accuracy: 93.750(95.948), lr: 0.0012
epoch: 38, CrossEntropy loss: 0.1188, accuracy: 95.928
test acc: 90.5000
step: 0, CrossEntropy loss: 0.0765 (0.0765), train accuracy: 96.875(96.875), lr: 0.0010
step: 100, CrossEntropy loss: 0.1032 (0.1138), train accuracy: 97.656(96.256), lr: 0.0010
step: 200, CrossEntropy loss: 0.1087 (0.1125), train accuracy: 97.656(96.249), lr: 0.0010
step: 300, CrossEntropy loss: 0.1214 (0.1120), train accuracy: 94.531(96.291), lr: 0.0010
epoch: 39, CrossEntropy loss: 0.1133, accuracy: 96.266
test acc: 90.4000
step: 0, CrossEntropy loss: 0.1009 (0.1009), train accuracy: 96.094(96.094), lr: 0.0008
step: 100, CrossEntropy loss: 0.1206 (0.1044), train accuracy: 96.094(96.550), lr: 0.0008
step: 200, CrossEntropy loss: 0.1237 (0.1071), train accuracy: 94.531(96.447), lr: 0.0008
step: 300, CrossEntropy loss: 0.1511 (0.1077), train accuracy: 96.094(96.465), lr: 0.0008
epoch: 40, CrossEntropy loss: 0.1087, accuracy: 96.406
test acc: 90.4800
step: 0, CrossEntropy loss: 0.1465 (0.1465), train accuracy: 95.312(95.312), lr: 0.0006
step: 100, CrossEntropy loss: 0.0921 (0.1113), train accuracy: 96.875(96.233), lr: 0.0006
step: 200, CrossEntropy loss: 0.1686 (0.1088), train accuracy: 93.750(96.401), lr: 0.0006
step: 300, CrossEntropy loss: 0.1430 (0.1099), train accuracy: 96.094(96.325), lr: 0.0006
epoch: 41, CrossEntropy loss: 0.1088, accuracy: 96.360
test acc: 90.6100
step: 0, CrossEntropy loss: 0.0722 (0.0722), train accuracy: 99.219(99.219), lr: 0.0005
step: 100, CrossEntropy loss: 0.1247 (0.1009), train accuracy: 96.875(96.635), lr: 0.0005
step: 200, CrossEntropy loss: 0.1449 (0.1051), train accuracy: 93.750(96.440), lr: 0.0005
step: 300, CrossEntropy loss: 0.1070 (0.1066), train accuracy: 97.656(96.436), lr: 0.0005
epoch: 42, CrossEntropy loss: 0.1066, accuracy: 96.432
test acc: 90.6200
step: 0, CrossEntropy loss: 0.0415 (0.0415), train accuracy: 99.219(99.219), lr: 0.0004
step: 100, CrossEntropy loss: 0.1232 (0.1019), train accuracy: 95.312(96.597), lr: 0.0004
step: 200, CrossEntropy loss: 0.1110 (0.1054), train accuracy: 95.312(96.455), lr: 0.0004
step: 300, CrossEntropy loss: 0.1740 (0.1067), train accuracy: 94.531(96.416), lr: 0.0004
epoch: 43, CrossEntropy loss: 0.1068, accuracy: 96.412
test acc: 90.5700
step: 0, CrossEntropy loss: 0.1186 (0.1186), train accuracy: 96.875(96.875), lr: 0.0003
step: 100, CrossEntropy loss: 0.1008 (0.1024), train accuracy: 96.094(96.620), lr: 0.0003
step: 200, CrossEntropy loss: 0.1414 (0.1035), train accuracy: 94.531(96.611), lr: 0.0003
step: 300, CrossEntropy loss: 0.0853 (0.1056), train accuracy: 96.875(96.543), lr: 0.0003
epoch: 44, CrossEntropy loss: 0.1061, accuracy: 96.508
test acc: 90.7300
step: 0, CrossEntropy loss: 0.1010 (0.1010), train accuracy: 96.094(96.094), lr: 0.0002
step: 100, CrossEntropy loss: 0.1096 (0.0994), train accuracy: 96.094(96.744), lr: 0.0002
step: 200, CrossEntropy loss: 0.0724 (0.1015), train accuracy: 97.656(96.688), lr: 0.0002
step: 300, CrossEntropy loss: 0.0830 (0.1018), train accuracy: 98.438(96.626), lr: 0.0002
epoch: 45, CrossEntropy loss: 0.1031, accuracy: 96.586
test acc: 90.5800
step: 0, CrossEntropy loss: 0.0496 (0.0496), train accuracy: 100.000(100.000), lr: 0.0001
step: 100, CrossEntropy loss: 0.0876 (0.1017), train accuracy: 96.094(96.759), lr: 0.0001
step: 200, CrossEntropy loss: 0.0830 (0.1010), train accuracy: 97.656(96.801), lr: 0.0001
step: 300, CrossEntropy loss: 0.1243 (0.1010), train accuracy: 95.312(96.800), lr: 0.0001
epoch: 46, CrossEntropy loss: 0.1015, accuracy: 96.728
test acc: 90.6800
step: 0, CrossEntropy loss: 0.1577 (0.1577), train accuracy: 95.312(95.312), lr: 0.0000
step: 100, CrossEntropy loss: 0.0619 (0.0970), train accuracy: 98.438(96.867), lr: 0.0000
step: 200, CrossEntropy loss: 0.0746 (0.0987), train accuracy: 97.656(96.778), lr: 0.0000
step: 300, CrossEntropy loss: 0.1037 (0.1012), train accuracy: 96.875(96.670), lr: 0.0000
epoch: 47, CrossEntropy loss: 0.1011, accuracy: 96.654
test acc: 90.5600
step: 0, CrossEntropy loss: 0.0668 (0.0668), train accuracy: 97.656(97.656), lr: 0.0000
step: 100, CrossEntropy loss: 0.0539 (0.0993), train accuracy: 97.656(96.713), lr: 0.0000
step: 200, CrossEntropy loss: 0.0980 (0.0980), train accuracy: 98.438(96.778), lr: 0.0000
step: 300, CrossEntropy loss: 0.0903 (0.0998), train accuracy: 97.656(96.688), lr: 0.0000
epoch: 48, CrossEntropy loss: 0.0993, accuracy: 96.684
test acc: 90.6800
cosine structured pruning testing >>>>>>>>>>>>>>>>>>>>>>>>
model sum:  -1111.3250433802605
before pruning, train loss: 0.0033, train acc: 99.9640, test accuracy: 94.2900
start pruning module.conv1, num of channels: 16
tensor([ 7,  1,  9, 15, 12])
time: 0.0066s
start pruning module.layer1.0.conv1, num of channels: 16
tensor([ 7,  6, 15,  2,  3])
time: 0.0019s
start pruning module.layer1.0.conv2, num of channels: 16
tensor([ 1,  3,  7, 10, 13])
time: 0.0027s
start pruning module.layer1.0.conv3, num of channels: 64
tensor([21, 30, 61, 26, 50, 63, 19, 27,  2, 45, 10, 58, 12, 46, 11, 56,  5, 14,
        24])
time: 0.0021s
start pruning module.layer1.0.downsample.0, num of channels: 64
tensor([20, 37, 55, 16, 57, 46, 39,  4, 27, 41, 18, 40, 63, 13, 35, 54, 30, 26,
        47])
time: 0.0017s
start pruning module.layer1.1.conv1, num of channels: 16
tensor([12, 14, 13,  4,  1])
time: 0.0016s
start pruning module.layer1.1.conv2, num of channels: 16
tensor([14,  7,  1, 11,  9])
time: 0.0015s
start pruning module.layer1.1.conv3, num of channels: 64
tensor([44, 60, 48, 38, 54, 36, 12, 15, 55, 59, 50, 32, 13, 29, 23,  7, 22, 18,
        45])
time: 0.0017s
start pruning module.layer1.2.conv1, num of channels: 16
tensor([10,  0,  2, 11,  9])
time: 0.0016s
start pruning module.layer1.2.conv2, num of channels: 16
tensor([ 1, 12,  6, 10,  8])
time: 0.0016s
start pruning module.layer1.2.conv3, num of channels: 64
tensor([43, 52, 56, 63, 26, 31, 60,  8, 49, 38, 51,  5, 28, 15,  9, 13,  7, 53,
        22])
time: 0.0016s
start pruning module.layer1.3.conv1, num of channels: 16
tensor([ 6, 12,  0,  5,  2])
time: 0.0010s
start pruning module.layer1.3.conv2, num of channels: 16
tensor([14, 13,  4, 11, 12])
time: 0.0010s
start pruning module.layer1.3.conv3, num of channels: 64
tensor([18, 54, 22, 59, 15, 45, 55, 57, 12,  0, 23, 62, 56,  4, 16, 49,  9, 14,
        48])
time: 0.0011s
start pruning module.layer1.4.conv1, num of channels: 16
tensor([ 7, 14,  2, 13, 15])
time: 0.0010s
start pruning module.layer1.4.conv2, num of channels: 16
tensor([5, 1, 8, 0, 6])
time: 0.0010s
start pruning module.layer1.4.conv3, num of channels: 64
tensor([43, 18, 20,  1,  9, 33, 11, 42, 50, 40, 19, 22, 45, 49, 16, 39, 41, 34,
        56])
time: 0.0011s
start pruning module.layer1.5.conv1, num of channels: 16
tensor([ 7,  4,  5,  8, 13])
time: 0.0010s
start pruning module.layer1.5.conv2, num of channels: 16
tensor([ 4,  7, 12, 13,  3])
time: 0.0010s
start pruning module.layer1.5.conv3, num of channels: 64
tensor([ 7, 57, 34, 22, 11, 52, 61, 13, 63, 41,  4, 43,  1, 50,  0, 55, 62, 51,
        49])
time: 0.0011s
start pruning module.layer1.6.conv1, num of channels: 16
tensor([15,  5,  2, 14,  4])
time: 0.0010s
start pruning module.layer1.6.conv2, num of channels: 16
tensor([11,  9, 15,  5,  2])
time: 0.0010s
start pruning module.layer1.6.conv3, num of channels: 64
tensor([ 6, 55, 13, 37, 50, 54, 15, 56, 32, 39, 38, 29, 63, 23, 45, 51,  9, 52,
        24])
time: 0.0011s
start pruning module.layer1.7.conv1, num of channels: 16
tensor([ 7,  6, 15,  2,  4])
time: 0.0010s
start pruning module.layer1.7.conv2, num of channels: 16
tensor([10,  8,  6,  1,  5])
time: 0.0010s
start pruning module.layer1.7.conv3, num of channels: 64
tensor([30, 16, 46, 48, 47, 10,  4, 13, 57,  7,  8, 26, 24, 60, 44, 35, 19, 59,
         5])
time: 0.0011s
start pruning module.layer1.8.conv1, num of channels: 16
tensor([10,  9,  3, 12,  5])
time: 0.0010s
start pruning module.layer1.8.conv2, num of channels: 16
tensor([10,  0,  3, 13,  9])
time: 0.0010s
start pruning module.layer1.8.conv3, num of channels: 64
tensor([25, 27, 50, 24, 26,  2, 56, 32, 34, 20, 55,  6, 13, 38, 33, 53, 22, 52,
        49])
time: 0.0011s
start pruning module.layer2.0.conv1, num of channels: 32
tensor([ 8, 31,  5, 24, 23, 30, 28, 21, 12, 26])
time: 0.0010s
start pruning module.layer2.0.conv2, num of channels: 32
tensor([ 1, 30, 28, 22, 20,  6,  2, 11, 24,  8])
time: 0.0012s
start pruning module.layer2.0.conv3, num of channels: 128
tensor([  9,  58, 112,  94, 107,  17,  30,  82,  64,  13, 117,  72,  24,  65,
        105, 125,  15,  56,  48,  93,  71,  35,   6, 116,  86,   0,  84, 121,
         16,  25,  34,  53,  69,  27, 124,  39,  21, 106])
time: 0.0014s
start pruning module.layer2.0.downsample.0, num of channels: 128
tensor([ 44,  79,  71,  62, 124, 109,  35, 110, 120, 102,   4, 118,  14,   0,
          2,  42,  97,  28, 104,  95, 108,  54,  37,  20, 127, 123,  59,  96,
         38,  81, 101, 116,  67,  83,  61,  10,  33,  60])
time: 0.0014s
start pruning module.layer2.1.conv1, num of channels: 32
tensor([ 5,  6,  4, 19, 25, 23, 31, 18, 16,  3])
time: 0.0010s
start pruning module.layer2.1.conv2, num of channels: 32
tensor([10, 20, 23, 11, 22,  7,  6, 19, 17,  8])
time: 0.0010s
start pruning module.layer2.1.conv3, num of channels: 128
tensor([ 67,  19, 123,  89,  88,  43, 114,  99,  22,  47,  50,  15,  91, 102,
        115,  90,  38, 117,  16, 107,  29,  98,  81,  36,  58, 112,  76,  37,
         53, 103,  94,  56, 101, 105,  33,  97,  10,  74])
time: 0.0013s
start pruning module.layer2.2.conv1, num of channels: 32
tensor([ 5, 12, 26, 31, 24, 27, 25,  7,  2, 20])
time: 0.0010s
start pruning module.layer2.2.conv2, num of channels: 32
tensor([16,  8,  2, 14,  6, 31, 27, 12,  3,  5])
time: 0.0011s
start pruning module.layer2.2.conv3, num of channels: 128
tensor([ 82,  83,  58,  78,   2,  62,   4,   1,  70,  67,  24,  22,  66,  90,
         17, 122,  98, 101,  68,  47,   6,  36, 107, 108,  14,  79, 111, 114,
         91,  77,  43, 117, 113, 119,  30,  99,   5,  84])
time: 0.0012s
start pruning module.layer2.3.conv1, num of channels: 32
tensor([22,  9, 26,  6, 24, 27,  7, 31, 18, 13])
time: 0.0011s
start pruning module.layer2.3.conv2, num of channels: 32
tensor([ 2, 26,  5,  3,  1, 28, 11, 13, 23,  8])
time: 0.0011s
start pruning module.layer2.3.conv3, num of channels: 128
tensor([ 19,  39, 110,  17,  29,  10, 118,  90,   6, 111,  57, 104,  71, 117,
         70,  61,  48,  62,  14, 123,  33, 102,  73, 107,  11,  26,  54,  96,
          2,  49,  46,  31, 112,  79,  80,  82, 116,  13])
time: 0.0012s
start pruning module.layer2.4.conv1, num of channels: 32
tensor([ 8, 29, 12, 14,  0,  3, 21, 31, 27,  6])
time: 0.0010s
start pruning module.layer2.4.conv2, num of channels: 32
tensor([16, 12, 11, 27, 13, 23, 15, 14,  7, 31])
time: 0.0011s
start pruning module.layer2.4.conv3, num of channels: 128
tensor([ 50,  67, 112,  21,  63, 106,   9, 101,  65,  45,  79,  98,   6,  86,
         47,  40, 125,  72,  61,   4,  64,  57, 124,  16,  52,  49,  25,  68,
        121,  75, 122,   1, 103,  38,   8,  77,  36,  80])
time: 0.0013s
start pruning module.layer2.5.conv1, num of channels: 32
tensor([ 3, 24,  9, 23,  2, 26, 14, 11, 13, 28])
time: 0.0010s
start pruning module.layer2.5.conv2, num of channels: 32
tensor([ 1, 30, 22, 13, 18, 27, 25, 21,  3, 19])
time: 0.0011s
start pruning module.layer2.5.conv3, num of channels: 128
tensor([ 18,   0,  72, 102,  48,   9,  37,  56,  28,  67,  42, 109,  21,  75,
         85,  41,  91,  50, 116, 119, 123,  86,  15,  47,  77,  63,   7,   6,
         40,  84,  16, 113, 125, 124,  32, 105, 114,  34])
time: 0.0013s
start pruning module.layer2.6.conv1, num of channels: 32
tensor([28, 16, 12,  1, 21, 11,  7,  9,  3, 10])
time: 0.0010s
start pruning module.layer2.6.conv2, num of channels: 32
tensor([24,  4, 13, 12,  9, 31,  3, 28,  5, 17])
time: 0.0011s
start pruning module.layer2.6.conv3, num of channels: 128
tensor([ 29,   0,  58, 118,  59,  22,  45,  83,   1,  82,  95,  64, 112,  41,
         17,  80,   6,  71, 116,  74,  21,  86, 123,  73,  38,   8, 104,  42,
         13,  14,  31,  44, 108, 107,  96,  47,  61, 119])
time: 0.0012s
start pruning module.layer2.7.conv1, num of channels: 32
tensor([14, 19,  6, 12,  9, 27,  7, 31, 24, 15])
time: 0.0010s
start pruning module.layer2.7.conv2, num of channels: 32
tensor([23, 31, 18, 22, 27, 30, 17,  4,  0, 29])
time: 0.0010s
start pruning module.layer2.7.conv3, num of channels: 128
tensor([103, 114,  18,  86,  38,  83,  66,  21,  42, 117,  11,  35, 124,  26,
         61, 127,  22,  79,  48,  69,  20, 111,  15, 118,  10,  57, 126, 105,
         29,  53,   9,  98,  13, 101, 120, 102,   6, 112])
time: 0.0013s
start pruning module.layer2.8.conv1, num of channels: 32
tensor([15, 17,  9, 14, 28, 25,  7, 30, 26, 21])
time: 0.0010s
start pruning module.layer2.8.conv2, num of channels: 32
tensor([ 2,  0,  6,  7, 18, 19, 13, 10, 21, 28])
time: 0.0010s
start pruning module.layer2.8.conv3, num of channels: 128
tensor([ 70,  79,  56,   5,  34, 105,  97,  59, 116,   4,  93,  29,  53,  46,
         22,  89, 114,  40,  57,   0, 126,  23,  77,  30,  31,  66,   7,  32,
          6, 125,  60,  28,  16,  74,  67,  14,   8,  84])
time: 0.0013s
start pruning module.layer3.0.conv1, num of channels: 64
tensor([39, 41, 16,  5, 23, 26, 31, 56, 46, 50, 61,  1, 54, 10, 30, 49, 15, 36,
        22])
time: 0.0011s
start pruning module.layer3.0.conv2, num of channels: 64
tensor([57, 35, 58, 48, 38, 14, 26, 63, 33, 31, 21, 42, 13, 34,  7, 56, 22, 62,
        41])
time: 0.0016s
start pruning module.layer3.0.conv3, num of channels: 256
tensor([141, 225,  59, 236, 244,  90, 129,   9,  73,  36, 196,  85,  61,  22,
        233,  35, 130, 227, 123,  30, 152,  62, 160, 132,   4, 239, 133,  75,
         14, 111,   8,  89, 237,  29, 223, 184,  50,  97, 247, 149, 231, 162,
         74, 101,  25, 164,  16, 159, 150,  23, 252, 114,  48, 222, 221, 215,
        177, 250,  12, 212,  53, 209,  95,  42,  27, 249, 163, 210, 116, 176,
        134, 109, 199, 220,  86, 167, 218])
time: 0.0019s
start pruning module.layer3.0.downsample.0, num of channels: 256
tensor([141, 225, 139, 244, 227, 109,  59,  29, 249, 133, 252, 230, 181, 140,
        185,  46,  52,  60,  75, 129, 130,  51, 237, 182, 170, 145,  54,  37,
         64,  38, 102, 114, 137, 214, 105,   4, 176,   1, 248,  90,  42, 165,
        149,  61, 229, 122, 242,  96,  57, 212, 151, 166, 192,  14, 255, 159,
         23, 254, 125, 157, 239, 118, 209, 246,  73,  43,  69, 124, 117,  28,
         39, 219,  68,  44, 191, 206,  63])
time: 0.0022s
start pruning module.layer3.1.conv1, num of channels: 64
tensor([55, 60,  2, 38, 49, 21, 48, 41, 24, 29, 23, 62, 52, 33,  9,  1,  7, 39,
        58])
time: 0.0012s
start pruning module.layer3.1.conv2, num of channels: 64
tensor([ 2, 51, 26, 27, 19, 44, 50, 60, 21, 33, 34, 11, 22, 41,  3,  0, 35, 38,
         7])
time: 0.0013s
start pruning module.layer3.1.conv3, num of channels: 256
tensor([ 68, 140, 239,  51, 249,  65, 144,  92, 243,  56, 147, 101, 190,  81,
         82, 152, 137, 159, 214, 228,  32,  23, 102, 130, 172,  90,  47, 177,
        189,  26,  35, 205, 198, 252,   7, 188, 230, 185, 180, 221, 182,  57,
        235, 193, 248,   2,  50, 207, 124,  88,  72,  58,  85, 134,  78,  48,
        153,  20, 116, 162, 132, 254, 133, 240, 173, 174, 135, 250,  77, 176,
         62, 157,  10, 105, 233,  40, 161])
time: 0.0018s
start pruning module.layer3.2.conv1, num of channels: 64
tensor([ 4, 27, 19, 16, 55, 21, 29, 46, 20, 40, 42, 32,  3, 45, 12, 43, 56, 54,
        57])
time: 0.0012s
start pruning module.layer3.2.conv2, num of channels: 64
tensor([51, 37, 45, 13, 50, 27, 34, 36, 59, 11, 28, 44, 29, 55,  5, 32, 31, 61,
        15])
time: 0.0022s
start pruning module.layer3.2.conv3, num of channels: 256
tensor([141, 252,  14,  59, 162,  29, 225,  73, 196,  76, 116, 106, 228,  54,
        197,  69, 215, 124,   1, 129,  75, 193,  11, 181, 135, 132, 153, 111,
        186, 232, 150, 148,  84, 254,  67, 159,  25,  68, 114,  50,  80, 219,
         46,   6, 154, 209,  53, 230,  90, 220,  56, 242, 117, 211, 123,  98,
        239,  37,  28, 112, 210, 134,  18, 133, 173, 206, 207,  82,  24, 217,
        127, 243, 191,  89,   9, 244, 144])
time: 0.0030s
start pruning module.layer3.3.conv1, num of channels: 64
tensor([51, 47, 23, 11, 38, 54, 33, 50, 60, 25, 14, 28, 19,  9, 36, 43, 56, 37,
        58])
time: 0.0016s
start pruning module.layer3.3.conv2, num of channels: 64
tensor([30, 29, 54, 58,  5, 41, 55,  4, 39, 26, 56, 32, 63, 11, 14, 60, 22, 21,
         3])
time: 0.0017s
start pruning module.layer3.3.conv3, num of channels: 256
tensor([ 76, 244,  19, 141, 162, 132,  16, 114, 167,  62, 168, 123, 199,  12,
        106, 251,  59, 116,   4,  22,  90, 238,   8, 134, 202, 174, 204, 253,
        236, 184,   9, 205, 165, 133, 160,  10,  78,  35,  49, 142,  85,  25,
        222,   6, 188, 200,  99, 228,  48, 252,  37, 138, 119, 117,  34, 189,
        150,  13,   2, 190,  24, 198, 249, 159, 230, 245, 153, 176,  58, 130,
        109, 235, 131, 187,  94, 145, 155])
time: 0.0025s
start pruning module.layer3.4.conv1, num of channels: 64
tensor([54, 52,  3, 39, 42, 14,  5, 22, 23, 16, 35, 50,  4, 48, 62, 33, 44, 59,
        46])
time: 0.0016s
start pruning module.layer3.4.conv2, num of channels: 64
tensor([54, 45, 53,  2, 37, 46, 60, 30, 36, 21, 49, 20, 27, 32, 24, 13,  0, 19,
        15])
time: 0.0018s
start pruning module.layer3.4.conv3, num of channels: 256
tensor([244,  64, 142,  24, 255,  33, 252, 254, 209,  30,  35, 147,  65, 201,
        141, 165,  73, 174,   3,   5, 115, 162,  50,  92, 184, 152,  81, 150,
        210, 129, 222, 159, 106, 130, 200,  90, 123,  55,  14, 225,  97, 119,
        191,  59,  48, 217, 151,  12,  16, 134, 238, 226,  13, 197, 228,  68,
        249, 114, 105, 144,  99,  28, 145,   6, 153, 239,  54,  95,  67,   8,
        189, 172, 169, 234, 211, 139, 233])
time: 0.0025s
start pruning module.layer3.5.conv1, num of channels: 64
tensor([56, 10,  5, 23, 58, 38, 33, 11, 13, 21,  8, 47,  9, 43,  7, 28, 55, 61,
        14])
time: 0.0016s
start pruning module.layer3.5.conv2, num of channels: 64
tensor([23, 29, 63, 37, 55, 46, 42, 61,  3, 43,  2, 31, 10, 59,  5, 35, 48, 28,
        45])
time: 0.0017s
start pruning module.layer3.5.conv3, num of channels: 256
tensor([244,  28,  73, 255, 123,  20, 153, 175, 102, 176,   8,  16, 131, 220,
         38, 145, 150, 138, 142, 162, 141, 167, 251, 140, 132,  22, 202, 127,
         94, 210, 160, 101,  81, 129,  14,   9, 201,  13,   3,  57,  44, 166,
        233, 229,  93, 146, 186, 230,  72, 189,  80, 225, 135, 147,  47,  82,
         12, 156, 121,  50, 177, 164, 184, 171, 173, 149, 118, 252, 242,  89,
        243,  79, 222, 211, 182,  55, 112])
time: 0.0025s
start pruning module.layer3.6.conv1, num of channels: 64
tensor([20, 42, 46, 35, 24, 14, 27, 57, 26, 11, 39,  6,  5,  4,  1, 17, 29, 61,
        22])
time: 0.0016s
start pruning module.layer3.6.conv2, num of channels: 64
tensor([32, 46, 41, 34, 50, 24, 36, 38, 42, 62, 17, 54, 59, 10, 14, 28, 57, 20,
        43])
time: 0.0017s
start pruning module.layer3.6.conv3, num of channels: 256
tensor([244,  62,  73, 132, 156, 233, 102,  23, 242,  78,  82,   6,   3,  22,
        153, 134,  50, 141, 160, 144, 230, 190,  99,  25, 116, 109, 157, 252,
        167,  92,  30, 249, 140, 148, 182,  54, 176, 237, 202, 246,  12,  45,
        253, 125, 238, 154,  88,  38,  39, 208, 122, 133,  36, 255,  93, 142,
        251, 105, 236, 193, 124,   9, 188, 152, 170,  43,  98, 150,  33, 192,
        158,  29, 191,  13, 221, 163,   8])
time: 0.0025s
start pruning module.layer3.7.conv1, num of channels: 64
tensor([ 3, 10, 51, 45, 56, 19, 36, 58, 50, 49, 26, 17, 40, 48, 33, 27, 55, 14,
         5])
time: 0.0016s
start pruning module.layer3.7.conv2, num of channels: 64
tensor([13, 26, 59, 52, 34, 21, 45, 29,  2, 32, 18, 42,  4, 36, 41, 37, 50, 58,
        20])
time: 0.0017s
start pruning module.layer3.7.conv3, num of channels: 256
tensor([244,  14, 156,  75, 225,  73,  95,  22, 134,  81, 233, 176, 167, 101,
          3, 116, 160,  59, 148,  72,  29, 132, 222,  90, 165, 106, 229, 130,
        224, 198,  37, 158, 182, 141, 236,  54, 245, 145, 247, 150, 174, 206,
         23, 196, 129, 193,   4,  17,  63,  50, 140, 234,  25, 251, 100, 209,
         38,  99,  10, 111, 161, 133, 235, 157,  30, 138,  43,  94, 123, 238,
        142, 117, 255,  16, 240, 124, 204])
time: 0.0025s
start pruning module.layer3.8.conv1, num of channels: 64
tensor([53, 54, 38, 10, 17, 48, 35,  5, 37, 23, 19,  0, 43, 28, 45, 21, 20,  9,
        31])
time: 0.0016s
start pruning module.layer3.8.conv2, num of channels: 64
tensor([33, 20, 19,  1, 59, 42, 37, 23,  5, 29, 40, 58, 54, 32,  6, 51, 13, 43,
        27])
time: 0.0018s
start pruning module.layer3.8.conv3, num of channels: 256
tensor([170,  43,  33, 119,  40,  83, 214, 182,  19, 173, 233, 122, 178, 155,
         94, 135, 243, 240, 103, 230,  13,  41, 199, 198, 231, 132, 221, 206,
         85,  30, 108, 181, 133, 115, 246, 154, 174,  93,  66, 162, 239,  96,
        211,   6, 228,  86, 186, 175, 142, 179,  80,   0, 123, 237,  52, 111,
         74, 244, 250, 120, 200, 196, 100,  58,  20,   1, 218, 202, 180, 253,
        255,  72,  78,   5, 187,  22,   2])
time: 0.0034s
Global sparsity: 69.22%
epoch: 0, train loss: 11.5384, train acc: 10.0000, test accuracy: 10.0000
step: 0, CrossEntropy loss: 2.9923 (2.9923), train accuracy: 8.594(8.594), lr: 0.0100
step: 100, CrossEntropy loss: 1.8808 (2.0743), train accuracy: 28.125(21.976), lr: 0.0100
step: 200, CrossEntropy loss: 1.5338 (1.8929), train accuracy: 46.094(28.716), lr: 0.0100
step: 300, CrossEntropy loss: 1.2830 (1.7598), train accuracy: 50.000(34.040), lr: 0.0100
epoch: 0, CrossEntropy loss: 1.6648, accuracy: 37.752
test acc: 54.2900
step: 0, CrossEntropy loss: 1.3245 (1.3245), train accuracy: 57.031(57.031), lr: 0.0100
step: 100, CrossEntropy loss: 1.2615 (1.2169), train accuracy: 56.250(56.235), lr: 0.0100
step: 200, CrossEntropy loss: 1.2281 (1.1749), train accuracy: 54.688(58.096), lr: 0.0100
step: 300, CrossEntropy loss: 1.0870 (1.1407), train accuracy: 60.156(59.326), lr: 0.0100
epoch: 1, CrossEntropy loss: 1.1100, accuracy: 60.394
test acc: 60.0300
step: 0, CrossEntropy loss: 0.9704 (0.9704), train accuracy: 64.062(64.062), lr: 0.0100
step: 100, CrossEntropy loss: 1.0098 (0.9534), train accuracy: 60.938(65.749), lr: 0.0100
step: 200, CrossEntropy loss: 0.8198 (0.9295), train accuracy: 72.656(66.597), lr: 0.0100
step: 300, CrossEntropy loss: 1.1040 (0.9154), train accuracy: 67.969(67.343), lr: 0.0100
epoch: 2, CrossEntropy loss: 0.9009, accuracy: 67.896
test acc: 67.6500
step: 0, CrossEntropy loss: 0.7103 (0.7103), train accuracy: 74.219(74.219), lr: 0.0099
step: 100, CrossEntropy loss: 0.7562 (0.8109), train accuracy: 73.438(71.442), lr: 0.0099
step: 200, CrossEntropy loss: 0.7328 (0.7996), train accuracy: 72.656(71.918), lr: 0.0099
step: 300, CrossEntropy loss: 0.8380 (0.7831), train accuracy: 73.438(72.542), lr: 0.0099
epoch: 3, CrossEntropy loss: 0.7735, accuracy: 72.968
test acc: 71.1800
step: 0, CrossEntropy loss: 0.7444 (0.7444), train accuracy: 74.219(74.219), lr: 0.0098
step: 100, CrossEntropy loss: 0.6693 (0.7073), train accuracy: 78.906(75.039), lr: 0.0098
step: 200, CrossEntropy loss: 0.7009 (0.7057), train accuracy: 77.344(75.334), lr: 0.0098
step: 300, CrossEntropy loss: 0.7581 (0.6992), train accuracy: 75.000(75.675), lr: 0.0098
epoch: 4, CrossEntropy loss: 0.6966, accuracy: 75.826
test acc: 74.6800
step: 0, CrossEntropy loss: 0.4796 (0.4796), train accuracy: 84.375(84.375), lr: 0.0098
step: 100, CrossEntropy loss: 0.7151 (0.6480), train accuracy: 75.000(77.243), lr: 0.0098
step: 200, CrossEntropy loss: 0.5216 (0.6432), train accuracy: 80.469(77.456), lr: 0.0098
step: 300, CrossEntropy loss: 0.5772 (0.6432), train accuracy: 81.250(77.660), lr: 0.0098
epoch: 5, CrossEntropy loss: 0.6386, accuracy: 77.924
test acc: 72.4500
step: 0, CrossEntropy loss: 0.6577 (0.6577), train accuracy: 75.781(75.781), lr: 0.0096
step: 100, CrossEntropy loss: 0.5025 (0.6151), train accuracy: 80.469(78.697), lr: 0.0096
step: 200, CrossEntropy loss: 0.5055 (0.6074), train accuracy: 85.156(78.774), lr: 0.0096
step: 300, CrossEntropy loss: 0.5112 (0.6041), train accuracy: 80.469(78.945), lr: 0.0096
epoch: 6, CrossEntropy loss: 0.6034, accuracy: 79.010
test acc: 79.7300
step: 0, CrossEntropy loss: 0.5095 (0.5095), train accuracy: 85.938(85.938), lr: 0.0095
step: 100, CrossEntropy loss: 0.4963 (0.5487), train accuracy: 84.375(80.964), lr: 0.0095
step: 200, CrossEntropy loss: 0.5267 (0.5603), train accuracy: 82.812(80.570), lr: 0.0095
step: 300, CrossEntropy loss: 0.5698 (0.5590), train accuracy: 79.688(80.723), lr: 0.0095
epoch: 7, CrossEntropy loss: 0.5603, accuracy: 80.750
test acc: 79.4500
step: 0, CrossEntropy loss: 0.5484 (0.5484), train accuracy: 78.906(78.906), lr: 0.0094
step: 100, CrossEntropy loss: 0.6116 (0.5327), train accuracy: 77.344(81.204), lr: 0.0094
step: 200, CrossEntropy loss: 0.5190 (0.5453), train accuracy: 82.031(81.192), lr: 0.0094
step: 300, CrossEntropy loss: 0.4970 (0.5377), train accuracy: 82.812(81.491), lr: 0.0094
epoch: 8, CrossEntropy loss: 0.5361, accuracy: 81.462
test acc: 78.0600
step: 0, CrossEntropy loss: 0.4576 (0.4576), train accuracy: 82.812(82.812), lr: 0.0092
step: 100, CrossEntropy loss: 0.5918 (0.5050), train accuracy: 78.906(82.333), lr: 0.0092
step: 200, CrossEntropy loss: 0.6198 (0.5064), train accuracy: 79.688(82.486), lr: 0.0092
step: 300, CrossEntropy loss: 0.5864 (0.5109), train accuracy: 77.344(82.330), lr: 0.0092
epoch: 9, CrossEntropy loss: 0.5139, accuracy: 82.160
test acc: 78.1500
step: 0, CrossEntropy loss: 0.4703 (0.4703), train accuracy: 85.938(85.938), lr: 0.0090
step: 100, CrossEntropy loss: 0.5467 (0.4858), train accuracy: 82.031(82.944), lr: 0.0090
step: 200, CrossEntropy loss: 0.4309 (0.4937), train accuracy: 82.812(82.809), lr: 0.0090
step: 300, CrossEntropy loss: 0.5996 (0.4961), train accuracy: 75.781(82.802), lr: 0.0090
epoch: 10, CrossEntropy loss: 0.4928, accuracy: 82.942
test acc: 80.8200
step: 0, CrossEntropy loss: 0.4253 (0.4253), train accuracy: 87.500(87.500), lr: 0.0089
step: 100, CrossEntropy loss: 0.3484 (0.4685), train accuracy: 91.406(83.803), lr: 0.0089
step: 200, CrossEntropy loss: 0.4874 (0.4776), train accuracy: 82.031(83.419), lr: 0.0089
step: 300, CrossEntropy loss: 0.4560 (0.4779), train accuracy: 80.469(83.472), lr: 0.0089
epoch: 11, CrossEntropy loss: 0.4775, accuracy: 83.438
test acc: 80.4200
step: 0, CrossEntropy loss: 0.4536 (0.4536), train accuracy: 85.156(85.156), lr: 0.0086
step: 100, CrossEntropy loss: 0.3779 (0.4483), train accuracy: 88.281(84.421), lr: 0.0086
step: 200, CrossEntropy loss: 0.3728 (0.4528), train accuracy: 85.938(84.029), lr: 0.0086
step: 300, CrossEntropy loss: 0.5110 (0.4539), train accuracy: 76.562(83.957), lr: 0.0086
epoch: 12, CrossEntropy loss: 0.4586, accuracy: 83.876
test acc: 79.5800
step: 0, CrossEntropy loss: 0.3432 (0.3432), train accuracy: 89.844(89.844), lr: 0.0084
step: 100, CrossEntropy loss: 0.4101 (0.4421), train accuracy: 86.719(84.893), lr: 0.0084
step: 200, CrossEntropy loss: 0.3707 (0.4473), train accuracy: 86.719(84.670), lr: 0.0084
step: 300, CrossEntropy loss: 0.3705 (0.4417), train accuracy: 88.281(84.798), lr: 0.0084
epoch: 13, CrossEntropy loss: 0.4440, accuracy: 84.672
test acc: 81.2700
step: 0, CrossEntropy loss: 0.5099 (0.5099), train accuracy: 82.812(82.812), lr: 0.0082
step: 100, CrossEntropy loss: 0.4126 (0.4338), train accuracy: 85.156(85.002), lr: 0.0082
step: 200, CrossEntropy loss: 0.3574 (0.4385), train accuracy: 90.625(84.667), lr: 0.0082
step: 300, CrossEntropy loss: 0.4044 (0.4367), train accuracy: 85.938(84.816), lr: 0.0082
epoch: 14, CrossEntropy loss: 0.4359, accuracy: 84.866
test acc: 79.8600
step: 0, CrossEntropy loss: 0.4466 (0.4466), train accuracy: 81.250(81.250), lr: 0.0079
step: 100, CrossEntropy loss: 0.3478 (0.4249), train accuracy: 86.719(85.357), lr: 0.0079
step: 200, CrossEntropy loss: 0.4678 (0.4288), train accuracy: 82.031(85.230), lr: 0.0079
step: 300, CrossEntropy loss: 0.3425 (0.4253), train accuracy: 89.844(85.286), lr: 0.0079
epoch: 15, CrossEntropy loss: 0.4259, accuracy: 85.218
test acc: 81.2700
step: 0, CrossEntropy loss: 0.4053 (0.4053), train accuracy: 85.156(85.156), lr: 0.0077
step: 100, CrossEntropy loss: 0.4763 (0.4121), train accuracy: 79.688(85.837), lr: 0.0077
step: 200, CrossEntropy loss: 0.4487 (0.4086), train accuracy: 85.156(85.945), lr: 0.0077
step: 300, CrossEntropy loss: 0.4452 (0.4131), train accuracy: 82.031(85.712), lr: 0.0077
epoch: 16, CrossEntropy loss: 0.4143, accuracy: 85.696
test acc: 83.5800
step: 0, CrossEntropy loss: 0.4693 (0.4693), train accuracy: 83.594(83.594), lr: 0.0074
step: 100, CrossEntropy loss: 0.3569 (0.3952), train accuracy: 87.500(86.208), lr: 0.0074
step: 200, CrossEntropy loss: 0.4389 (0.4036), train accuracy: 83.594(85.957), lr: 0.0074
step: 300, CrossEntropy loss: 0.5270 (0.3997), train accuracy: 84.375(86.065), lr: 0.0074
epoch: 17, CrossEntropy loss: 0.3998, accuracy: 86.102
test acc: 84.7100
step: 0, CrossEntropy loss: 0.3063 (0.3063), train accuracy: 85.938(85.938), lr: 0.0071
step: 100, CrossEntropy loss: 0.4796 (0.3819), train accuracy: 85.156(86.494), lr: 0.0071
step: 200, CrossEntropy loss: 0.3695 (0.3857), train accuracy: 86.719(86.482), lr: 0.0071
step: 300, CrossEntropy loss: 0.2918 (0.3853), train accuracy: 92.188(86.503), lr: 0.0071
epoch: 18, CrossEntropy loss: 0.3865, accuracy: 86.472
test acc: 84.4600
step: 0, CrossEntropy loss: 0.2860 (0.2860), train accuracy: 89.062(89.062), lr: 0.0068
step: 100, CrossEntropy loss: 0.3648 (0.3796), train accuracy: 87.500(86.943), lr: 0.0068
step: 200, CrossEntropy loss: 0.4505 (0.3742), train accuracy: 85.156(87.049), lr: 0.0068
step: 300, CrossEntropy loss: 0.4016 (0.3777), train accuracy: 84.375(86.908), lr: 0.0068
epoch: 19, CrossEntropy loss: 0.3804, accuracy: 86.818
test acc: 83.7000
step: 0, CrossEntropy loss: 0.4712 (0.4712), train accuracy: 82.031(82.031), lr: 0.0065
step: 100, CrossEntropy loss: 0.3467 (0.3745), train accuracy: 85.156(87.020), lr: 0.0065
step: 200, CrossEntropy loss: 0.2931 (0.3714), train accuracy: 89.844(87.111), lr: 0.0065
step: 300, CrossEntropy loss: 0.3640 (0.3684), train accuracy: 87.500(87.212), lr: 0.0065
epoch: 20, CrossEntropy loss: 0.3730, accuracy: 87.068
test acc: 83.4100
step: 0, CrossEntropy loss: 0.4282 (0.4282), train accuracy: 86.719(86.719), lr: 0.0062
step: 100, CrossEntropy loss: 0.3632 (0.3665), train accuracy: 89.844(87.322), lr: 0.0062
step: 200, CrossEntropy loss: 0.3631 (0.3625), train accuracy: 87.500(87.411), lr: 0.0062
step: 300, CrossEntropy loss: 0.3827 (0.3588), train accuracy: 88.281(87.614), lr: 0.0062
epoch: 21, CrossEntropy loss: 0.3607, accuracy: 87.552
test acc: 84.2000
step: 0, CrossEntropy loss: 0.3097 (0.3097), train accuracy: 88.281(88.281), lr: 0.0059
step: 100, CrossEntropy loss: 0.3826 (0.3494), train accuracy: 82.031(87.825), lr: 0.0059
step: 200, CrossEntropy loss: 0.3239 (0.3522), train accuracy: 88.281(87.636), lr: 0.0059
step: 300, CrossEntropy loss: 0.3227 (0.3528), train accuracy: 89.062(87.666), lr: 0.0059
epoch: 22, CrossEntropy loss: 0.3544, accuracy: 87.672
test acc: 84.4900
step: 0, CrossEntropy loss: 0.2389 (0.2389), train accuracy: 91.406(91.406), lr: 0.0056
step: 100, CrossEntropy loss: 0.3527 (0.3507), train accuracy: 87.500(87.717), lr: 0.0056
step: 200, CrossEntropy loss: 0.4476 (0.3498), train accuracy: 86.719(87.826), lr: 0.0056
step: 300, CrossEntropy loss: 0.3068 (0.3429), train accuracy: 89.844(88.061), lr: 0.0056
epoch: 23, CrossEntropy loss: 0.3466, accuracy: 87.984
test acc: 84.3700
step: 0, CrossEntropy loss: 0.3935 (0.3935), train accuracy: 85.938(85.938), lr: 0.0053
step: 100, CrossEntropy loss: 0.3426 (0.3281), train accuracy: 87.500(88.598), lr: 0.0053
step: 200, CrossEntropy loss: 0.3611 (0.3387), train accuracy: 87.500(88.332), lr: 0.0053
step: 300, CrossEntropy loss: 0.4438 (0.3382), train accuracy: 83.594(88.349), lr: 0.0053
epoch: 24, CrossEntropy loss: 0.3390, accuracy: 88.350
test acc: 85.8000
step: 0, CrossEntropy loss: 0.4095 (0.4095), train accuracy: 85.938(85.938), lr: 0.0050
step: 100, CrossEntropy loss: 0.2515 (0.3330), train accuracy: 89.844(88.127), lr: 0.0050
step: 200, CrossEntropy loss: 0.2402 (0.3239), train accuracy: 92.969(88.448), lr: 0.0050
step: 300, CrossEntropy loss: 0.2691 (0.3243), train accuracy: 90.625(88.479), lr: 0.0050
epoch: 25, CrossEntropy loss: 0.3279, accuracy: 88.450
test acc: 85.7300
step: 0, CrossEntropy loss: 0.3482 (0.3482), train accuracy: 87.500(87.500), lr: 0.0047
step: 100, CrossEntropy loss: 0.3243 (0.3179), train accuracy: 85.938(88.567), lr: 0.0047
step: 200, CrossEntropy loss: 0.2849 (0.3178), train accuracy: 92.188(88.779), lr: 0.0047
step: 300, CrossEntropy loss: 0.3008 (0.3174), train accuracy: 89.062(88.948), lr: 0.0047
epoch: 26, CrossEntropy loss: 0.3198, accuracy: 88.918
test acc: 86.2900
step: 0, CrossEntropy loss: 0.2396 (0.2396), train accuracy: 89.062(89.062), lr: 0.0044
step: 100, CrossEntropy loss: 0.3054 (0.3124), train accuracy: 89.844(89.403), lr: 0.0044
step: 200, CrossEntropy loss: 0.2391 (0.3138), train accuracy: 92.188(89.175), lr: 0.0044
step: 300, CrossEntropy loss: 0.4135 (0.3133), train accuracy: 85.938(89.073), lr: 0.0044
epoch: 27, CrossEntropy loss: 0.3139, accuracy: 89.020
test acc: 86.6400
step: 0, CrossEntropy loss: 0.2853 (0.2853), train accuracy: 89.844(89.844), lr: 0.0041
step: 100, CrossEntropy loss: 0.2596 (0.2991), train accuracy: 91.406(89.658), lr: 0.0041
step: 200, CrossEntropy loss: 0.2426 (0.3077), train accuracy: 92.188(89.125), lr: 0.0041
step: 300, CrossEntropy loss: 0.3479 (0.3058), train accuracy: 87.500(89.213), lr: 0.0041
epoch: 28, CrossEntropy loss: 0.3067, accuracy: 89.240
test acc: 86.5100
step: 0, CrossEntropy loss: 0.3635 (0.3635), train accuracy: 86.719(86.719), lr: 0.0038
step: 100, CrossEntropy loss: 0.3012 (0.2990), train accuracy: 85.938(89.743), lr: 0.0038
step: 200, CrossEntropy loss: 0.4868 (0.2930), train accuracy: 83.594(89.949), lr: 0.0038
step: 300, CrossEntropy loss: 0.3559 (0.2955), train accuracy: 84.375(89.802), lr: 0.0038
epoch: 29, CrossEntropy loss: 0.2993, accuracy: 89.594
test acc: 86.7400
step: 0, CrossEntropy loss: 0.3446 (0.3446), train accuracy: 86.719(86.719), lr: 0.0035
step: 100, CrossEntropy loss: 0.3030 (0.2940), train accuracy: 89.844(89.766), lr: 0.0035
step: 200, CrossEntropy loss: 0.2200 (0.2916), train accuracy: 92.969(89.824), lr: 0.0035
step: 300, CrossEntropy loss: 0.3038 (0.2939), train accuracy: 92.188(89.774), lr: 0.0035
epoch: 30, CrossEntropy loss: 0.2945, accuracy: 89.798
test acc: 86.8300
step: 0, CrossEntropy loss: 0.2787 (0.2787), train accuracy: 89.844(89.844), lr: 0.0032
step: 100, CrossEntropy loss: 0.3520 (0.2706), train accuracy: 89.062(90.726), lr: 0.0032
step: 200, CrossEntropy loss: 0.2348 (0.2811), train accuracy: 89.844(90.260), lr: 0.0032
step: 300, CrossEntropy loss: 0.1948 (0.2829), train accuracy: 92.188(90.238), lr: 0.0032
epoch: 31, CrossEntropy loss: 0.2814, accuracy: 90.202
test acc: 87.3400
step: 0, CrossEntropy loss: 0.2897 (0.2897), train accuracy: 89.844(89.844), lr: 0.0029
step: 100, CrossEntropy loss: 0.2652 (0.2887), train accuracy: 90.625(90.122), lr: 0.0029
step: 200, CrossEntropy loss: 0.4285 (0.2800), train accuracy: 85.938(90.485), lr: 0.0029
step: 300, CrossEntropy loss: 0.3669 (0.2790), train accuracy: 89.062(90.412), lr: 0.0029
epoch: 32, CrossEntropy loss: 0.2775, accuracy: 90.440
test acc: 87.3900
step: 0, CrossEntropy loss: 0.2044 (0.2044), train accuracy: 92.188(92.188), lr: 0.0026
step: 100, CrossEntropy loss: 0.2950 (0.2745), train accuracy: 85.938(90.323), lr: 0.0026
step: 200, CrossEntropy loss: 0.3290 (0.2693), train accuracy: 89.062(90.606), lr: 0.0026
step: 300, CrossEntropy loss: 0.1383 (0.2700), train accuracy: 96.875(90.589), lr: 0.0026
epoch: 33, CrossEntropy loss: 0.2727, accuracy: 90.574
test acc: 88.1000
step: 0, CrossEntropy loss: 0.2740 (0.2740), train accuracy: 92.969(92.969), lr: 0.0023
step: 100, CrossEntropy loss: 0.2618 (0.2515), train accuracy: 92.188(91.128), lr: 0.0023
step: 200, CrossEntropy loss: 0.1977 (0.2580), train accuracy: 92.969(90.944), lr: 0.0023
step: 300, CrossEntropy loss: 0.3020 (0.2606), train accuracy: 87.500(90.949), lr: 0.0023
epoch: 34, CrossEntropy loss: 0.2630, accuracy: 90.892
test acc: 88.0400
step: 0, CrossEntropy loss: 0.2437 (0.2437), train accuracy: 92.969(92.969), lr: 0.0021
step: 100, CrossEntropy loss: 0.2986 (0.2567), train accuracy: 90.625(91.213), lr: 0.0021
step: 200, CrossEntropy loss: 0.2313 (0.2539), train accuracy: 92.188(91.243), lr: 0.0021
step: 300, CrossEntropy loss: 0.2116 (0.2558), train accuracy: 93.750(91.279), lr: 0.0021
epoch: 35, CrossEntropy loss: 0.2582, accuracy: 91.136
test acc: 87.8000
step: 0, CrossEntropy loss: 0.2481 (0.2481), train accuracy: 91.406(91.406), lr: 0.0018
step: 100, CrossEntropy loss: 0.3073 (0.2567), train accuracy: 89.844(91.228), lr: 0.0018
step: 200, CrossEntropy loss: 0.1667 (0.2555), train accuracy: 93.750(91.235), lr: 0.0018
step: 300, CrossEntropy loss: 0.3692 (0.2515), train accuracy: 85.938(91.328), lr: 0.0018
epoch: 36, CrossEntropy loss: 0.2503, accuracy: 91.364
test acc: 87.6700
step: 0, CrossEntropy loss: 0.1793 (0.1793), train accuracy: 95.312(95.312), lr: 0.0016
step: 100, CrossEntropy loss: 0.2139 (0.2449), train accuracy: 94.531(91.855), lr: 0.0016
step: 200, CrossEntropy loss: 0.2991 (0.2444), train accuracy: 92.969(91.706), lr: 0.0016
step: 300, CrossEntropy loss: 0.2466 (0.2458), train accuracy: 92.188(91.632), lr: 0.0016
epoch: 37, CrossEntropy loss: 0.2490, accuracy: 91.556
test acc: 87.4400
step: 0, CrossEntropy loss: 0.2765 (0.2765), train accuracy: 91.406(91.406), lr: 0.0014
step: 100, CrossEntropy loss: 0.3077 (0.2480), train accuracy: 87.500(91.306), lr: 0.0014
step: 200, CrossEntropy loss: 0.2387 (0.2422), train accuracy: 91.406(91.523), lr: 0.0014
step: 300, CrossEntropy loss: 0.2723 (0.2414), train accuracy: 92.188(91.585), lr: 0.0014
epoch: 38, CrossEntropy loss: 0.2424, accuracy: 91.544
test acc: 88.2000
step: 0, CrossEntropy loss: 0.2300 (0.2300), train accuracy: 92.969(92.969), lr: 0.0012
step: 100, CrossEntropy loss: 0.3190 (0.2189), train accuracy: 88.281(92.443), lr: 0.0012
step: 200, CrossEntropy loss: 0.2625 (0.2326), train accuracy: 88.281(91.919), lr: 0.0012
step: 300, CrossEntropy loss: 0.2489 (0.2352), train accuracy: 92.188(91.892), lr: 0.0012
epoch: 39, CrossEntropy loss: 0.2363, accuracy: 91.884
test acc: 88.4100
step: 0, CrossEntropy loss: 0.3012 (0.3012), train accuracy: 89.062(89.062), lr: 0.0010
step: 100, CrossEntropy loss: 0.1876 (0.2243), train accuracy: 94.531(92.180), lr: 0.0010
step: 200, CrossEntropy loss: 0.2304 (0.2239), train accuracy: 91.406(92.188), lr: 0.0010
step: 300, CrossEntropy loss: 0.3245 (0.2247), train accuracy: 87.500(92.167), lr: 0.0010
epoch: 40, CrossEntropy loss: 0.2269, accuracy: 92.104
test acc: 88.3400
step: 0, CrossEntropy loss: 0.2886 (0.2886), train accuracy: 87.500(87.500), lr: 0.0008
step: 100, CrossEntropy loss: 0.2040 (0.2317), train accuracy: 92.188(91.963), lr: 0.0008
step: 200, CrossEntropy loss: 0.1668 (0.2287), train accuracy: 95.312(92.028), lr: 0.0008
step: 300, CrossEntropy loss: 0.2054 (0.2294), train accuracy: 91.406(92.011), lr: 0.0008
epoch: 41, CrossEntropy loss: 0.2292, accuracy: 92.010
test acc: 88.7600
step: 0, CrossEntropy loss: 0.2346 (0.2346), train accuracy: 92.188(92.188), lr: 0.0006
step: 100, CrossEntropy loss: 0.2888 (0.2158), train accuracy: 92.188(92.683), lr: 0.0006
step: 200, CrossEntropy loss: 0.1711 (0.2177), train accuracy: 94.531(92.487), lr: 0.0006
step: 300, CrossEntropy loss: 0.1470 (0.2193), train accuracy: 96.094(92.460), lr: 0.0006
epoch: 42, CrossEntropy loss: 0.2207, accuracy: 92.404
test acc: 88.6500
step: 0, CrossEntropy loss: 0.1497 (0.1497), train accuracy: 97.656(97.656), lr: 0.0005
step: 100, CrossEntropy loss: 0.2936 (0.2196), train accuracy: 87.500(92.358), lr: 0.0005
step: 200, CrossEntropy loss: 0.1971 (0.2231), train accuracy: 91.406(92.188), lr: 0.0005
step: 300, CrossEntropy loss: 0.1514 (0.2172), train accuracy: 95.312(92.525), lr: 0.0005
epoch: 43, CrossEntropy loss: 0.2183, accuracy: 92.468
test acc: 88.6200
step: 0, CrossEntropy loss: 0.1703 (0.1703), train accuracy: 95.312(95.312), lr: 0.0004
step: 100, CrossEntropy loss: 0.1551 (0.2136), train accuracy: 93.750(92.613), lr: 0.0004
step: 200, CrossEntropy loss: 0.2484 (0.2140), train accuracy: 89.062(92.701), lr: 0.0004
step: 300, CrossEntropy loss: 0.2119 (0.2152), train accuracy: 93.750(92.647), lr: 0.0004
epoch: 44, CrossEntropy loss: 0.2166, accuracy: 92.596
test acc: 88.4700
step: 0, CrossEntropy loss: 0.2658 (0.2658), train accuracy: 92.188(92.188), lr: 0.0003
step: 100, CrossEntropy loss: 0.1903 (0.2137), train accuracy: 92.188(92.536), lr: 0.0003
step: 200, CrossEntropy loss: 0.1391 (0.2144), train accuracy: 96.875(92.475), lr: 0.0003
step: 300, CrossEntropy loss: 0.1528 (0.2134), train accuracy: 95.312(92.566), lr: 0.0003
epoch: 45, CrossEntropy loss: 0.2122, accuracy: 92.674
test acc: 88.8300
step: 0, CrossEntropy loss: 0.2188 (0.2188), train accuracy: 94.531(94.531), lr: 0.0002
step: 100, CrossEntropy loss: 0.2289 (0.2048), train accuracy: 92.188(93.007), lr: 0.0002
step: 200, CrossEntropy loss: 0.1927 (0.2092), train accuracy: 95.312(93.023), lr: 0.0002
step: 300, CrossEntropy loss: 0.2079 (0.2099), train accuracy: 93.750(92.969), lr: 0.0002
epoch: 46, CrossEntropy loss: 0.2089, accuracy: 92.992
test acc: 88.7400
step: 0, CrossEntropy loss: 0.2765 (0.2765), train accuracy: 89.062(89.062), lr: 0.0001
step: 100, CrossEntropy loss: 0.1271 (0.2150), train accuracy: 97.656(92.775), lr: 0.0001
step: 200, CrossEntropy loss: 0.1789 (0.2163), train accuracy: 91.406(92.716), lr: 0.0001
step: 300, CrossEntropy loss: 0.2600 (0.2125), train accuracy: 94.531(92.855), lr: 0.0001
epoch: 47, CrossEntropy loss: 0.2137, accuracy: 92.782
test acc: 88.8000
step: 0, CrossEntropy loss: 0.2598 (0.2598), train accuracy: 89.844(89.844), lr: 0.0000
step: 100, CrossEntropy loss: 0.2955 (0.2127), train accuracy: 89.844(92.752), lr: 0.0000
step: 200, CrossEntropy loss: 0.2495 (0.2125), train accuracy: 89.062(92.662), lr: 0.0000
step: 300, CrossEntropy loss: 0.1929 (0.2111), train accuracy: 95.312(92.691), lr: 0.0000
epoch: 48, CrossEntropy loss: 0.2101, accuracy: 92.794
test acc: 88.7700
step: 0, CrossEntropy loss: 0.1431 (0.1431), train accuracy: 92.969(92.969), lr: 0.0000
step: 100, CrossEntropy loss: 0.1107 (0.2087), train accuracy: 96.875(92.915), lr: 0.0000
step: 200, CrossEntropy loss: 0.2415 (0.2079), train accuracy: 92.969(92.806), lr: 0.0000
step: 300, CrossEntropy loss: 0.2971 (0.2065), train accuracy: 89.062(92.932), lr: 0.0000
epoch: 49, CrossEntropy loss: 0.2083, accuracy: 92.856
test acc: 88.8900
ln structured pruning testing >>>>>>>>>>>>>>>>>>>>>>>>
order: 1
model sum:  -1111.3250433802605
before pruning, train loss: 0.0033, train acc: 99.9620, test accuracy: 94.2900
start pruning module.conv1, num of channels: 16
tensor([ 3, 12, 10,  7, 15], device='cuda:0')
time: 0.0033s
start pruning module.layer1.0.conv1, num of channels: 16
tensor([ 5, 10, 14,  4, 11], device='cuda:0')
time: 0.0013s
start pruning module.layer1.0.conv2, num of channels: 16
tensor([ 9,  1, 14, 11,  4], device='cuda:0')
time: 0.0012s
start pruning module.layer1.0.conv3, num of channels: 64
tensor([13,  8, 26, 63, 54, 34,  5, 28, 50, 52, 41, 27, 44, 25, 59, 48, 10, 29,
        19], device='cuda:0')
time: 0.0018s
start pruning module.layer1.0.downsample.0, num of channels: 64
tensor([26,  5,  1, 34, 27, 28, 48, 41, 63, 44, 54, 52, 50, 25, 59,  8, 10, 29,
        43], device='cuda:0')
time: 0.0018s
start pruning module.layer1.1.conv1, num of channels: 16
tensor([14,  3, 10,  8,  6], device='cuda:0')
time: 0.0010s
start pruning module.layer1.1.conv2, num of channels: 16
tensor([ 4, 12,  3, 13, 14], device='cuda:0')
time: 0.0008s
start pruning module.layer1.1.conv3, num of channels: 64
tensor([53, 26, 28,  5, 44, 27,  8, 41, 34, 48, 63, 13, 10,  1, 15, 52, 50, 54,
        11], device='cuda:0')
time: 0.0011s
start pruning module.layer1.2.conv1, num of channels: 16
tensor([14,  1, 11, 13,  9], device='cuda:0')
time: 0.0008s
start pruning module.layer1.2.conv2, num of channels: 16
tensor([ 2,  1, 13,  3,  6], device='cuda:0')
time: 0.0008s
start pruning module.layer1.2.conv3, num of channels: 64
tensor([53, 48, 63, 26, 27,  5, 41, 52, 28, 44, 34, 25, 50,  1, 21, 15, 54, 43,
        55], device='cuda:0')
time: 0.0011s
start pruning module.layer1.3.conv1, num of channels: 16
tensor([11,  6,  1,  3,  8], device='cuda:0')
time: 0.0008s
start pruning module.layer1.3.conv2, num of channels: 16
tensor([11,  6,  9,  8,  5], device='cuda:0')
time: 0.0008s
start pruning module.layer1.3.conv3, num of channels: 64
tensor([ 5, 26, 63,  1, 34, 48, 13, 29, 41, 52, 28, 59, 53, 10, 15, 39,  8, 37,
        54], device='cuda:0')
time: 0.0011s
start pruning module.layer1.4.conv1, num of channels: 16
tensor([ 7,  8, 14,  0, 12], device='cuda:0')
time: 0.0020s
start pruning module.layer1.4.conv2, num of channels: 16
tensor([13,  8,  1, 10, 12], device='cuda:0')
time: 0.0014s
start pruning module.layer1.4.conv3, num of channels: 64
tensor([27, 48, 20, 49, 57, 16, 56, 62, 61, 14, 55,  1, 51, 15,  0, 22, 32, 58,
        29], device='cuda:0')
time: 0.0019s
start pruning module.layer1.5.conv1, num of channels: 16
tensor([13,  4,  3, 11,  7], device='cuda:0')
time: 0.0014s
start pruning module.layer1.5.conv2, num of channels: 16
tensor([4, 0, 3, 1, 9], device='cuda:0')
time: 0.0012s
start pruning module.layer1.5.conv3, num of channels: 64
tensor([30, 57, 49, 36, 14, 20, 22, 17, 39,  2, 12, 33, 18, 61,  5, 32,  4, 58,
        42], device='cuda:0')
time: 0.0011s
start pruning module.layer1.6.conv1, num of channels: 16
tensor([11, 15,  2,  5,  0], device='cuda:0')
time: 0.0008s
start pruning module.layer1.6.conv2, num of channels: 16
tensor([ 9,  7, 12,  2,  4], device='cuda:0')
time: 0.0008s
start pruning module.layer1.6.conv3, num of channels: 64
tensor([27, 36, 49, 23, 61, 18, 42, 48, 14, 25, 45,  6,  3, 10, 17, 22, 41, 58,
        53], device='cuda:0')
time: 0.0011s
start pruning module.layer1.7.conv1, num of channels: 16
tensor([ 7, 12,  2,  3,  1], device='cuda:0')
time: 0.0008s
start pruning module.layer1.7.conv2, num of channels: 16
tensor([ 1,  6,  5, 12,  8], device='cuda:0')
time: 0.0008s
start pruning module.layer1.7.conv3, num of channels: 64
tensor([47,  0, 61, 12, 33, 31, 30, 20,  9, 49, 60, 40, 58, 46,  2, 17,  6, 27,
        18], device='cuda:0')
time: 0.0011s
start pruning module.layer1.8.conv1, num of channels: 16
tensor([14,  0, 12,  9,  7], device='cuda:0')
time: 0.0008s
start pruning module.layer1.8.conv2, num of channels: 16
tensor([10,  3,  1,  6,  9], device='cuda:0')
time: 0.0008s
start pruning module.layer1.8.conv3, num of channels: 64
tensor([40, 61, 20,  2, 10,  3, 18, 17, 26, 25, 51, 45,  6, 42, 60,  5, 14, 46,
        31], device='cuda:0')
time: 0.0011s
start pruning module.layer2.0.conv1, num of channels: 32
tensor([21, 24, 15,  5, 26, 23,  0, 30, 10,  1], device='cuda:0')
time: 0.0009s
start pruning module.layer2.0.conv2, num of channels: 32
tensor([ 2, 11, 26, 25, 30, 21, 20, 13, 12, 16], device='cuda:0')
time: 0.0009s
start pruning module.layer2.0.conv3, num of channels: 128
tensor([  9,  58,  52, 126,  79,   4,  11, 106,  98,  23,  70, 124,  48,  38,
         87,  96,  84,  10,   1,  86,  27,  78,   5,  35, 120,  54, 122, 101,
          7,  71,  73,  17, 110,  33, 123,  45, 103, 117], device='cuda:0')
time: 0.0015s
start pruning module.layer2.0.downsample.0, num of channels: 128
tensor([ 79,  29,  70,  35,  48, 124,  21,   1,  26, 102,  62,  83,  96, 116,
         28, 104,  56,  22,  49,  93,  90,   4,  51,  71,  11, 125,  23, 103,
         42,  19,   0, 120,  61,  59,  82,  69,  60, 110], device='cuda:0')
time: 0.0014s
start pruning module.layer2.1.conv1, num of channels: 32
tensor([ 5, 31, 27,  2,  0, 30,  7, 16, 13, 28], device='cuda:0')
time: 0.0008s
start pruning module.layer2.1.conv2, num of channels: 32
tensor([22, 19, 30, 23, 25,  4,  6,  5, 17, 11], device='cuda:0')
time: 0.0009s
start pruning module.layer2.1.conv3, num of channels: 128
tensor([111,  60,  88,  72,  28,  61,  80,  94,  37,  40,  97, 120, 102,  82,
        123, 112,   8, 121, 116, 109,  17,  39,  31,  19,  89,  13,  59,  21,
         64,  44,  14,  26,  73,  45,  93, 125, 118, 104], device='cuda:0')
time: 0.0014s
start pruning module.layer2.2.conv1, num of channels: 32
tensor([20, 27, 26, 24, 12, 15, 10,  2, 21,  0], device='cuda:0')
time: 0.0008s
start pruning module.layer2.2.conv2, num of channels: 32
tensor([16, 12,  3, 19, 18, 29, 13,  8, 27,  4], device='cuda:0')
time: 0.0008s
start pruning module.layer2.2.conv3, num of channels: 128
tensor([102,  19,  79,  61,  93,  64,  72,  13,  71,   5, 123,   8,  28,  11,
         52, 112, 106,  94, 126,  43,  59, 117,  40,  95,  48, 111,  21,  27,
         33,  97,  39,  37,   0,  89,  73,  31,  88, 121], device='cuda:0')
time: 0.0014s
start pruning module.layer2.3.conv1, num of channels: 32
tensor([24, 26, 18,  9, 19,  2, 31, 13,  4, 29], device='cuda:0')
time: 0.0009s
start pruning module.layer2.3.conv2, num of channels: 32
tensor([ 8,  1,  3, 28,  5, 25,  2, 12,  9, 30], device='cuda:0')
time: 0.0008s
start pruning module.layer2.3.conv3, num of channels: 128
tensor([ 44, 112,  82,  65,  72,  80,   3,  60,  88,   0, 108,  95, 118,  13,
        116,  63,  18,  40,  45, 111,  64,  66,  97,  28,  56,  92, 109,  31,
        120,  89,   8,  29,  67,  27,  74, 105,  73,  38], device='cuda:0')
time: 0.0014s
start pruning module.layer2.4.conv1, num of channels: 32
tensor([ 8, 22, 29, 24, 16, 23, 14,  1, 11, 15], device='cuda:0')
time: 0.0009s
start pruning module.layer2.4.conv2, num of channels: 32
tensor([11,  7, 27, 16, 13,  1, 12, 23,  8, 15], device='cuda:0')
time: 0.0008s
start pruning module.layer2.4.conv3, num of channels: 128
tensor([ 40,  46,  69,  18,  29,  51,  92,  26, 111, 125,  78,  63,  90,   7,
         42, 124,  95,  37, 112, 120,  94,  60, 122,  59, 121,  77,  73,  80,
        101,  10, 123,  56,  97,   2,  43,  33, 110,  34], device='cuda:0')
time: 0.0014s
start pruning module.layer2.5.conv1, num of channels: 32
tensor([26, 11,  7, 21, 17, 12, 28, 20,  8, 30], device='cuda:0')
time: 0.0008s
start pruning module.layer2.5.conv2, num of channels: 32
tensor([12,  3, 10, 29, 26, 18, 14, 27, 11, 13], device='cuda:0')
time: 0.0008s
start pruning module.layer2.5.conv3, num of channels: 128
tensor([ 68,  98, 113, 101,  10,  52,   5, 126,  81, 117,  86,  53,  43,  33,
         73,  38,  11, 125, 119,  32,  47,  40,  63,  75,  34,   1,  21, 124,
         90,  25, 118,  54, 115,   2,  65,  95, 120,  57], device='cuda:0')
time: 0.0014s
start pruning module.layer2.6.conv1, num of channels: 32
tensor([27, 28,  4,  6, 24, 31, 20, 16, 29,  9], device='cuda:0')
time: 0.0008s
start pruning module.layer2.6.conv2, num of channels: 32
tensor([14,  9, 25, 29, 23,  1, 26, 20, 12, 16], device='cuda:0')
time: 0.0008s
start pruning module.layer2.6.conv3, num of channels: 128
tensor([126, 117,  68,  98,  81,  87,  31,  47,  96,  43, 123,  38, 108,  86,
         11,  78,  51,  90,  62,  75,  52,   5,  25,  17, 100,  61,  46,  66,
         91, 124, 115,  23,  65,  77, 103,  88, 107,  57], device='cuda:0')
time: 0.0014s
start pruning module.layer2.7.conv1, num of channels: 32
tensor([12, 20, 16, 13,  0, 19, 14,  9,  2,  6], device='cuda:0')
time: 0.0008s
start pruning module.layer2.7.conv2, num of channels: 32
tensor([ 1, 30, 31, 15, 17, 13, 11, 27, 21,  7], device='cuda:0')
time: 0.0008s
start pruning module.layer2.7.conv3, num of channels: 128
tensor([ 20, 127,  77,  25, 106,  64,  15,  36, 113,  53,  76,  41,  45,  71,
        103,  92,   2,  21,  22,   1,  32,  14, 104,  54,  66,  38, 100,  85,
         11, 101, 119,  74, 108,   5, 111,  55,  50,  31], device='cuda:0')
time: 0.0014s
start pruning module.layer2.8.conv1, num of channels: 32
tensor([18, 15, 17,  9, 10, 31,  6, 28, 23, 12], device='cuda:0')
time: 0.0008s
start pruning module.layer2.8.conv2, num of channels: 32
tensor([ 1,  0, 23, 31, 11,  8, 25, 13, 10,  4], device='cuda:0')
time: 0.0008s
start pruning module.layer2.8.conv3, num of channels: 128
tensor([ 36,   9,  55,  10,  85,  86,   6, 100,  81,  12,  76,  68,  30, 108,
         70,   3,  27,  24,  42,  48,  87,  99, 103,  31,  43, 113,  33, 110,
         89,  44,  17,  65, 104,  77,   5, 115,  13, 119], device='cuda:0')
time: 0.0014s
start pruning module.layer3.0.conv1, num of channels: 64
tensor([42, 22,  9, 52, 50, 58,  4, 59, 44, 32, 55,  5, 63, 57, 53, 26, 49, 37,
        43], device='cuda:0')
time: 0.0010s
start pruning module.layer3.0.conv2, num of channels: 64
tensor([43, 29,  0,  8, 57, 24,  2, 30, 51, 39, 54,  9, 61, 52, 22, 16, 20, 23,
         1], device='cuda:0')
time: 0.0010s
start pruning module.layer3.0.conv3, num of channels: 256
tensor([ 65,  76, 107,  40, 189,  92, 151, 183, 159,  56, 207, 248, 155, 234,
         87, 139,  21,   4, 251,  15, 212, 192, 101, 188, 190,  93, 104,  27,
         50,  13,  57, 164, 150,  37, 109,  83,  44,  88,  91, 255, 208, 154,
         16,  31,  99, 144,  68, 137, 125,  80, 130, 195, 200,  25,  97,  23,
         79, 175, 185, 219,  42, 163, 191, 232,  47, 133,  22,  55, 199, 140,
        177,   5, 113,  58, 110, 201, 100], device='cuda:0')
time: 0.0022s
start pruning module.layer3.0.downsample.0, num of channels: 256
tensor([ 64, 255, 110,  89,  34,  38, 189,  65,  19,  35, 156,  33, 141, 155,
         53,  79, 130,  72,  36,  76,  12, 208,  52,  92, 166, 170, 212, 125,
         85,  27,  57, 216,  21,  66, 164, 136,  43,  15, 237,  11, 251, 100,
         25, 150, 147,  93,  70,   7, 129, 167, 187,   1, 101,  98,  91, 122,
          4,  60,  62,  77, 197, 234,  24, 248,   5, 175, 240, 163, 117, 232,
        246, 233, 109,  78, 165, 222,  37], device='cuda:0')
time: 0.0021s
start pruning module.layer3.1.conv1, num of channels: 64
tensor([ 2, 52,  7, 32,  6, 24, 59, 42, 36, 29, 18, 12,  3, 26, 28, 31, 39, 51,
        58], device='cuda:0')
time: 0.0010s
start pruning module.layer3.1.conv2, num of channels: 64
tensor([31,  1, 35,  4, 15,  6, 45, 20, 34, 25, 30, 33, 46, 38, 39, 55, 27, 40,
        13], device='cuda:0')
time: 0.0010s
start pruning module.layer3.1.conv3, num of channels: 256
tensor([ 40,  11,  43, 178, 218, 231, 154,  49, 147, 122, 117, 232,  45, 221,
        199, 228, 247,  79, 240, 212,  52,  81,  78, 180,  27, 112, 155,  30,
        234,  34, 250, 111, 166,  65, 109, 249,   5,  89, 203,  28,  97, 104,
        121,  62,  53,  85, 179,  13, 107, 190, 106, 192, 202,  39, 100, 110,
          7,  20,  96, 187, 219,   6, 174, 194,   8, 116,  80, 227, 235, 136,
        210, 134, 246,  24,  70,  60,  95], device='cuda:0')
time: 0.0021s
start pruning module.layer3.2.conv1, num of channels: 64
tensor([ 1, 34, 59, 10, 48, 17, 60,  9, 39, 51,  3, 38, 18,  0, 47, 45, 12, 13,
        31], device='cuda:0')
time: 0.0010s
start pruning module.layer3.2.conv2, num of channels: 64
tensor([16, 48, 53,  7, 54,  9, 59, 57, 43, 32, 24, 50, 21,  0, 13, 35,  5, 60,
        27], device='cuda:0')
time: 0.0010s
start pruning module.layer3.2.conv3, num of channels: 256
tensor([  1, 112, 175,  20, 148, 136,  39,   3, 199, 147, 110,  95,   5,  19,
        113,  56,  73,  64,  78, 108, 255, 135, 231, 107, 179, 251, 141, 205,
        216, 117,  92, 146, 122,  88,  59, 252,  52, 206, 170,  31, 201, 166,
         97,  16, 219, 115, 188, 245, 203, 232, 161, 155,  21,   0, 165, 106,
        153, 172,  89,  77,  45, 150, 247, 220,   6,  12,   7, 143, 225, 235,
        174, 254, 190, 109,  74, 133,  23], device='cuda:0')
time: 0.0021s
start pruning module.layer3.3.conv1, num of channels: 64
tensor([50, 36,  6, 11, 37, 54, 47,  9, 20, 31, 34, 63, 13, 46, 62, 45, 58, 16,
        14], device='cuda:0')
time: 0.0010s
start pruning module.layer3.3.conv2, num of channels: 64
tensor([29, 40, 45, 49, 17, 38, 63, 36, 41, 32, 30, 14,  8, 11, 62, 23, 55, 52,
        48], device='cuda:0')
time: 0.0010s
start pruning module.layer3.3.conv3, num of channels: 256
tensor([ 42, 206, 115,   1, 213,  35, 148, 244,  94, 198, 117, 105, 205, 254,
        179,  20, 222,  41, 204, 208, 193, 112, 133, 124,  96, 223,   0, 227,
         75,  48,  29,  87, 238, 170,   7,  73,  93, 250,  10,  55,  65,  21,
        182, 251, 140,  52, 189,  64,  54, 146,  51, 212,  63, 236, 119, 171,
        191, 197, 108, 220,  78, 136, 130,  56, 194,  15,  85, 118, 160, 249,
         39, 121, 107,  86,  88,   9, 200], device='cuda:0')
time: 0.0021s
start pruning module.layer3.4.conv1, num of channels: 64
tensor([31, 57, 10, 58, 42, 60, 51, 26,  1, 24,  3, 11, 41, 21, 40, 49, 50, 17,
        54], device='cuda:0')
time: 0.0010s
start pruning module.layer3.4.conv2, num of channels: 64
tensor([ 2, 24, 35, 50, 46, 17, 38,  7,  3, 29, 58, 13, 27, 15, 59, 55,  1, 39,
        48], device='cuda:0')
time: 0.0010s
start pruning module.layer3.4.conv3, num of channels: 256
tensor([ 34, 230,  45, 114, 115, 250, 238, 191, 189, 188, 170, 151, 117,   1,
         96, 210, 192, 220, 236, 203,  41,  93, 204,  86, 154, 177, 132,  75,
         11, 121,  74,  78,  85, 101, 149, 225, 146, 190, 140,  14,  60,  42,
        109, 179,  83, 241,  47,  56,  92, 147,  18, 105,  89,  98,  65, 215,
        112, 224,  29, 244, 233,  57, 100,  50, 228,  55,  27, 137, 198, 155,
          5, 235, 185,  17, 163,  21, 108], device='cuda:0')
time: 0.0021s
start pruning module.layer3.5.conv1, num of channels: 64
tensor([ 1, 21, 61, 59, 16, 36, 54, 15, 34, 18, 43, 33, 63, 14, 30,  0, 41, 51,
        62], device='cuda:0')
time: 0.0010s
start pruning module.layer3.5.conv2, num of channels: 64
tensor([60, 35, 18, 53, 33, 17, 29, 39, 58, 15, 50, 38,  9, 12, 14, 28, 59, 42,
        30], device='cuda:0')
time: 0.0010s
start pruning module.layer3.5.conv3, num of channels: 256
tensor([ 20, 220, 190,  53,  34, 113,   2, 208,  76, 218,  37, 154,  89, 108,
        170,  45, 175,   1, 236,  40, 189, 230,  78, 146,  13,  93,  86, 207,
        114, 186, 211,  44,  74, 144, 234, 117, 159, 191, 202,  84, 245,  80,
         26,  35, 239,   7, 241, 120, 179,  48, 252,  42, 151,  75, 103, 210,
         61, 163,  71, 152,  43, 204,  52, 115,  96, 149, 136,  39, 122, 248,
        250, 137, 126,  82, 225,   6, 148], device='cuda:0')
time: 0.0021s
start pruning module.layer3.6.conv1, num of channels: 64
tensor([22, 55, 34, 39, 12, 13, 28,  9, 57, 52, 23, 27, 58, 43, 47, 48, 40, 38,
        53], device='cuda:0')
time: 0.0010s
start pruning module.layer3.6.conv2, num of channels: 64
tensor([17, 10, 53, 31, 51, 57,  0, 22, 28,  3, 23, 43, 60,  5, 61, 27,  2, 39,
        50], device='cuda:0')
time: 0.0010s
start pruning module.layer3.6.conv3, num of channels: 256
tensor([120,  34,  45, 236, 190, 121,   1, 103, 193, 117, 218,  93, 240, 202,
         20,  37, 154,   2,  35,  21, 220, 152, 109,  80, 239, 179, 136, 114,
        168, 205, 115,  42, 126,  86, 166, 186,  53,   5,  58,  40, 183, 206,
        147,   6, 238,  87, 150, 108,  27, 210,  61,  71,  13, 105, 198, 146,
        149,  92, 189, 159, 245,   3, 111,  75,  96,   8,  82,  76,  49, 235,
         99, 112, 113, 175, 201,  48,  36], device='cuda:0')
time: 0.0021s
start pruning module.layer3.7.conv1, num of channels: 64
tensor([46, 12, 27, 43, 58, 39, 45, 49, 41, 63,  9, 30, 42, 21, 33, 28, 16,  6,
        51], device='cuda:0')
time: 0.0010s
start pruning module.layer3.7.conv2, num of channels: 64
tensor([30, 52, 25, 60, 15, 27, 59, 23, 24, 17, 50,  2, 51, 38, 57, 62, 55, 47,
         8], device='cuda:0')
time: 0.0010s
start pruning module.layer3.7.conv3, num of channels: 256
tensor([ 34,   1, 117, 168,  43, 147,  20,  87,  85, 103, 205, 173, 245, 149,
        240,  53,  47, 104, 206, 126, 165, 174,   2,   5, 170,  78, 234, 179,
        222, 231, 204, 178, 142, 114,  45,   7,  35,  93, 188, 135, 252, 150,
         37, 153, 239, 220, 190,  42, 159, 244, 203, 199, 232,  74,  22, 108,
         86,  49, 120,  89, 148, 115,  80, 189, 140, 200, 166,  30, 158, 138,
          6, 226, 175, 236, 230, 109, 253], device='cuda:0')
time: 0.0021s
start pruning module.layer3.8.conv1, num of channels: 64
tensor([15, 63, 55, 52, 37, 36, 35, 60, 13,  6, 61,  7, 12,  4, 20, 45, 39,  1,
        46], device='cuda:0')
time: 0.0010s
start pruning module.layer3.8.conv2, num of channels: 64
tensor([16, 52, 32, 45, 48,  0, 36, 53, 58, 44, 57, 62, 56, 41, 24, 27, 14, 21,
        26], device='cuda:0')
time: 0.0010s
start pruning module.layer3.8.conv3, num of channels: 256
tensor([ 96,  87,   7,  34, 148, 152,  29, 205, 170,  45, 255,  97,  57, 136,
        101,   1, 179,  93, 132,  30, 103,  38, 141, 218, 106, 245,  22, 168,
         52,   5,  37, 223, 247, 206,  27, 190, 158,  10, 114,  47, 122, 240,
        104, 253, 210,  28, 220, 178, 167, 145, 201,   8, 184, 182, 160,  43,
        180,  72,  95, 128,  35, 251, 221, 232,  65,  12, 118, 125,  78, 153,
        127, 112,  58,   4,  82, 163, 149], device='cuda:0')
time: 0.0032s
Global sparsity: 69.22%
epoch: 0, train loss: 5.2603, train acc: 10.1060, test accuracy: 10.1600
step: 0, CrossEntropy loss: 3.0359 (3.0359), train accuracy: 18.750(18.750), lr: 0.0100
step: 100, CrossEntropy loss: 0.8145 (1.2249), train accuracy: 68.750(58.277), lr: 0.0100
step: 200, CrossEntropy loss: 0.5806 (0.9716), train accuracy: 78.125(66.601), lr: 0.0100
step: 300, CrossEntropy loss: 0.5409 (0.8468), train accuracy: 82.031(70.909), lr: 0.0100
epoch: 0, CrossEntropy loss: 0.7751, accuracy: 73.402
test acc: 81.3100
step: 0, CrossEntropy loss: 0.4630 (0.4630), train accuracy: 82.812(82.812), lr: 0.0100
step: 100, CrossEntropy loss: 0.5557 (0.4765), train accuracy: 80.469(83.779), lr: 0.0100
step: 200, CrossEntropy loss: 0.5535 (0.4712), train accuracy: 79.688(83.854), lr: 0.0100
step: 300, CrossEntropy loss: 0.5199 (0.4592), train accuracy: 86.719(84.227), lr: 0.0100
epoch: 1, CrossEntropy loss: 0.4512, accuracy: 84.456
test acc: 84.2600
step: 0, CrossEntropy loss: 0.3714 (0.3714), train accuracy: 88.281(88.281), lr: 0.0100
step: 100, CrossEntropy loss: 0.4147 (0.3866), train accuracy: 86.719(86.696), lr: 0.0100
step: 200, CrossEntropy loss: 0.3886 (0.3796), train accuracy: 85.156(86.754), lr: 0.0100
step: 300, CrossEntropy loss: 0.3867 (0.3797), train accuracy: 84.375(86.752), lr: 0.0100
epoch: 2, CrossEntropy loss: 0.3776, accuracy: 86.864
test acc: 85.6000
step: 0, CrossEntropy loss: 0.2873 (0.2873), train accuracy: 91.406(91.406), lr: 0.0099
step: 100, CrossEntropy loss: 0.4193 (0.3438), train accuracy: 86.719(88.235), lr: 0.0099
step: 200, CrossEntropy loss: 0.3392 (0.3461), train accuracy: 91.406(87.998), lr: 0.0099
step: 300, CrossEntropy loss: 0.2984 (0.3443), train accuracy: 89.844(88.131), lr: 0.0099
epoch: 3, CrossEntropy loss: 0.3454, accuracy: 88.042
test acc: 86.3500
step: 0, CrossEntropy loss: 0.3185 (0.3185), train accuracy: 90.625(90.625), lr: 0.0098
step: 100, CrossEntropy loss: 0.3237 (0.3158), train accuracy: 90.625(89.418), lr: 0.0098
step: 200, CrossEntropy loss: 0.2608 (0.3121), train accuracy: 93.750(89.451), lr: 0.0098
step: 300, CrossEntropy loss: 0.3018 (0.3164), train accuracy: 89.844(89.190), lr: 0.0098
epoch: 4, CrossEntropy loss: 0.3176, accuracy: 89.130
test acc: 86.9500
step: 0, CrossEntropy loss: 0.4392 (0.4392), train accuracy: 87.500(87.500), lr: 0.0098
step: 100, CrossEntropy loss: 0.2292 (0.3015), train accuracy: 92.969(89.759), lr: 0.0098
step: 200, CrossEntropy loss: 0.2915 (0.2975), train accuracy: 91.406(89.960), lr: 0.0098
step: 300, CrossEntropy loss: 0.4619 (0.3031), train accuracy: 84.375(89.649), lr: 0.0098
epoch: 5, CrossEntropy loss: 0.2989, accuracy: 89.792
test acc: 86.8600
step: 0, CrossEntropy loss: 0.2936 (0.2936), train accuracy: 89.062(89.062), lr: 0.0096
step: 100, CrossEntropy loss: 0.3098 (0.2697), train accuracy: 88.281(90.416), lr: 0.0096
step: 200, CrossEntropy loss: 0.2509 (0.2798), train accuracy: 90.625(90.096), lr: 0.0096
step: 300, CrossEntropy loss: 0.3546 (0.2820), train accuracy: 88.281(90.054), lr: 0.0096
epoch: 6, CrossEntropy loss: 0.2810, accuracy: 90.170
test acc: 87.7300
step: 0, CrossEntropy loss: 0.3327 (0.3327), train accuracy: 86.719(86.719), lr: 0.0095
step: 100, CrossEntropy loss: 0.3167 (0.2682), train accuracy: 88.281(91.050), lr: 0.0095
step: 200, CrossEntropy loss: 0.3260 (0.2678), train accuracy: 88.281(90.928), lr: 0.0095
step: 300, CrossEntropy loss: 0.2588 (0.2676), train accuracy: 90.625(90.905), lr: 0.0095
epoch: 7, CrossEntropy loss: 0.2702, accuracy: 90.798
test acc: 87.8900
step: 0, CrossEntropy loss: 0.2447 (0.2447), train accuracy: 92.969(92.969), lr: 0.0094
step: 100, CrossEntropy loss: 0.2800 (0.2548), train accuracy: 92.188(91.213), lr: 0.0094
step: 200, CrossEntropy loss: 0.2177 (0.2596), train accuracy: 92.188(91.165), lr: 0.0094
step: 300, CrossEntropy loss: 0.2185 (0.2597), train accuracy: 93.750(91.129), lr: 0.0094
epoch: 8, CrossEntropy loss: 0.2608, accuracy: 91.102
test acc: 87.9300
step: 0, CrossEntropy loss: 0.2043 (0.2043), train accuracy: 93.750(93.750), lr: 0.0092
step: 100, CrossEntropy loss: 0.1757 (0.2410), train accuracy: 93.750(91.646), lr: 0.0092
step: 200, CrossEntropy loss: 0.2701 (0.2461), train accuracy: 89.844(91.500), lr: 0.0092
step: 300, CrossEntropy loss: 0.1946 (0.2492), train accuracy: 92.188(91.430), lr: 0.0092
epoch: 9, CrossEntropy loss: 0.2512, accuracy: 91.386
test acc: 88.6000
step: 0, CrossEntropy loss: 0.2408 (0.2408), train accuracy: 91.406(91.406), lr: 0.0090
step: 100, CrossEntropy loss: 0.2447 (0.2377), train accuracy: 89.844(91.940), lr: 0.0090
step: 200, CrossEntropy loss: 0.2598 (0.2386), train accuracy: 89.844(91.791), lr: 0.0090
step: 300, CrossEntropy loss: 0.2873 (0.2420), train accuracy: 89.844(91.648), lr: 0.0090
epoch: 10, CrossEntropy loss: 0.2443, accuracy: 91.552
test acc: 89.0400
step: 0, CrossEntropy loss: 0.1744 (0.1744), train accuracy: 94.531(94.531), lr: 0.0089
step: 100, CrossEntropy loss: 0.2540 (0.2318), train accuracy: 92.969(92.041), lr: 0.0089
step: 200, CrossEntropy loss: 0.3182 (0.2342), train accuracy: 89.062(91.974), lr: 0.0089
step: 300, CrossEntropy loss: 0.2331 (0.2369), train accuracy: 92.188(91.938), lr: 0.0089
epoch: 11, CrossEntropy loss: 0.2358, accuracy: 91.940
test acc: 88.1500
step: 0, CrossEntropy loss: 0.2609 (0.2609), train accuracy: 92.969(92.969), lr: 0.0086
step: 100, CrossEntropy loss: 0.2028 (0.2247), train accuracy: 92.969(92.698), lr: 0.0086
step: 200, CrossEntropy loss: 0.3520 (0.2252), train accuracy: 90.625(92.576), lr: 0.0086
step: 300, CrossEntropy loss: 0.1995 (0.2275), train accuracy: 93.750(92.330), lr: 0.0086
epoch: 12, CrossEntropy loss: 0.2276, accuracy: 92.270
test acc: 88.0800
step: 0, CrossEntropy loss: 0.2494 (0.2494), train accuracy: 91.406(91.406), lr: 0.0084
step: 100, CrossEntropy loss: 0.2498 (0.2139), train accuracy: 92.188(92.806), lr: 0.0084
step: 200, CrossEntropy loss: 0.3010 (0.2177), train accuracy: 91.406(92.491), lr: 0.0084
step: 300, CrossEntropy loss: 0.3055 (0.2203), train accuracy: 90.625(92.380), lr: 0.0084
epoch: 13, CrossEntropy loss: 0.2237, accuracy: 92.284
test acc: 88.4900
step: 0, CrossEntropy loss: 0.1982 (0.1982), train accuracy: 92.969(92.969), lr: 0.0082
step: 100, CrossEntropy loss: 0.2304 (0.2172), train accuracy: 92.969(92.775), lr: 0.0082
step: 200, CrossEntropy loss: 0.3079 (0.2165), train accuracy: 89.062(92.708), lr: 0.0082
step: 300, CrossEntropy loss: 0.1455 (0.2184), train accuracy: 95.312(92.522), lr: 0.0082
epoch: 14, CrossEntropy loss: 0.2187, accuracy: 92.580
test acc: 89.9100
step: 0, CrossEntropy loss: 0.1879 (0.1879), train accuracy: 94.531(94.531), lr: 0.0079
step: 100, CrossEntropy loss: 0.3048 (0.2016), train accuracy: 88.281(93.085), lr: 0.0079
step: 200, CrossEntropy loss: 0.2998 (0.2085), train accuracy: 90.625(92.879), lr: 0.0079
step: 300, CrossEntropy loss: 0.1725 (0.2103), train accuracy: 93.750(92.943), lr: 0.0079
epoch: 15, CrossEntropy loss: 0.2124, accuracy: 92.806
test acc: 89.4200
step: 0, CrossEntropy loss: 0.1680 (0.1680), train accuracy: 93.750(93.750), lr: 0.0077
step: 100, CrossEntropy loss: 0.2206 (0.2030), train accuracy: 94.531(93.108), lr: 0.0077
step: 200, CrossEntropy loss: 0.2438 (0.1999), train accuracy: 91.406(93.183), lr: 0.0077
step: 300, CrossEntropy loss: 0.1847 (0.2019), train accuracy: 94.531(93.070), lr: 0.0077
epoch: 16, CrossEntropy loss: 0.2072, accuracy: 92.876
test acc: 89.5400
step: 0, CrossEntropy loss: 0.2149 (0.2149), train accuracy: 92.969(92.969), lr: 0.0074
step: 100, CrossEntropy loss: 0.2149 (0.1949), train accuracy: 91.406(93.154), lr: 0.0074
step: 200, CrossEntropy loss: 0.2017 (0.1982), train accuracy: 90.625(93.120), lr: 0.0074
step: 300, CrossEntropy loss: 0.1514 (0.1992), train accuracy: 94.531(93.137), lr: 0.0074
epoch: 17, CrossEntropy loss: 0.2024, accuracy: 93.042
test acc: 89.0800
step: 0, CrossEntropy loss: 0.1103 (0.1103), train accuracy: 96.875(96.875), lr: 0.0071
step: 100, CrossEntropy loss: 0.1964 (0.1925), train accuracy: 92.969(93.472), lr: 0.0071
step: 200, CrossEntropy loss: 0.3256 (0.1961), train accuracy: 92.188(93.249), lr: 0.0071
step: 300, CrossEntropy loss: 0.1799 (0.1943), train accuracy: 92.969(93.322), lr: 0.0071
epoch: 18, CrossEntropy loss: 0.1941, accuracy: 93.326
test acc: 90.0900
step: 0, CrossEntropy loss: 0.1716 (0.1716), train accuracy: 92.969(92.969), lr: 0.0068
step: 100, CrossEntropy loss: 0.1730 (0.1809), train accuracy: 92.188(93.920), lr: 0.0068
step: 200, CrossEntropy loss: 0.1869 (0.1816), train accuracy: 92.969(93.925), lr: 0.0068
step: 300, CrossEntropy loss: 0.1695 (0.1853), train accuracy: 93.750(93.742), lr: 0.0068
epoch: 19, CrossEntropy loss: 0.1881, accuracy: 93.590
test acc: 89.8800
step: 0, CrossEntropy loss: 0.1711 (0.1711), train accuracy: 94.531(94.531), lr: 0.0065
step: 100, CrossEntropy loss: 0.2172 (0.1795), train accuracy: 90.625(93.820), lr: 0.0065
step: 200, CrossEntropy loss: 0.1612 (0.1833), train accuracy: 93.750(93.676), lr: 0.0065
step: 300, CrossEntropy loss: 0.1772 (0.1851), train accuracy: 94.531(93.670), lr: 0.0065
epoch: 20, CrossEntropy loss: 0.1849, accuracy: 93.702
test acc: 89.8800
step: 0, CrossEntropy loss: 0.2378 (0.2378), train accuracy: 92.188(92.188), lr: 0.0062
step: 100, CrossEntropy loss: 0.2222 (0.1804), train accuracy: 92.969(93.696), lr: 0.0062
step: 200, CrossEntropy loss: 0.1968 (0.1770), train accuracy: 95.312(93.851), lr: 0.0062
step: 300, CrossEntropy loss: 0.1489 (0.1788), train accuracy: 94.531(93.755), lr: 0.0062
epoch: 21, CrossEntropy loss: 0.1817, accuracy: 93.694
test acc: 89.8700
step: 0, CrossEntropy loss: 0.2202 (0.2202), train accuracy: 89.844(89.844), lr: 0.0059
step: 100, CrossEntropy loss: 0.1999 (0.1687), train accuracy: 92.188(94.152), lr: 0.0059
step: 200, CrossEntropy loss: 0.2044 (0.1752), train accuracy: 94.531(93.964), lr: 0.0059
step: 300, CrossEntropy loss: 0.1758 (0.1747), train accuracy: 94.531(93.950), lr: 0.0059
epoch: 22, CrossEntropy loss: 0.1752, accuracy: 93.918
test acc: 89.4200
step: 0, CrossEntropy loss: 0.1820 (0.1820), train accuracy: 94.531(94.531), lr: 0.0056
step: 100, CrossEntropy loss: 0.2181 (0.1731), train accuracy: 92.188(94.028), lr: 0.0056
step: 200, CrossEntropy loss: 0.2402 (0.1716), train accuracy: 92.969(94.135), lr: 0.0056
step: 300, CrossEntropy loss: 0.1711 (0.1722), train accuracy: 95.312(94.077), lr: 0.0056
epoch: 23, CrossEntropy loss: 0.1731, accuracy: 94.054
test acc: 89.8400
step: 0, CrossEntropy loss: 0.0943 (0.0943), train accuracy: 97.656(97.656), lr: 0.0053
step: 100, CrossEntropy loss: 0.1814 (0.1556), train accuracy: 94.531(94.632), lr: 0.0053
step: 200, CrossEntropy loss: 0.1433 (0.1598), train accuracy: 93.750(94.590), lr: 0.0053
step: 300, CrossEntropy loss: 0.1377 (0.1616), train accuracy: 94.531(94.555), lr: 0.0053
epoch: 24, CrossEntropy loss: 0.1630, accuracy: 94.452
test acc: 90.1500
step: 0, CrossEntropy loss: 0.1665 (0.1665), train accuracy: 92.969(92.969), lr: 0.0050
step: 100, CrossEntropy loss: 0.1164 (0.1596), train accuracy: 97.656(94.578), lr: 0.0050
step: 200, CrossEntropy loss: 0.1741 (0.1604), train accuracy: 91.406(94.434), lr: 0.0050
step: 300, CrossEntropy loss: 0.1395 (0.1616), train accuracy: 96.094(94.401), lr: 0.0050
epoch: 25, CrossEntropy loss: 0.1651, accuracy: 94.268
test acc: 90.3100
step: 0, CrossEntropy loss: 0.1560 (0.1560), train accuracy: 95.312(95.312), lr: 0.0047
step: 100, CrossEntropy loss: 0.1847 (0.1498), train accuracy: 93.750(94.872), lr: 0.0047
step: 200, CrossEntropy loss: 0.2033 (0.1553), train accuracy: 90.625(94.679), lr: 0.0047
step: 300, CrossEntropy loss: 0.1960 (0.1555), train accuracy: 94.531(94.716), lr: 0.0047
epoch: 26, CrossEntropy loss: 0.1553, accuracy: 94.718
test acc: 90.4500
step: 0, CrossEntropy loss: 0.1292 (0.1292), train accuracy: 94.531(94.531), lr: 0.0044
step: 100, CrossEntropy loss: 0.0977 (0.1425), train accuracy: 95.312(95.150), lr: 0.0044
step: 200, CrossEntropy loss: 0.1028 (0.1470), train accuracy: 95.312(94.935), lr: 0.0044
step: 300, CrossEntropy loss: 0.1406 (0.1499), train accuracy: 94.531(94.869), lr: 0.0044
epoch: 27, CrossEntropy loss: 0.1508, accuracy: 94.802
test acc: 90.6600
step: 0, CrossEntropy loss: 0.1203 (0.1203), train accuracy: 95.312(95.312), lr: 0.0041
step: 100, CrossEntropy loss: 0.1012 (0.1425), train accuracy: 96.875(95.042), lr: 0.0041
step: 200, CrossEntropy loss: 0.0780 (0.1432), train accuracy: 98.438(95.002), lr: 0.0041
step: 300, CrossEntropy loss: 0.0725 (0.1475), train accuracy: 97.656(94.838), lr: 0.0041
epoch: 28, CrossEntropy loss: 0.1472, accuracy: 94.826
test acc: 90.1100
step: 0, CrossEntropy loss: 0.1753 (0.1753), train accuracy: 93.750(93.750), lr: 0.0038
step: 100, CrossEntropy loss: 0.1364 (0.1452), train accuracy: 94.531(95.096), lr: 0.0038
step: 200, CrossEntropy loss: 0.1272 (0.1472), train accuracy: 95.312(94.924), lr: 0.0038
step: 300, CrossEntropy loss: 0.1169 (0.1473), train accuracy: 95.312(94.905), lr: 0.0038
epoch: 29, CrossEntropy loss: 0.1470, accuracy: 94.910
test acc: 90.8200
step: 0, CrossEntropy loss: 0.0732 (0.0732), train accuracy: 98.438(98.438), lr: 0.0035
step: 100, CrossEntropy loss: 0.2339 (0.1316), train accuracy: 92.188(95.552), lr: 0.0035
step: 200, CrossEntropy loss: 0.0897 (0.1351), train accuracy: 97.656(95.332), lr: 0.0035
step: 300, CrossEntropy loss: 0.1607 (0.1368), train accuracy: 92.188(95.253), lr: 0.0035
epoch: 30, CrossEntropy loss: 0.1377, accuracy: 95.236
test acc: 90.7300
step: 0, CrossEntropy loss: 0.1041 (0.1041), train accuracy: 97.656(97.656), lr: 0.0032
step: 100, CrossEntropy loss: 0.0535 (0.1272), train accuracy: 99.219(95.668), lr: 0.0032
step: 200, CrossEntropy loss: 0.1417 (0.1309), train accuracy: 96.875(95.522), lr: 0.0032
step: 300, CrossEntropy loss: 0.1197 (0.1325), train accuracy: 97.656(95.484), lr: 0.0032
epoch: 31, CrossEntropy loss: 0.1311, accuracy: 95.548
test acc: 90.6400
step: 0, CrossEntropy loss: 0.1093 (0.1093), train accuracy: 94.531(94.531), lr: 0.0029
step: 100, CrossEntropy loss: 0.1300 (0.1198), train accuracy: 96.094(95.970), lr: 0.0029
step: 200, CrossEntropy loss: 0.1235 (0.1212), train accuracy: 94.531(95.938), lr: 0.0029
step: 300, CrossEntropy loss: 0.1785 (0.1258), train accuracy: 95.312(95.769), lr: 0.0029
epoch: 32, CrossEntropy loss: 0.1272, accuracy: 95.700
test acc: 90.7900
step: 0, CrossEntropy loss: 0.1362 (0.1362), train accuracy: 95.312(95.312), lr: 0.0026
step: 100, CrossEntropy loss: 0.0784 (0.1205), train accuracy: 97.656(95.985), lr: 0.0026
step: 200, CrossEntropy loss: 0.0969 (0.1208), train accuracy: 97.656(95.911), lr: 0.0026
step: 300, CrossEntropy loss: 0.1648 (0.1230), train accuracy: 96.094(95.790), lr: 0.0026
epoch: 33, CrossEntropy loss: 0.1239, accuracy: 95.736
test acc: 90.8000
step: 0, CrossEntropy loss: 0.1451 (0.1451), train accuracy: 92.969(92.969), lr: 0.0023
step: 100, CrossEntropy loss: 0.1364 (0.1172), train accuracy: 97.656(96.055), lr: 0.0023
step: 200, CrossEntropy loss: 0.1342 (0.1174), train accuracy: 95.312(96.039), lr: 0.0023
step: 300, CrossEntropy loss: 0.1006 (0.1178), train accuracy: 96.094(96.068), lr: 0.0023
epoch: 34, CrossEntropy loss: 0.1184, accuracy: 96.026
test acc: 90.7100
step: 0, CrossEntropy loss: 0.1158 (0.1158), train accuracy: 96.875(96.875), lr: 0.0021
step: 100, CrossEntropy loss: 0.1456 (0.1178), train accuracy: 95.312(96.047), lr: 0.0021
step: 200, CrossEntropy loss: 0.0814 (0.1136), train accuracy: 96.875(96.199), lr: 0.0021
step: 300, CrossEntropy loss: 0.1423 (0.1126), train accuracy: 95.312(96.239), lr: 0.0021
epoch: 35, CrossEntropy loss: 0.1142, accuracy: 96.178
test acc: 91.1300
step: 0, CrossEntropy loss: 0.1557 (0.1557), train accuracy: 94.531(94.531), lr: 0.0018
step: 100, CrossEntropy loss: 0.1048 (0.1121), train accuracy: 96.875(96.194), lr: 0.0018
step: 200, CrossEntropy loss: 0.1293 (0.1129), train accuracy: 96.094(96.199), lr: 0.0018
step: 300, CrossEntropy loss: 0.1006 (0.1133), train accuracy: 97.656(96.161), lr: 0.0018
epoch: 36, CrossEntropy loss: 0.1132, accuracy: 96.184
test acc: 90.9700
step: 0, CrossEntropy loss: 0.0830 (0.0830), train accuracy: 96.875(96.875), lr: 0.0016
step: 100, CrossEntropy loss: 0.1630 (0.1124), train accuracy: 92.969(96.318), lr: 0.0016
step: 200, CrossEntropy loss: 0.0988 (0.1105), train accuracy: 97.656(96.389), lr: 0.0016
step: 300, CrossEntropy loss: 0.1739 (0.1102), train accuracy: 92.969(96.333), lr: 0.0016
epoch: 37, CrossEntropy loss: 0.1100, accuracy: 96.318
test acc: 91.0400
step: 0, CrossEntropy loss: 0.1152 (0.1152), train accuracy: 96.875(96.875), lr: 0.0014
step: 100, CrossEntropy loss: 0.1081 (0.1058), train accuracy: 96.875(96.597), lr: 0.0014
step: 200, CrossEntropy loss: 0.0894 (0.1037), train accuracy: 96.094(96.653), lr: 0.0014
step: 300, CrossEntropy loss: 0.1023 (0.1049), train accuracy: 97.656(96.605), lr: 0.0014
epoch: 38, CrossEntropy loss: 0.1049, accuracy: 96.604
test acc: 91.2200
step: 0, CrossEntropy loss: 0.0886 (0.0886), train accuracy: 96.094(96.094), lr: 0.0012
step: 100, CrossEntropy loss: 0.1728 (0.1036), train accuracy: 93.750(96.426), lr: 0.0012
step: 200, CrossEntropy loss: 0.0719 (0.1045), train accuracy: 98.438(96.482), lr: 0.0012
step: 300, CrossEntropy loss: 0.0970 (0.1033), train accuracy: 95.312(96.499), lr: 0.0012
epoch: 39, CrossEntropy loss: 0.1034, accuracy: 96.508
test acc: 91.2900
step: 0, CrossEntropy loss: 0.0718 (0.0718), train accuracy: 96.875(96.875), lr: 0.0010
step: 100, CrossEntropy loss: 0.1565 (0.0977), train accuracy: 94.531(96.697), lr: 0.0010
step: 200, CrossEntropy loss: 0.1557 (0.0986), train accuracy: 94.531(96.720), lr: 0.0010
step: 300, CrossEntropy loss: 0.0969 (0.0987), train accuracy: 98.438(96.717), lr: 0.0010
epoch: 40, CrossEntropy loss: 0.0991, accuracy: 96.718
test acc: 91.1600
step: 0, CrossEntropy loss: 0.1187 (0.1187), train accuracy: 96.875(96.875), lr: 0.0008
step: 100, CrossEntropy loss: 0.0545 (0.0985), train accuracy: 97.656(96.651), lr: 0.0008
step: 200, CrossEntropy loss: 0.0538 (0.0982), train accuracy: 97.656(96.681), lr: 0.0008
step: 300, CrossEntropy loss: 0.0958 (0.0980), train accuracy: 96.875(96.743), lr: 0.0008
epoch: 41, CrossEntropy loss: 0.0987, accuracy: 96.714
test acc: 91.0700
step: 0, CrossEntropy loss: 0.0543 (0.0543), train accuracy: 99.219(99.219), lr: 0.0006
step: 100, CrossEntropy loss: 0.0795 (0.0944), train accuracy: 97.656(96.906), lr: 0.0006
step: 200, CrossEntropy loss: 0.0962 (0.0971), train accuracy: 97.656(96.852), lr: 0.0006
step: 300, CrossEntropy loss: 0.0613 (0.0971), train accuracy: 97.656(96.813), lr: 0.0006
epoch: 42, CrossEntropy loss: 0.0967, accuracy: 96.826
test acc: 91.1900
step: 0, CrossEntropy loss: 0.0876 (0.0876), train accuracy: 98.438(98.438), lr: 0.0005
step: 100, CrossEntropy loss: 0.0771 (0.0968), train accuracy: 97.656(96.875), lr: 0.0005
step: 200, CrossEntropy loss: 0.1311 (0.0926), train accuracy: 96.094(97.019), lr: 0.0005
step: 300, CrossEntropy loss: 0.1858 (0.0940), train accuracy: 91.406(97.036), lr: 0.0005
epoch: 43, CrossEntropy loss: 0.0946, accuracy: 96.954
test acc: 91.1800
step: 0, CrossEntropy loss: 0.1465 (0.1465), train accuracy: 94.531(94.531), lr: 0.0004
step: 100, CrossEntropy loss: 0.1041 (0.0930), train accuracy: 96.094(97.084), lr: 0.0004
step: 200, CrossEntropy loss: 0.0597 (0.0938), train accuracy: 99.219(96.968), lr: 0.0004
step: 300, CrossEntropy loss: 0.0906 (0.0932), train accuracy: 95.312(96.984), lr: 0.0004
epoch: 44, CrossEntropy loss: 0.0935, accuracy: 96.962
test acc: 91.2300
step: 0, CrossEntropy loss: 0.1272 (0.1272), train accuracy: 94.531(94.531), lr: 0.0003
step: 100, CrossEntropy loss: 0.0871 (0.0948), train accuracy: 98.438(96.929), lr: 0.0003
step: 200, CrossEntropy loss: 0.0728 (0.0939), train accuracy: 96.094(96.883), lr: 0.0003
step: 300, CrossEntropy loss: 0.0597 (0.0938), train accuracy: 98.438(96.927), lr: 0.0003
epoch: 45, CrossEntropy loss: 0.0937, accuracy: 96.924
test acc: 91.1000
step: 0, CrossEntropy loss: 0.0675 (0.0675), train accuracy: 97.656(97.656), lr: 0.0002
step: 100, CrossEntropy loss: 0.1053 (0.0885), train accuracy: 96.875(97.053), lr: 0.0002
step: 200, CrossEntropy loss: 0.1398 (0.0919), train accuracy: 96.094(96.992), lr: 0.0002
step: 300, CrossEntropy loss: 0.0461 (0.0920), train accuracy: 100.000(96.906), lr: 0.0002
epoch: 46, CrossEntropy loss: 0.0921, accuracy: 96.904
test acc: 91.2000
step: 0, CrossEntropy loss: 0.1108 (0.1108), train accuracy: 96.875(96.875), lr: 0.0001
step: 100, CrossEntropy loss: 0.1178 (0.0853), train accuracy: 96.094(97.208), lr: 0.0001
step: 200, CrossEntropy loss: 0.0855 (0.0877), train accuracy: 97.656(97.151), lr: 0.0001
step: 300, CrossEntropy loss: 0.1106 (0.0903), train accuracy: 97.656(97.036), lr: 0.0001
epoch: 47, CrossEntropy loss: 0.0908, accuracy: 97.054
test acc: 91.1100
step: 0, CrossEntropy loss: 0.0807 (0.0807), train accuracy: 96.875(96.875), lr: 0.0000
step: 100, CrossEntropy loss: 0.0804 (0.0862), train accuracy: 96.875(97.285), lr: 0.0000
step: 200, CrossEntropy loss: 0.0397 (0.0851), train accuracy: 99.219(97.349), lr: 0.0000
step: 300, CrossEntropy loss: 0.1061 (0.0889), train accuracy: 96.094(97.106), lr: 0.0000
epoch: 48, CrossEntropy loss: 0.0888, accuracy: 97.126
test acc: 91.2200
step: 0, CrossEntropy loss: 0.0867 (0.0867), train accuracy: 96.094(96.094), lr: 0.0000
step: 100, CrossEntropy loss: 0.0756 (0.0849), train accuracy: 96.875(97.169), lr: 0.0000
step: 200, CrossEntropy loss: 0.0853 (0.0872), train accuracy: 96.875(97.167), lr: 0.0000
step: 300, CrossEntropy loss: 0.1073 (0.0889), train accuracy: 96.875(97.090), lr: 0.0000
epoch: 49, CrossEntropy loss: 0.0895, accuracy: 97.066
test acc: 91.0900
ln structured pruning testing >>>>>>>>>>>>>>>>>>>>>>>>
order: 2
model sum:  -1111.3250433802605
before pruning, train loss: 0.0031, train acc: 99.9680, test accuracy: 94.2900
start pruning module.conv1, num of channels: 16
tensor([ 3, 12, 10,  7, 15], device='cuda:0')
time: 0.0027s
start pruning module.layer1.0.conv1, num of channels: 16
tensor([ 5, 10, 14,  4, 11], device='cuda:0')
time: 0.0012s
start pruning module.layer1.0.conv2, num of channels: 16
tensor([ 9,  1, 14, 11,  4], device='cuda:0')
time: 0.0013s
start pruning module.layer1.0.conv3, num of channels: 64
tensor([13,  8, 26, 63, 54, 34,  5, 28, 50, 52, 41, 27, 44, 25, 59, 48, 10, 29,
        19], device='cuda:0')
time: 0.0017s
start pruning module.layer1.0.downsample.0, num of channels: 64
tensor([26,  5,  1, 34, 27, 28, 48, 41, 63, 44, 54, 52, 50, 25, 59,  8, 10, 29,
        43], device='cuda:0')
time: 0.0015s
start pruning module.layer1.1.conv1, num of channels: 16
tensor([14,  3, 10,  8,  6], device='cuda:0')
time: 0.0007s
start pruning module.layer1.1.conv2, num of channels: 16
tensor([ 4, 12,  3, 13, 14], device='cuda:0')
time: 0.0007s
start pruning module.layer1.1.conv3, num of channels: 64
tensor([53, 26, 28,  5, 44, 27,  8, 41, 34, 48, 63, 13, 10,  1, 15, 52, 50, 54,
        11], device='cuda:0')
time: 0.0010s
start pruning module.layer1.2.conv1, num of channels: 16
tensor([14,  1, 11, 13,  9], device='cuda:0')
time: 0.0012s
start pruning module.layer1.2.conv2, num of channels: 16
tensor([ 2,  1, 13,  3,  6], device='cuda:0')
time: 0.0011s
start pruning module.layer1.2.conv3, num of channels: 64
tensor([53, 48, 63, 26, 27,  5, 41, 52, 28, 44, 34, 25, 50,  1, 21, 15, 54, 43,
        55], device='cuda:0')
time: 0.0015s
start pruning module.layer1.3.conv1, num of channels: 16
tensor([11,  6,  1,  3,  8], device='cuda:0')
time: 0.0011s
start pruning module.layer1.3.conv2, num of channels: 16
tensor([11,  6,  9,  8,  5], device='cuda:0')
time: 0.0011s
start pruning module.layer1.3.conv3, num of channels: 64
tensor([ 5, 26, 63,  1, 34, 48, 13, 29, 41, 52, 28, 59, 53, 10, 15, 39,  8, 37,
        54], device='cuda:0')
time: 0.0016s
start pruning module.layer1.4.conv1, num of channels: 16
tensor([ 7,  8, 14,  0, 12], device='cuda:0')
time: 0.0007s
start pruning module.layer1.4.conv2, num of channels: 16
tensor([13,  8,  1, 10, 12], device='cuda:0')
time: 0.0007s
start pruning module.layer1.4.conv3, num of channels: 64
tensor([27, 48, 20, 49, 57, 16, 56, 62, 61, 14, 55,  1, 51, 15,  0, 22, 32, 58,
        29], device='cuda:0')
time: 0.0010s
start pruning module.layer1.5.conv1, num of channels: 16
tensor([13,  4,  3, 11,  7], device='cuda:0')
time: 0.0007s
start pruning module.layer1.5.conv2, num of channels: 16
tensor([4, 0, 3, 1, 9], device='cuda:0')
time: 0.0007s
start pruning module.layer1.5.conv3, num of channels: 64
tensor([30, 57, 49, 36, 14, 20, 22, 17, 39,  2, 12, 33, 18, 61,  5, 32,  4, 58,
        42], device='cuda:0')
time: 0.0010s
start pruning module.layer1.6.conv1, num of channels: 16
tensor([11, 15,  2,  5,  0], device='cuda:0')
time: 0.0007s
start pruning module.layer1.6.conv2, num of channels: 16
tensor([ 9,  7, 12,  2,  4], device='cuda:0')
time: 0.0007s
start pruning module.layer1.6.conv3, num of channels: 64
tensor([27, 36, 49, 23, 61, 18, 42, 48, 14, 25, 45,  6,  3, 10, 17, 22, 41, 58,
        53], device='cuda:0')
time: 0.0010s
start pruning module.layer1.7.conv1, num of channels: 16
tensor([ 7, 12,  2,  3,  1], device='cuda:0')
time: 0.0008s
start pruning module.layer1.7.conv2, num of channels: 16
tensor([ 1,  6,  5, 12,  8], device='cuda:0')
time: 0.0007s
start pruning module.layer1.7.conv3, num of channels: 64
tensor([47,  0, 61, 12, 33, 31, 30, 20,  9, 49, 60, 40, 58, 46,  2, 17,  6, 27,
        18], device='cuda:0')
time: 0.0010s
start pruning module.layer1.8.conv1, num of channels: 16
tensor([14,  0, 12,  9,  7], device='cuda:0')
time: 0.0007s
start pruning module.layer1.8.conv2, num of channels: 16
tensor([10,  3,  1,  6,  9], device='cuda:0')
time: 0.0007s
start pruning module.layer1.8.conv3, num of channels: 64
tensor([40, 61, 20,  2, 10,  3, 18, 17, 26, 25, 51, 45,  6, 42, 60,  5, 14, 46,
        31], device='cuda:0')
time: 0.0010s
start pruning module.layer2.0.conv1, num of channels: 32
tensor([21, 24, 15,  5, 26, 23,  0, 30, 10,  1], device='cuda:0')
time: 0.0008s
start pruning module.layer2.0.conv2, num of channels: 32
tensor([ 2, 11, 26, 25, 30, 21, 20, 13, 12, 16], device='cuda:0')
time: 0.0008s
start pruning module.layer2.0.conv3, num of channels: 128
tensor([  9,  58,  52, 126,  79,   4,  11, 106,  98,  23,  70, 124,  48,  38,
         87,  96,  84,  10,   1,  86,  27,  78,   5,  35, 120,  54, 122, 101,
          7,  71,  73,  17, 110,  33, 123,  45, 103, 117], device='cuda:0')
time: 0.0014s
start pruning module.layer2.0.downsample.0, num of channels: 128
tensor([ 79,  29,  70,  35,  48, 124,  21,   1,  26, 102,  62,  83,  96, 116,
         28, 104,  56,  22,  49,  93,  90,   4,  51,  71,  11, 125,  23, 103,
         42,  19,   0, 120,  61,  59,  82,  69,  60, 110], device='cuda:0')
time: 0.0014s
start pruning module.layer2.1.conv1, num of channels: 32
tensor([ 5, 31, 27,  2,  0, 30,  7, 16, 13, 28], device='cuda:0')
time: 0.0008s
start pruning module.layer2.1.conv2, num of channels: 32
tensor([22, 19, 30, 23, 25,  4,  6,  5, 17, 11], device='cuda:0')
time: 0.0008s
start pruning module.layer2.1.conv3, num of channels: 128
tensor([111,  60,  88,  72,  28,  61,  80,  94,  37,  40,  97, 120, 102,  82,
        123, 112,   8, 121, 116, 109,  17,  39,  31,  19,  89,  13,  59,  21,
         64,  44,  14,  26,  73,  45,  93, 125, 118, 104], device='cuda:0')
time: 0.0013s
start pruning module.layer2.2.conv1, num of channels: 32
tensor([20, 27, 26, 24, 12, 15, 10,  2, 21,  0], device='cuda:0')
time: 0.0008s
start pruning module.layer2.2.conv2, num of channels: 32
tensor([16, 12,  3, 19, 18, 29, 13,  8, 27,  4], device='cuda:0')
time: 0.0008s
start pruning module.layer2.2.conv3, num of channels: 128
tensor([102,  19,  79,  61,  93,  64,  72,  13,  71,   5, 123,   8,  28,  11,
         52, 112, 106,  94, 126,  43,  59, 117,  40,  95,  48, 111,  21,  27,
         33,  97,  39,  37,   0,  89,  73,  31,  88, 121], device='cuda:0')
time: 0.0013s
start pruning module.layer2.3.conv1, num of channels: 32
tensor([24, 26, 18,  9, 19,  2, 31, 13,  4, 29], device='cuda:0')
time: 0.0008s
start pruning module.layer2.3.conv2, num of channels: 32
tensor([ 8,  1,  3, 28,  5, 25,  2, 12,  9, 30], device='cuda:0')
time: 0.0008s
start pruning module.layer2.3.conv3, num of channels: 128
tensor([ 44, 112,  82,  65,  72,  80,   3,  60,  88,   0, 108,  95, 118,  13,
        116,  63,  18,  40,  45, 111,  64,  66,  97,  28,  56,  92, 109,  31,
        120,  89,   8,  29,  67,  27,  74, 105,  73,  38], device='cuda:0')
time: 0.0013s
start pruning module.layer2.4.conv1, num of channels: 32
tensor([ 8, 22, 29, 24, 16, 23, 14,  1, 11, 15], device='cuda:0')
time: 0.0008s
start pruning module.layer2.4.conv2, num of channels: 32
tensor([11,  7, 27, 16, 13,  1, 12, 23,  8, 15], device='cuda:0')
time: 0.0009s
start pruning module.layer2.4.conv3, num of channels: 128
tensor([ 40,  46,  69,  18,  29,  51,  92,  26, 111, 125,  78,  63,  90,   7,
         42, 124,  95,  37, 112, 120,  94,  60, 122,  59, 121,  77,  73,  80,
        101,  10, 123,  56,  97,   2,  43,  33, 110,  34], device='cuda:0')
time: 0.0013s
start pruning module.layer2.5.conv1, num of channels: 32
tensor([26, 11,  7, 21, 17, 12, 28, 20,  8, 30], device='cuda:0')
time: 0.0008s
start pruning module.layer2.5.conv2, num of channels: 32
tensor([12,  3, 10, 29, 26, 18, 14, 27, 11, 13], device='cuda:0')
time: 0.0008s
start pruning module.layer2.5.conv3, num of channels: 128
tensor([ 68,  98, 113, 101,  10,  52,   5, 126,  81, 117,  86,  53,  43,  33,
         73,  38,  11, 125, 119,  32,  47,  40,  63,  75,  34,   1,  21, 124,
         90,  25, 118,  54, 115,   2,  65,  95, 120,  57], device='cuda:0')
time: 0.0014s
start pruning module.layer2.6.conv1, num of channels: 32
tensor([27, 28,  4,  6, 24, 31, 20, 16, 29,  9], device='cuda:0')
time: 0.0008s
start pruning module.layer2.6.conv2, num of channels: 32
tensor([14,  9, 25, 29, 23,  1, 26, 20, 12, 16], device='cuda:0')
time: 0.0008s
start pruning module.layer2.6.conv3, num of channels: 128
tensor([126, 117,  68,  98,  81,  87,  31,  47,  96,  43, 123,  38, 108,  86,
         11,  78,  51,  90,  62,  75,  52,   5,  25,  17, 100,  61,  46,  66,
         91, 124, 115,  23,  65,  77, 103,  88, 107,  57], device='cuda:0')
time: 0.0013s
start pruning module.layer2.7.conv1, num of channels: 32
tensor([12, 20, 16, 13,  0, 19, 14,  9,  2,  6], device='cuda:0')
time: 0.0008s
start pruning module.layer2.7.conv2, num of channels: 32
tensor([ 1, 30, 31, 15, 17, 13, 11, 27, 21,  7], device='cuda:0')
time: 0.0008s
start pruning module.layer2.7.conv3, num of channels: 128
tensor([ 20, 127,  77,  25, 106,  64,  15,  36, 113,  53,  76,  41,  45,  71,
        103,  92,   2,  21,  22,   1,  32,  14, 104,  54,  66,  38, 100,  85,
         11, 101, 119,  74, 108,   5, 111,  55,  50,  31], device='cuda:0')
time: 0.0013s
start pruning module.layer2.8.conv1, num of channels: 32
tensor([18, 15, 17,  9, 10, 31,  6, 28, 23, 12], device='cuda:0')
time: 0.0008s
start pruning module.layer2.8.conv2, num of channels: 32
tensor([ 1,  0, 23, 31, 11,  8, 25, 13, 10,  4], device='cuda:0')
time: 0.0008s
start pruning module.layer2.8.conv3, num of channels: 128
tensor([ 36,   9,  55,  10,  85,  86,   6, 100,  81,  12,  76,  68,  30, 108,
         70,   3,  27,  24,  42,  48,  87,  99, 103,  31,  43, 113,  33, 110,
         89,  44,  17,  65, 104,  77,   5, 115,  13, 119], device='cuda:0')
time: 0.0013s
start pruning module.layer3.0.conv1, num of channels: 64
tensor([42, 22,  9, 52, 50, 58,  4, 59, 44, 32, 55,  5, 63, 57, 53, 26, 49, 37,
        43], device='cuda:0')
time: 0.0010s
start pruning module.layer3.0.conv2, num of channels: 64
tensor([43, 29,  0,  8, 57, 24,  2, 30, 51, 39, 54,  9, 61, 52, 22, 16, 20, 23,
         1], device='cuda:0')
time: 0.0009s
start pruning module.layer3.0.conv3, num of channels: 256
tensor([ 65,  76, 107,  40, 189,  92, 151, 183, 159,  56, 207, 248, 155, 234,
         87, 139,  21,   4, 251,  15, 212, 192, 101, 188, 190,  93, 104,  27,
         50,  13,  57, 164, 150,  37, 109,  83,  44,  88,  91, 255, 208, 154,
         16,  31,  99, 144,  68, 137, 125,  80, 130, 195, 200,  25,  97,  23,
         79, 175, 185, 219,  42, 163, 191, 232,  47, 133,  22,  55, 199, 140,
        177,   5, 113,  58, 110, 201, 100], device='cuda:0')
time: 0.0021s
start pruning module.layer3.0.downsample.0, num of channels: 256
tensor([ 64, 255, 110,  89,  34,  38, 189,  65,  19,  35, 156,  33, 141, 155,
         53,  79, 130,  72,  36,  76,  12, 208,  52,  92, 166, 170, 212, 125,
         85,  27,  57, 216,  21,  66, 164, 136,  43,  15, 237,  11, 251, 100,
         25, 150, 147,  93,  70,   7, 129, 167, 187,   1, 101,  98,  91, 122,
          4,  60,  62,  77, 197, 234,  24, 248,   5, 175, 240, 163, 117, 232,
        246, 233, 109,  78, 165, 222,  37], device='cuda:0')
time: 0.0021s
start pruning module.layer3.1.conv1, num of channels: 64
tensor([ 2, 52,  7, 32,  6, 24, 59, 42, 36, 29, 18, 12,  3, 26, 28, 31, 39, 51,
        58], device='cuda:0')
time: 0.0010s
start pruning module.layer3.1.conv2, num of channels: 64
tensor([31,  1, 35,  4, 15,  6, 45, 20, 34, 25, 30, 33, 46, 38, 39, 55, 27, 40,
        13], device='cuda:0')
time: 0.0010s
start pruning module.layer3.1.conv3, num of channels: 256
tensor([ 40,  11,  43, 178, 218, 231, 154,  49, 147, 122, 117, 232,  45, 221,
        199, 228, 247,  79, 240, 212,  52,  81,  78, 180,  27, 112, 155,  30,
        234,  34, 250, 111, 166,  65, 109, 249,   5,  89, 203,  28,  97, 104,
        121,  62,  53,  85, 179,  13, 107, 190, 106, 192, 202,  39, 100, 110,
          7,  20,  96, 187, 219,   6, 174, 194,   8, 116,  80, 227, 235, 136,
        210, 134, 246,  24,  70,  60,  95], device='cuda:0')
time: 0.0020s
start pruning module.layer3.2.conv1, num of channels: 64
tensor([ 1, 34, 59, 10, 48, 17, 60,  9, 39, 51,  3, 38, 18,  0, 47, 45, 12, 13,
        31], device='cuda:0')
time: 0.0010s
start pruning module.layer3.2.conv2, num of channels: 64
tensor([16, 48, 53,  7, 54,  9, 59, 57, 43, 32, 24, 50, 21,  0, 13, 35,  5, 60,
        27], device='cuda:0')
time: 0.0009s
start pruning module.layer3.2.conv3, num of channels: 256
tensor([  1, 112, 175,  20, 148, 136,  39,   3, 199, 147, 110,  95,   5,  19,
        113,  56,  73,  64,  78, 108, 255, 135, 231, 107, 179, 251, 141, 205,
        216, 117,  92, 146, 122,  88,  59, 252,  52, 206, 170,  31, 201, 166,
         97,  16, 219, 115, 188, 245, 203, 232, 161, 155,  21,   0, 165, 106,
        153, 172,  89,  77,  45, 150, 247, 220,   6,  12,   7, 143, 225, 235,
        174, 254, 190, 109,  74, 133,  23], device='cuda:0')
time: 0.0020s
start pruning module.layer3.3.conv1, num of channels: 64
tensor([50, 36,  6, 11, 37, 54, 47,  9, 20, 31, 34, 63, 13, 46, 62, 45, 58, 16,
        14], device='cuda:0')
time: 0.0010s
start pruning module.layer3.3.conv2, num of channels: 64
tensor([29, 40, 45, 49, 17, 38, 63, 36, 41, 32, 30, 14,  8, 11, 62, 23, 55, 52,
        48], device='cuda:0')
time: 0.0010s
start pruning module.layer3.3.conv3, num of channels: 256
tensor([ 42, 206, 115,   1, 213,  35, 148, 244,  94, 198, 117, 105, 205, 254,
        179,  20, 222,  41, 204, 208, 193, 112, 133, 124,  96, 223,   0, 227,
         75,  48,  29,  87, 238, 170,   7,  73,  93, 250,  10,  55,  65,  21,
        182, 251, 140,  52, 189,  64,  54, 146,  51, 212,  63, 236, 119, 171,
        191, 197, 108, 220,  78, 136, 130,  56, 194,  15,  85, 118, 160, 249,
         39, 121, 107,  86,  88,   9, 200], device='cuda:0')
time: 0.0021s
start pruning module.layer3.4.conv1, num of channels: 64
tensor([31, 57, 10, 58, 42, 60, 51, 26,  1, 24,  3, 11, 41, 21, 40, 49, 50, 17,
        54], device='cuda:0')
time: 0.0009s
start pruning module.layer3.4.conv2, num of channels: 64
tensor([ 2, 24, 35, 50, 46, 17, 38,  7,  3, 29, 58, 13, 27, 15, 59, 55,  1, 39,
        48], device='cuda:0')
time: 0.0010s
start pruning module.layer3.4.conv3, num of channels: 256
tensor([ 34, 230,  45, 114, 115, 250, 238, 191, 189, 188, 170, 151, 117,   1,
         96, 210, 192, 220, 236, 203,  41,  93, 204,  86, 154, 177, 132,  75,
         11, 121,  74,  78,  85, 101, 149, 225, 146, 190, 140,  14,  60,  42,
        109, 179,  83, 241,  47,  56,  92, 147,  18, 105,  89,  98,  65, 215,
        112, 224,  29, 244, 233,  57, 100,  50, 228,  55,  27, 137, 198, 155,
          5, 235, 185,  17, 163,  21, 108], device='cuda:0')
time: 0.0020s
start pruning module.layer3.5.conv1, num of channels: 64
tensor([ 1, 21, 61, 59, 16, 36, 54, 15, 34, 18, 43, 33, 63, 14, 30,  0, 41, 51,
        62], device='cuda:0')
time: 0.0010s
start pruning module.layer3.5.conv2, num of channels: 64
tensor([60, 35, 18, 53, 33, 17, 29, 39, 58, 15, 50, 38,  9, 12, 14, 28, 59, 42,
        30], device='cuda:0')
time: 0.0009s
start pruning module.layer3.5.conv3, num of channels: 256
tensor([ 20, 220, 190,  53,  34, 113,   2, 208,  76, 218,  37, 154,  89, 108,
        170,  45, 175,   1, 236,  40, 189, 230,  78, 146,  13,  93,  86, 207,
        114, 186, 211,  44,  74, 144, 234, 117, 159, 191, 202,  84, 245,  80,
         26,  35, 239,   7, 241, 120, 179,  48, 252,  42, 151,  75, 103, 210,
         61, 163,  71, 152,  43, 204,  52, 115,  96, 149, 136,  39, 122, 248,
        250, 137, 126,  82, 225,   6, 148], device='cuda:0')
time: 0.0021s
start pruning module.layer3.6.conv1, num of channels: 64
tensor([22, 55, 34, 39, 12, 13, 28,  9, 57, 52, 23, 27, 58, 43, 47, 48, 40, 38,
        53], device='cuda:0')
time: 0.0009s
start pruning module.layer3.6.conv2, num of channels: 64
tensor([17, 10, 53, 31, 51, 57,  0, 22, 28,  3, 23, 43, 60,  5, 61, 27,  2, 39,
        50], device='cuda:0')
time: 0.0010s
start pruning module.layer3.6.conv3, num of channels: 256
tensor([120,  34,  45, 236, 190, 121,   1, 103, 193, 117, 218,  93, 240, 202,
         20,  37, 154,   2,  35,  21, 220, 152, 109,  80, 239, 179, 136, 114,
        168, 205, 115,  42, 126,  86, 166, 186,  53,   5,  58,  40, 183, 206,
        147,   6, 238,  87, 150, 108,  27, 210,  61,  71,  13, 105, 198, 146,
        149,  92, 189, 159, 245,   3, 111,  75,  96,   8,  82,  76,  49, 235,
         99, 112, 113, 175, 201,  48,  36], device='cuda:0')
time: 0.0020s
start pruning module.layer3.7.conv1, num of channels: 64
tensor([46, 12, 27, 43, 58, 39, 45, 49, 41, 63,  9, 30, 42, 21, 33, 28, 16,  6,
        51], device='cuda:0')
time: 0.0010s
start pruning module.layer3.7.conv2, num of channels: 64
tensor([30, 52, 25, 60, 15, 27, 59, 23, 24, 17, 50,  2, 51, 38, 57, 62, 55, 47,
         8], device='cuda:0')
time: 0.0010s
start pruning module.layer3.7.conv3, num of channels: 256
tensor([ 34,   1, 117, 168,  43, 147,  20,  87,  85, 103, 205, 173, 245, 149,
        240,  53,  47, 104, 206, 126, 165, 174,   2,   5, 170,  78, 234, 179,
        222, 231, 204, 178, 142, 114,  45,   7,  35,  93, 188, 135, 252, 150,
         37, 153, 239, 220, 190,  42, 159, 244, 203, 199, 232,  74,  22, 108,
         86,  49, 120,  89, 148, 115,  80, 189, 140, 200, 166,  30, 158, 138,
          6, 226, 175, 236, 230, 109, 253], device='cuda:0')
time: 0.0021s
start pruning module.layer3.8.conv1, num of channels: 64
tensor([15, 63, 55, 52, 37, 36, 35, 60, 13,  6, 61,  7, 12,  4, 20, 45, 39,  1,
        46], device='cuda:0')
time: 0.0010s
start pruning module.layer3.8.conv2, num of channels: 64
tensor([16, 52, 32, 45, 48,  0, 36, 53, 58, 44, 57, 62, 56, 41, 24, 27, 14, 21,
        26], device='cuda:0')
time: 0.0010s
start pruning module.layer3.8.conv3, num of channels: 256
tensor([ 96,  87,   7,  34, 148, 152,  29, 205, 170,  45, 255,  97,  57, 136,
        101,   1, 179,  93, 132,  30, 103,  38, 141, 218, 106, 245,  22, 168,
         52,   5,  37, 223, 247, 206,  27, 190, 158,  10, 114,  47, 122, 240,
        104, 253, 210,  28, 220, 178, 167, 145, 201,   8, 184, 182, 160,  43,
        180,  72,  95, 128,  35, 251, 221, 232,  65,  12, 118, 125,  78, 153,
        127, 112,  58,   4,  82, 163, 149], device='cuda:0')
time: 0.0021s
Global sparsity: 69.22%
epoch: 0, train loss: 5.2608, train acc: 10.1040, test accuracy: 10.1600
step: 0, CrossEntropy loss: 3.1269 (3.1269), train accuracy: 16.406(16.406), lr: 0.0100
step: 100, CrossEntropy loss: 0.8824 (1.1870), train accuracy: 70.312(59.414), lr: 0.0100
step: 200, CrossEntropy loss: 0.7695 (0.9394), train accuracy: 76.562(67.821), lr: 0.0100
step: 300, CrossEntropy loss: 0.6365 (0.8279), train accuracy: 78.906(71.761), lr: 0.0100
epoch: 0, CrossEntropy loss: 0.7607, accuracy: 74.056
test acc: 80.1400
step: 0, CrossEntropy loss: 0.5681 (0.5681), train accuracy: 82.031(82.031), lr: 0.0100
step: 100, CrossEntropy loss: 0.5485 (0.4661), train accuracy: 83.594(84.050), lr: 0.0100
step: 200, CrossEntropy loss: 0.4870 (0.4627), train accuracy: 82.812(84.169), lr: 0.0100
step: 300, CrossEntropy loss: 0.4910 (0.4550), train accuracy: 83.594(84.448), lr: 0.0100
epoch: 1, CrossEntropy loss: 0.4476, accuracy: 84.604
test acc: 85.2600
step: 0, CrossEntropy loss: 0.3176 (0.3176), train accuracy: 87.500(87.500), lr: 0.0100
step: 100, CrossEntropy loss: 0.3747 (0.3820), train accuracy: 90.625(86.742), lr: 0.0100
step: 200, CrossEntropy loss: 0.2876 (0.3849), train accuracy: 91.406(86.668), lr: 0.0100
step: 300, CrossEntropy loss: 0.3288 (0.3824), train accuracy: 89.844(86.776), lr: 0.0100
epoch: 2, CrossEntropy loss: 0.3822, accuracy: 86.730
test acc: 84.3300
step: 0, CrossEntropy loss: 0.3772 (0.3772), train accuracy: 88.281(88.281), lr: 0.0099
step: 100, CrossEntropy loss: 0.3641 (0.3387), train accuracy: 88.281(88.351), lr: 0.0099
step: 200, CrossEntropy loss: 0.3862 (0.3435), train accuracy: 86.719(88.238), lr: 0.0099
step: 300, CrossEntropy loss: 0.3640 (0.3402), train accuracy: 88.281(88.294), lr: 0.0099
epoch: 3, CrossEntropy loss: 0.3402, accuracy: 88.270
test acc: 86.6700
step: 0, CrossEntropy loss: 0.2658 (0.2658), train accuracy: 90.625(90.625), lr: 0.0098
step: 100, CrossEntropy loss: 0.4164 (0.3098), train accuracy: 84.375(89.062), lr: 0.0098
step: 200, CrossEntropy loss: 0.2696 (0.3134), train accuracy: 91.406(89.066), lr: 0.0098
step: 300, CrossEntropy loss: 0.2333 (0.3149), train accuracy: 93.750(89.143), lr: 0.0098
epoch: 4, CrossEntropy loss: 0.3147, accuracy: 89.148
test acc: 86.9900
step: 0, CrossEntropy loss: 0.3286 (0.3286), train accuracy: 85.938(85.938), lr: 0.0098
step: 100, CrossEntropy loss: 0.2400 (0.2859), train accuracy: 94.531(90.091), lr: 0.0098
step: 200, CrossEntropy loss: 0.4180 (0.2895), train accuracy: 85.156(89.921), lr: 0.0098
step: 300, CrossEntropy loss: 0.2735 (0.2928), train accuracy: 89.062(89.849), lr: 0.0098
epoch: 5, CrossEntropy loss: 0.2960, accuracy: 89.806
test acc: 87.3900
step: 0, CrossEntropy loss: 0.2528 (0.2528), train accuracy: 92.188(92.188), lr: 0.0096
step: 100, CrossEntropy loss: 0.2590 (0.2722), train accuracy: 89.844(90.602), lr: 0.0096
step: 200, CrossEntropy loss: 0.2228 (0.2731), train accuracy: 92.969(90.582), lr: 0.0096
step: 300, CrossEntropy loss: 0.2822 (0.2789), train accuracy: 88.281(90.459), lr: 0.0096
epoch: 6, CrossEntropy loss: 0.2795, accuracy: 90.414
test acc: 87.8300
step: 0, CrossEntropy loss: 0.2533 (0.2533), train accuracy: 90.625(90.625), lr: 0.0095
step: 100, CrossEntropy loss: 0.2724 (0.2589), train accuracy: 92.188(91.383), lr: 0.0095
step: 200, CrossEntropy loss: 0.3883 (0.2651), train accuracy: 85.156(91.045), lr: 0.0095
step: 300, CrossEntropy loss: 0.3018 (0.2668), train accuracy: 88.281(90.911), lr: 0.0095
epoch: 7, CrossEntropy loss: 0.2662, accuracy: 90.960
test acc: 87.7200
step: 0, CrossEntropy loss: 0.3102 (0.3102), train accuracy: 91.406(91.406), lr: 0.0094
step: 100, CrossEntropy loss: 0.1750 (0.2528), train accuracy: 96.094(91.391), lr: 0.0094
step: 200, CrossEntropy loss: 0.2059 (0.2559), train accuracy: 92.969(91.286), lr: 0.0094
step: 300, CrossEntropy loss: 0.2434 (0.2588), train accuracy: 92.188(91.092), lr: 0.0094
epoch: 8, CrossEntropy loss: 0.2603, accuracy: 91.038
test acc: 88.1300
step: 0, CrossEntropy loss: 0.2651 (0.2651), train accuracy: 89.062(89.062), lr: 0.0092
step: 100, CrossEntropy loss: 0.2554 (0.2498), train accuracy: 92.188(91.584), lr: 0.0092
step: 200, CrossEntropy loss: 0.2364 (0.2561), train accuracy: 93.750(91.262), lr: 0.0092
step: 300, CrossEntropy loss: 0.2578 (0.2529), train accuracy: 91.406(91.398), lr: 0.0092
epoch: 9, CrossEntropy loss: 0.2542, accuracy: 91.320
test acc: 88.1600
step: 0, CrossEntropy loss: 0.2042 (0.2042), train accuracy: 93.750(93.750), lr: 0.0090
step: 100, CrossEntropy loss: 0.2311 (0.2434), train accuracy: 91.406(91.731), lr: 0.0090
step: 200, CrossEntropy loss: 0.1759 (0.2408), train accuracy: 96.094(91.663), lr: 0.0090
step: 300, CrossEntropy loss: 0.1858 (0.2429), train accuracy: 92.969(91.622), lr: 0.0090
epoch: 10, CrossEntropy loss: 0.2460, accuracy: 91.518
test acc: 87.2800
step: 0, CrossEntropy loss: 0.2642 (0.2642), train accuracy: 90.625(90.625), lr: 0.0089
step: 100, CrossEntropy loss: 0.2790 (0.2322), train accuracy: 89.844(91.832), lr: 0.0089
step: 200, CrossEntropy loss: 0.2498 (0.2354), train accuracy: 92.188(91.671), lr: 0.0089
step: 300, CrossEntropy loss: 0.2448 (0.2346), train accuracy: 92.969(91.759), lr: 0.0089
epoch: 11, CrossEntropy loss: 0.2396, accuracy: 91.640
test acc: 88.6000
step: 0, CrossEntropy loss: 0.2263 (0.2263), train accuracy: 89.844(89.844), lr: 0.0086
step: 100, CrossEntropy loss: 0.2676 (0.2213), train accuracy: 90.625(92.211), lr: 0.0086
step: 200, CrossEntropy loss: 0.2130 (0.2266), train accuracy: 90.625(92.172), lr: 0.0086
step: 300, CrossEntropy loss: 0.2554 (0.2286), train accuracy: 90.625(92.097), lr: 0.0086
epoch: 12, CrossEntropy loss: 0.2303, accuracy: 92.018
test acc: 88.4600
step: 0, CrossEntropy loss: 0.1556 (0.1556), train accuracy: 95.312(95.312), lr: 0.0084
step: 100, CrossEntropy loss: 0.1124 (0.2145), train accuracy: 96.094(92.458), lr: 0.0084
step: 200, CrossEntropy loss: 0.2245 (0.2231), train accuracy: 92.969(92.254), lr: 0.0084
step: 300, CrossEntropy loss: 0.2363 (0.2254), train accuracy: 93.750(92.149), lr: 0.0084
epoch: 13, CrossEntropy loss: 0.2257, accuracy: 92.158
test acc: 88.7200
step: 0, CrossEntropy loss: 0.2291 (0.2291), train accuracy: 93.750(93.750), lr: 0.0082
step: 100, CrossEntropy loss: 0.1912 (0.2007), train accuracy: 94.531(93.038), lr: 0.0082
step: 200, CrossEntropy loss: 0.1523 (0.2106), train accuracy: 95.312(92.650), lr: 0.0082
step: 300, CrossEntropy loss: 0.1757 (0.2137), train accuracy: 94.531(92.574), lr: 0.0082
epoch: 14, CrossEntropy loss: 0.2177, accuracy: 92.472
test acc: 88.4200
step: 0, CrossEntropy loss: 0.2070 (0.2070), train accuracy: 93.750(93.750), lr: 0.0079
step: 100, CrossEntropy loss: 0.1949 (0.2106), train accuracy: 93.750(92.574), lr: 0.0079
step: 200, CrossEntropy loss: 0.1893 (0.2117), train accuracy: 94.531(92.487), lr: 0.0079
step: 300, CrossEntropy loss: 0.2156 (0.2130), train accuracy: 91.406(92.543), lr: 0.0079
epoch: 15, CrossEntropy loss: 0.2122, accuracy: 92.522
test acc: 89.1100
step: 0, CrossEntropy loss: 0.3109 (0.3109), train accuracy: 85.938(85.938), lr: 0.0077
step: 100, CrossEntropy loss: 0.3819 (0.2051), train accuracy: 86.719(92.915), lr: 0.0077
step: 200, CrossEntropy loss: 0.1662 (0.2067), train accuracy: 94.531(92.681), lr: 0.0077
step: 300, CrossEntropy loss: 0.1504 (0.2071), train accuracy: 97.656(92.730), lr: 0.0077
epoch: 16, CrossEntropy loss: 0.2088, accuracy: 92.696
test acc: 89.1000
step: 0, CrossEntropy loss: 0.1592 (0.1592), train accuracy: 93.750(93.750), lr: 0.0074
step: 100, CrossEntropy loss: 0.3130 (0.1898), train accuracy: 87.500(93.533), lr: 0.0074
step: 200, CrossEntropy loss: 0.2223 (0.2004), train accuracy: 92.188(93.027), lr: 0.0074
step: 300, CrossEntropy loss: 0.1385 (0.1968), train accuracy: 93.750(93.161), lr: 0.0074
epoch: 17, CrossEntropy loss: 0.1998, accuracy: 93.030
test acc: 89.6000
step: 0, CrossEntropy loss: 0.3041 (0.3041), train accuracy: 88.281(88.281), lr: 0.0071
step: 100, CrossEntropy loss: 0.1770 (0.1929), train accuracy: 95.312(93.093), lr: 0.0071
step: 200, CrossEntropy loss: 0.1553 (0.1921), train accuracy: 92.969(93.256), lr: 0.0071
step: 300, CrossEntropy loss: 0.1564 (0.1957), train accuracy: 94.531(93.221), lr: 0.0071
epoch: 18, CrossEntropy loss: 0.1986, accuracy: 93.082
test acc: 89.6100
step: 0, CrossEntropy loss: 0.1641 (0.1641), train accuracy: 95.312(95.312), lr: 0.0068
step: 100, CrossEntropy loss: 0.1743 (0.1771), train accuracy: 93.750(94.036), lr: 0.0068
step: 200, CrossEntropy loss: 0.1931 (0.1868), train accuracy: 93.750(93.692), lr: 0.0068
step: 300, CrossEntropy loss: 0.2951 (0.1898), train accuracy: 91.406(93.568), lr: 0.0068
epoch: 19, CrossEntropy loss: 0.1926, accuracy: 93.394
test acc: 89.4100
step: 0, CrossEntropy loss: 0.0808 (0.0808), train accuracy: 99.219(99.219), lr: 0.0065
step: 100, CrossEntropy loss: 0.1775 (0.1784), train accuracy: 95.312(93.959), lr: 0.0065
step: 200, CrossEntropy loss: 0.2104 (0.1813), train accuracy: 92.188(93.867), lr: 0.0065
step: 300, CrossEntropy loss: 0.2372 (0.1815), train accuracy: 92.188(93.750), lr: 0.0065
epoch: 20, CrossEntropy loss: 0.1867, accuracy: 93.562
test acc: 89.1800
step: 0, CrossEntropy loss: 0.1607 (0.1607), train accuracy: 93.750(93.750), lr: 0.0062
step: 100, CrossEntropy loss: 0.1561 (0.1746), train accuracy: 96.094(94.059), lr: 0.0062
step: 200, CrossEntropy loss: 0.2069 (0.1736), train accuracy: 93.750(94.014), lr: 0.0062
step: 300, CrossEntropy loss: 0.1837 (0.1777), train accuracy: 95.312(93.893), lr: 0.0062
epoch: 21, CrossEntropy loss: 0.1799, accuracy: 93.794
test acc: 89.8500
step: 0, CrossEntropy loss: 0.1966 (0.1966), train accuracy: 95.312(95.312), lr: 0.0059
step: 100, CrossEntropy loss: 0.1583 (0.1790), train accuracy: 96.094(93.510), lr: 0.0059
step: 200, CrossEntropy loss: 0.1874 (0.1827), train accuracy: 91.406(93.493), lr: 0.0059
step: 300, CrossEntropy loss: 0.1522 (0.1841), train accuracy: 95.312(93.605), lr: 0.0059
epoch: 22, CrossEntropy loss: 0.1778, accuracy: 93.818
test acc: 89.8700
step: 0, CrossEntropy loss: 0.1017 (0.1017), train accuracy: 96.875(96.875), lr: 0.0056
step: 100, CrossEntropy loss: 0.1513 (0.1602), train accuracy: 95.312(94.493), lr: 0.0056
step: 200, CrossEntropy loss: 0.2337 (0.1656), train accuracy: 89.062(94.259), lr: 0.0056
step: 300, CrossEntropy loss: 0.1472 (0.1690), train accuracy: 94.531(94.134), lr: 0.0056
epoch: 23, CrossEntropy loss: 0.1693, accuracy: 94.168
test acc: 89.5100
step: 0, CrossEntropy loss: 0.2364 (0.2364), train accuracy: 91.406(91.406), lr: 0.0053
step: 100, CrossEntropy loss: 0.1616 (0.1556), train accuracy: 96.094(94.601), lr: 0.0053
step: 200, CrossEntropy loss: 0.1353 (0.1631), train accuracy: 94.531(94.403), lr: 0.0053
step: 300, CrossEntropy loss: 0.2019 (0.1660), train accuracy: 90.625(94.264), lr: 0.0053
epoch: 24, CrossEntropy loss: 0.1663, accuracy: 94.284
test acc: 90.0600
step: 0, CrossEntropy loss: 0.0993 (0.0993), train accuracy: 95.312(95.312), lr: 0.0050
step: 100, CrossEntropy loss: 0.1257 (0.1529), train accuracy: 95.312(94.740), lr: 0.0050
step: 200, CrossEntropy loss: 0.1265 (0.1566), train accuracy: 96.094(94.508), lr: 0.0050
step: 300, CrossEntropy loss: 0.2414 (0.1606), train accuracy: 90.625(94.394), lr: 0.0050
epoch: 25, CrossEntropy loss: 0.1619, accuracy: 94.346
test acc: 90.2600
step: 0, CrossEntropy loss: 0.1731 (0.1731), train accuracy: 94.531(94.531), lr: 0.0047
step: 100, CrossEntropy loss: 0.1079 (0.1459), train accuracy: 97.656(94.933), lr: 0.0047
step: 200, CrossEntropy loss: 0.2111 (0.1524), train accuracy: 91.406(94.776), lr: 0.0047
step: 300, CrossEntropy loss: 0.1423 (0.1536), train accuracy: 92.188(94.754), lr: 0.0047
epoch: 26, CrossEntropy loss: 0.1555, accuracy: 94.714
test acc: 90.0600
step: 0, CrossEntropy loss: 0.1561 (0.1561), train accuracy: 94.531(94.531), lr: 0.0044
step: 100, CrossEntropy loss: 0.2014 (0.1470), train accuracy: 91.406(94.910), lr: 0.0044
step: 200, CrossEntropy loss: 0.1049 (0.1489), train accuracy: 96.875(94.846), lr: 0.0044
step: 300, CrossEntropy loss: 0.1895 (0.1501), train accuracy: 95.312(94.804), lr: 0.0044
epoch: 27, CrossEntropy loss: 0.1521, accuracy: 94.692
test acc: 90.0600
step: 0, CrossEntropy loss: 0.1097 (0.1097), train accuracy: 96.875(96.875), lr: 0.0041
step: 100, CrossEntropy loss: 0.0683 (0.1441), train accuracy: 98.438(95.096), lr: 0.0041
step: 200, CrossEntropy loss: 0.1384 (0.1428), train accuracy: 95.312(95.122), lr: 0.0041
step: 300, CrossEntropy loss: 0.0934 (0.1448), train accuracy: 97.656(95.097), lr: 0.0041
epoch: 28, CrossEntropy loss: 0.1444, accuracy: 95.072
test acc: 90.3900
step: 0, CrossEntropy loss: 0.1646 (0.1646), train accuracy: 96.094(96.094), lr: 0.0038
step: 100, CrossEntropy loss: 0.1588 (0.1370), train accuracy: 95.312(95.336), lr: 0.0038
step: 200, CrossEntropy loss: 0.1487 (0.1389), train accuracy: 95.312(95.289), lr: 0.0038
step: 300, CrossEntropy loss: 0.1156 (0.1416), train accuracy: 96.094(95.157), lr: 0.0038
epoch: 29, CrossEntropy loss: 0.1425, accuracy: 95.164
test acc: 90.3200
step: 0, CrossEntropy loss: 0.1526 (0.1526), train accuracy: 96.094(96.094), lr: 0.0035
step: 100, CrossEntropy loss: 0.1832 (0.1310), train accuracy: 93.750(95.753), lr: 0.0035
step: 200, CrossEntropy loss: 0.1434 (0.1348), train accuracy: 95.312(95.526), lr: 0.0035
step: 300, CrossEntropy loss: 0.1414 (0.1356), train accuracy: 96.875(95.453), lr: 0.0035
epoch: 30, CrossEntropy loss: 0.1362, accuracy: 95.364
test acc: 90.2400
step: 0, CrossEntropy loss: 0.1014 (0.1014), train accuracy: 96.875(96.875), lr: 0.0032
step: 100, CrossEntropy loss: 0.1390 (0.1316), train accuracy: 94.531(95.552), lr: 0.0032
step: 200, CrossEntropy loss: 0.1489 (0.1308), train accuracy: 92.969(95.561), lr: 0.0032
step: 300, CrossEntropy loss: 0.0665 (0.1325), train accuracy: 97.656(95.546), lr: 0.0032
epoch: 31, CrossEntropy loss: 0.1345, accuracy: 95.440
test acc: 90.5200
step: 0, CrossEntropy loss: 0.1202 (0.1202), train accuracy: 97.656(97.656), lr: 0.0029
step: 100, CrossEntropy loss: 0.1200 (0.1221), train accuracy: 96.094(95.916), lr: 0.0029
step: 200, CrossEntropy loss: 0.1073 (0.1272), train accuracy: 96.094(95.717), lr: 0.0029
step: 300, CrossEntropy loss: 0.1344 (0.1295), train accuracy: 95.312(95.616), lr: 0.0029
epoch: 32, CrossEntropy loss: 0.1285, accuracy: 95.626
test acc: 90.7900
step: 0, CrossEntropy loss: 0.1068 (0.1068), train accuracy: 95.312(95.312), lr: 0.0026
step: 100, CrossEntropy loss: 0.1117 (0.1187), train accuracy: 96.875(95.908), lr: 0.0026
step: 200, CrossEntropy loss: 0.1580 (0.1204), train accuracy: 93.750(95.876), lr: 0.0026
step: 300, CrossEntropy loss: 0.1379 (0.1225), train accuracy: 96.875(95.816), lr: 0.0026
epoch: 33, CrossEntropy loss: 0.1238, accuracy: 95.726
test acc: 90.8200
step: 0, CrossEntropy loss: 0.1269 (0.1269), train accuracy: 96.875(96.875), lr: 0.0023
step: 100, CrossEntropy loss: 0.1221 (0.1208), train accuracy: 96.094(95.955), lr: 0.0023
step: 200, CrossEntropy loss: 0.2355 (0.1219), train accuracy: 92.188(95.833), lr: 0.0023
step: 300, CrossEntropy loss: 0.1811 (0.1226), train accuracy: 92.969(95.785), lr: 0.0023
epoch: 34, CrossEntropy loss: 0.1220, accuracy: 95.796
test acc: 90.9300
step: 0, CrossEntropy loss: 0.0756 (0.0756), train accuracy: 97.656(97.656), lr: 0.0021
step: 100, CrossEntropy loss: 0.0602 (0.1128), train accuracy: 98.438(96.233), lr: 0.0021
step: 200, CrossEntropy loss: 0.1127 (0.1138), train accuracy: 96.875(96.152), lr: 0.0021
step: 300, CrossEntropy loss: 0.0858 (0.1159), train accuracy: 97.656(96.003), lr: 0.0021
epoch: 35, CrossEntropy loss: 0.1170, accuracy: 95.980
test acc: 90.7500
step: 0, CrossEntropy loss: 0.0824 (0.0824), train accuracy: 95.312(95.312), lr: 0.0018
step: 100, CrossEntropy loss: 0.2354 (0.1143), train accuracy: 92.188(96.101), lr: 0.0018
step: 200, CrossEntropy loss: 0.1032 (0.1125), train accuracy: 97.656(96.214), lr: 0.0018
step: 300, CrossEntropy loss: 0.1105 (0.1132), train accuracy: 96.875(96.203), lr: 0.0018
epoch: 36, CrossEntropy loss: 0.1143, accuracy: 96.124
test acc: 90.8200
step: 0, CrossEntropy loss: 0.1370 (0.1370), train accuracy: 94.531(94.531), lr: 0.0016
step: 100, CrossEntropy loss: 0.1073 (0.1128), train accuracy: 96.094(96.233), lr: 0.0016
step: 200, CrossEntropy loss: 0.1290 (0.1094), train accuracy: 96.875(96.319), lr: 0.0016
step: 300, CrossEntropy loss: 0.1992 (0.1102), train accuracy: 92.969(96.286), lr: 0.0016
epoch: 37, CrossEntropy loss: 0.1101, accuracy: 96.284
test acc: 91.1000
step: 0, CrossEntropy loss: 0.0666 (0.0666), train accuracy: 97.656(97.656), lr: 0.0014
step: 100, CrossEntropy loss: 0.0806 (0.1074), train accuracy: 96.875(96.542), lr: 0.0014
step: 200, CrossEntropy loss: 0.0939 (0.1036), train accuracy: 96.094(96.545), lr: 0.0014
step: 300, CrossEntropy loss: 0.0628 (0.1046), train accuracy: 97.656(96.532), lr: 0.0014
epoch: 38, CrossEntropy loss: 0.1059, accuracy: 96.462
test acc: 91.0100
step: 0, CrossEntropy loss: 0.0614 (0.0614), train accuracy: 98.438(98.438), lr: 0.0012
step: 100, CrossEntropy loss: 0.1028 (0.0993), train accuracy: 96.094(96.682), lr: 0.0012
step: 200, CrossEntropy loss: 0.0754 (0.1015), train accuracy: 99.219(96.657), lr: 0.0012
step: 300, CrossEntropy loss: 0.0824 (0.1025), train accuracy: 97.656(96.641), lr: 0.0012
epoch: 39, CrossEntropy loss: 0.1034, accuracy: 96.640
test acc: 90.8800
step: 0, CrossEntropy loss: 0.1555 (0.1555), train accuracy: 92.969(92.969), lr: 0.0010
step: 100, CrossEntropy loss: 0.1167 (0.1029), train accuracy: 95.312(96.581), lr: 0.0010
step: 200, CrossEntropy loss: 0.1169 (0.1021), train accuracy: 96.094(96.650), lr: 0.0010
step: 300, CrossEntropy loss: 0.0668 (0.1023), train accuracy: 99.219(96.615), lr: 0.0010
epoch: 40, CrossEntropy loss: 0.1019, accuracy: 96.610
test acc: 91.1100
step: 0, CrossEntropy loss: 0.0727 (0.0727), train accuracy: 96.875(96.875), lr: 0.0008
step: 100, CrossEntropy loss: 0.0782 (0.0974), train accuracy: 96.875(96.798), lr: 0.0008
step: 200, CrossEntropy loss: 0.0632 (0.0968), train accuracy: 97.656(96.801), lr: 0.0008
step: 300, CrossEntropy loss: 0.0862 (0.0973), train accuracy: 96.875(96.787), lr: 0.0008
epoch: 41, CrossEntropy loss: 0.1001, accuracy: 96.680
test acc: 91.0500
step: 0, CrossEntropy loss: 0.1328 (0.1328), train accuracy: 96.875(96.875), lr: 0.0006
step: 100, CrossEntropy loss: 0.1358 (0.0998), train accuracy: 93.750(96.790), lr: 0.0006
step: 200, CrossEntropy loss: 0.0880 (0.0980), train accuracy: 96.094(96.813), lr: 0.0006
step: 300, CrossEntropy loss: 0.1106 (0.0976), train accuracy: 96.094(96.787), lr: 0.0006
epoch: 42, CrossEntropy loss: 0.0976, accuracy: 96.734
test acc: 91.0900
step: 0, CrossEntropy loss: 0.0762 (0.0762), train accuracy: 96.875(96.875), lr: 0.0005
step: 100, CrossEntropy loss: 0.0537 (0.0899), train accuracy: 98.438(96.898), lr: 0.0005
step: 200, CrossEntropy loss: 0.0962 (0.0945), train accuracy: 96.875(96.809), lr: 0.0005
step: 300, CrossEntropy loss: 0.1073 (0.0958), train accuracy: 96.875(96.795), lr: 0.0005
epoch: 43, CrossEntropy loss: 0.0955, accuracy: 96.840
test acc: 91.0700
step: 0, CrossEntropy loss: 0.0687 (0.0687), train accuracy: 98.438(98.438), lr: 0.0004
step: 100, CrossEntropy loss: 0.0692 (0.0965), train accuracy: 97.656(96.767), lr: 0.0004
step: 200, CrossEntropy loss: 0.1246 (0.0929), train accuracy: 96.094(96.875), lr: 0.0004
step: 300, CrossEntropy loss: 0.0752 (0.0936), train accuracy: 96.875(96.898), lr: 0.0004
epoch: 44, CrossEntropy loss: 0.0946, accuracy: 96.848
test acc: 91.0900
step: 0, CrossEntropy loss: 0.0888 (0.0888), train accuracy: 96.875(96.875), lr: 0.0003
step: 100, CrossEntropy loss: 0.1062 (0.0971), train accuracy: 96.875(96.759), lr: 0.0003
step: 200, CrossEntropy loss: 0.1298 (0.0954), train accuracy: 95.312(96.867), lr: 0.0003
step: 300, CrossEntropy loss: 0.1093 (0.0950), train accuracy: 94.531(96.849), lr: 0.0003
epoch: 45, CrossEntropy loss: 0.0941, accuracy: 96.896
test acc: 91.1200
step: 0, CrossEntropy loss: 0.0748 (0.0748), train accuracy: 98.438(98.438), lr: 0.0002
step: 100, CrossEntropy loss: 0.1183 (0.0973), train accuracy: 95.312(96.875), lr: 0.0002
step: 200, CrossEntropy loss: 0.0669 (0.0951), train accuracy: 98.438(96.995), lr: 0.0002
step: 300, CrossEntropy loss: 0.1494 (0.0929), train accuracy: 93.750(97.049), lr: 0.0002
epoch: 46, CrossEntropy loss: 0.0924, accuracy: 97.024
test acc: 91.1300
step: 0, CrossEntropy loss: 0.1093 (0.1093), train accuracy: 95.312(95.312), lr: 0.0001
step: 100, CrossEntropy loss: 0.0823 (0.0921), train accuracy: 97.656(96.968), lr: 0.0001
step: 200, CrossEntropy loss: 0.1201 (0.0891), train accuracy: 96.094(97.155), lr: 0.0001
step: 300, CrossEntropy loss: 0.1021 (0.0891), train accuracy: 99.219(97.127), lr: 0.0001
epoch: 47, CrossEntropy loss: 0.0900, accuracy: 97.080
test acc: 91.2000
step: 0, CrossEntropy loss: 0.0651 (0.0651), train accuracy: 98.438(98.438), lr: 0.0000
step: 100, CrossEntropy loss: 0.0847 (0.0873), train accuracy: 97.656(97.153), lr: 0.0000
step: 200, CrossEntropy loss: 0.0777 (0.0886), train accuracy: 96.875(97.104), lr: 0.0000
step: 300, CrossEntropy loss: 0.0755 (0.0905), train accuracy: 98.438(97.059), lr: 0.0000
epoch: 48, CrossEntropy loss: 0.0916, accuracy: 97.022
test acc: 90.9600
step: 0, CrossEntropy loss: 0.0923 (0.0923), train accuracy: 96.875(96.875), lr: 0.0000
step: 100, CrossEntropy loss: 0.0813 (0.0881), train accuracy: 96.875(97.092), lr: 0.0000
step: 200, CrossEntropy loss: 0.0712 (0.0901), train accuracy: 97.656(96.984), lr: 0.0000
step: 300, CrossEntropy loss: 0.0897 (0.0897), train accuracy: 96.094(96.981), lr: 0.0000
epoch: 49, CrossEntropy loss: 0.0892, accuracy: 97.056
test acc: 91.1000
