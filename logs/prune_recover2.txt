Namespace(batch_size=128, dataset='cifar10', epochs=50, gpu='2', lr=0.01, model='resnet56', num_workers=8, pretrained_model='pretrained_model/model_best.pth.tar', prune_alpha=0.5, prune_order=1, savedir='results/prune_recover2', seed=10, soft=None, structured=None, weight_decay=0.0003)
Files already downloaded and verified
initialize CrossEntropy
importance structured pruning testing >>>>>>>>>>>>>>>>>>>>>>>>
model sum:  -1111.3250433802605
before pruning, train loss: 0.0031, train acc: 99.9780, test accuracy: 94.2900
warmup for one epoch
step: 0, CrossEntropy loss: 0.0027 (0.0027), train accuracy: 100.000(100.000), lr: 0.0100
step: 100, CrossEntropy loss: 0.0065 (0.0052), train accuracy: 100.000(99.899), lr: 0.0100
step: 200, CrossEntropy loss: 0.0019 (0.0054), train accuracy: 100.000(99.895), lr: 0.0100
step: 300, CrossEntropy loss: 0.0031 (0.0058), train accuracy: 100.000(99.883), lr: 0.0100
epoch: -1, CrossEntropy loss: 0.0059, accuracy: 99.892
test acc: 94.0900
start pruning module.conv1, num of channels: 16
tensor([ 3, 10, 12,  2,  9,  7, 15,  8], device='cuda:0')
time: 0.0030s
start pruning module.layer1.0.conv1, num of channels: 16
tensor([ 5, 11,  4, 14,  8, 10,  7, 13], device='cuda:0')
time: 0.0011s
start pruning module.layer1.0.conv2, num of channels: 16
tensor([11,  1,  9,  5, 12,  4, 14,  8], device='cuda:0')
time: 0.0011s
start pruning module.layer1.0.conv3, num of channels: 64
tensor([54, 26, 63, 28, 44, 52,  8, 34, 48, 41, 25, 50, 59,  5, 13, 10, 27,  1,
        37, 29, 43, 19, 11, 22, 18, 57, 33,  4, 38,  3, 45, 23],
       device='cuda:0')
time: 0.0016s
start pruning module.layer1.0.downsample.0, num of channels: 64
tensor([ 5, 41, 26, 34, 63, 27, 48, 44, 28, 59, 10, 50, 43,  1, 52, 25, 54,  8,
        29, 13, 37, 11, 19, 18, 22, 23, 36, 57, 33, 31,  4, 38],
       device='cuda:0')
time: 0.0015s
start pruning module.layer1.1.conv1, num of channels: 16
tensor([14,  3, 10,  8,  6,  7,  1,  0], device='cuda:0')
time: 0.0009s
start pruning module.layer1.1.conv2, num of channels: 16
tensor([ 3, 13, 12,  4,  1,  0,  2,  5], device='cuda:0')
time: 0.0010s
start pruning module.layer1.1.conv3, num of channels: 64
tensor([28, 26, 50, 27,  5, 41,  8, 53, 48, 25, 52, 43, 10, 34, 55, 44,  1, 15,
        59, 54, 13, 37, 11, 63, 29, 18, 22, 36, 35, 33, 38, 23],
       device='cuda:0')
time: 0.0014s
start pruning module.layer1.2.conv1, num of channels: 16
tensor([14,  2, 11,  1,  3, 13,  0,  9], device='cuda:0')
time: 0.0009s
start pruning module.layer1.2.conv2, num of channels: 16
tensor([ 2,  3,  6, 13,  1, 12,  9,  4], device='cuda:0')
time: 0.0010s
start pruning module.layer1.2.conv3, num of channels: 64
tensor([53, 25, 28, 27, 48, 63, 44, 59, 50, 43, 26, 34, 37, 52,  1, 54,  8, 41,
        51, 21, 55, 13, 10,  5, 15, 11, 29, 60, 18, 56, 33, 22],
       device='cuda:0')
time: 0.0015s
start pruning module.layer1.3.conv1, num of channels: 16
tensor([11,  1,  6,  0,  8,  7,  3, 12], device='cuda:0')
time: 0.0009s
start pruning module.layer1.3.conv2, num of channels: 16
tensor([11,  1,  3,  6,  2,  0,  4,  5], device='cuda:0')
time: 0.0009s
start pruning module.layer1.3.conv3, num of channels: 64
tensor([53, 59, 10,  8, 28, 54, 48, 34, 39, 63, 43, 52, 37, 26,  1,  5, 11, 13,
        29, 60, 55, 21, 51, 27, 44, 50, 25, 41, 15,  3,  0,  2],
       device='cuda:0')
time: 0.0014s
start pruning module.layer1.4.conv1, num of channels: 16
tensor([ 7,  8, 12,  3, 14,  0,  2,  1], device='cuda:0')
time: 0.0008s
start pruning module.layer1.4.conv2, num of channels: 16
tensor([13,  8,  9, 14,  1, 10, 12,  3], device='cuda:0')
time: 0.0008s
start pruning module.layer1.4.conv3, num of channels: 64
tensor([27, 57, 48, 10, 16, 56, 62, 49, 28,  7, 20,  6, 51, 58, 37,  2, 42, 61,
        55, 15,  0, 30, 32, 39, 59, 18, 14, 44, 38, 29, 50, 12],
       device='cuda:0')
time: 0.0013s
start pruning module.layer1.5.conv1, num of channels: 16
tensor([13,  4, 11,  1, 14,  6,  7,  3], device='cuda:0')
time: 0.0008s
start pruning module.layer1.5.conv2, num of channels: 16
tensor([ 4,  3,  0,  1,  9,  8, 14, 12], device='cuda:0')
time: 0.0008s
start pruning module.layer1.5.conv3, num of channels: 64
tensor([14, 49,  2, 22, 20, 57, 30,  9, 36, 17, 38, 12, 39, 33, 32, 56, 42, 61,
         4,  3, 58, 23,  6, 55, 10, 19, 18, 47, 63, 13, 21, 45],
       device='cuda:0')
time: 0.0013s
start pruning module.layer1.6.conv1, num of channels: 16
tensor([ 2, 14, 15, 11,  5,  0,  6, 13], device='cuda:0')
time: 0.0009s
start pruning module.layer1.6.conv2, num of channels: 16
tensor([ 9,  7, 15,  4,  5,  6,  2,  8], device='cuda:0')
time: 0.0008s
start pruning module.layer1.6.conv3, num of channels: 64
tensor([27, 23, 45, 36, 42, 49, 14, 40, 61, 20,  3, 25, 10, 18, 55, 47, 48, 28,
        17,  6, 11, 51, 41, 22, 39, 56, 58, 54, 37, 59, 32, 53],
       device='cuda:0')
time: 0.0013s
start pruning module.layer1.7.conv1, num of channels: 16
tensor([ 7,  2, 15,  3, 12,  1,  8, 14], device='cuda:0')
time: 0.0008s
start pruning module.layer1.7.conv2, num of channels: 16
tensor([ 1,  8, 12,  6,  5, 10, 15,  7], device='cuda:0')
time: 0.0008s
start pruning module.layer1.7.conv3, num of channels: 64
tensor([47, 49, 61,  2, 31, 46, 40, 12,  0, 20,  9, 30, 33, 58, 60, 17, 27, 18,
        45,  6,  3, 36, 32, 11, 42, 16, 14, 37, 35, 38, 56, 21],
       device='cuda:0')
time: 0.0013s
start pruning module.layer1.8.conv1, num of channels: 16
tensor([14,  6,  0,  7, 12, 13,  9, 15], device='cuda:0')
time: 0.0008s
start pruning module.layer1.8.conv2, num of channels: 16
tensor([10,  3,  1,  0, 15,  6, 14,  9], device='cuda:0')
time: 0.0008s
start pruning module.layer1.8.conv3, num of channels: 64
tensor([40, 17,  6, 43,  3, 10, 25, 61, 18,  2, 23, 20, 42, 51, 26, 46, 45, 60,
        29, 50, 21, 31, 59, 57, 14, 27,  9,  8, 44,  4, 34, 63],
       device='cuda:0')
time: 0.0013s
start pruning module.layer2.0.conv1, num of channels: 32
tensor([30, 23, 10, 15, 26,  1,  0, 24, 21, 19, 25, 31,  9, 18,  7,  8],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.0.conv2, num of channels: 32
tensor([26,  2, 11,  8, 25, 13, 20, 30,  6, 16,  5, 12, 21, 17, 31, 24],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.0.conv3, num of channels: 128
tensor([  9,  23,  58,  52,  70, 126,   4,  87,  11,  98,  10,  79,  84, 106,
        124,  48,  38,   1,  54,   5,  71, 122,  27,  35, 120,  78, 110,  86,
         17, 105,  96,  24,  12,  53, 101,   7,  45,  73,  33, 117, 114,  62,
        102,   0, 123, 103,  21, 104,  89,  26,  44,  97,   8, 109, 125,  74,
         51, 113,  91,  50,  39, 107,  56,  22], device='cuda:0')
time: 0.0022s
start pruning module.layer2.0.downsample.0, num of channels: 128
tensor([ 56, 102,  79,  62,  35,  29,  49, 124,  93,  83, 116,   0,  21,  70,
         51,  71,  48,  28,   4,  59,  60, 120,   1,  90,  42,  82,  96, 103,
         61, 114,  26,  22,  19,  78, 104,   5,  46, 110,  69,  11,  23,  98,
        122,  37, 126, 125, 109,   7,  45,  74,  65,  17, 105,  39,  54,  87,
         84,  18,  10, 101,  15,  24,  97,  67], device='cuda:0')
time: 0.0019s
start pruning module.layer2.1.conv1, num of channels: 32
tensor([ 5,  2, 16, 31,  7, 10,  3, 12,  1, 27,  0, 30,  4, 11, 17, 20],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.1.conv2, num of channels: 32
tensor([22, 17,  4, 28, 30, 23, 20,  6,  2,  5, 11, 19, 25, 12,  9,  7],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.1.conv3, num of channels: 128
tensor([ 94,  60,  88,  37, 111,  89,  72,  61,  31,  28, 123, 120, 121, 109,
         59,  13,  80,  97, 116,   8, 112,  39,  54, 102,  21,  75,  26,  82,
         45,  17, 125,  44,  40,  73,  64,  14,  19,  93,  24,  27,  22, 114,
          0, 104,  50,  56, 126,  62,  67, 105,  84,  12,  18,  83,  69, 118,
        107,  91,  74,  49,  33,  86,  11,   1], device='cuda:0')
time: 0.0019s
start pruning module.layer2.2.conv1, num of channels: 32
tensor([12, 26, 14, 15, 27,  5, 20, 21, 23,  2, 24,  0, 19,  9, 10, 31],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.2.conv2, num of channels: 32
tensor([25, 18,  3,  6, 19, 12,  8, 16,  4, 14, 13, 17, 29, 31, 27,  5],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.2.conv3, num of channels: 128
tensor([102,  79,  61,  95,  28,  94,  31,  93,  71,  64,  72,  43,  11, 117,
         52, 123,  19,   8,  40, 126,  33,   0,  14,  59,   5,  13,  73,  39,
         37,  88, 112, 113,  97, 109,  27,  54, 121, 111, 106,  10,  92,  89,
        101,  46,  49,  63,  38,  44, 116,  62,  60,  65,  16,  91, 107, 118,
         21, 125,  86, 110,  84, 114,  48,  75], device='cuda:0')
time: 0.0019s
start pruning module.layer2.3.conv1, num of channels: 32
tensor([24, 19, 26, 13, 18,  9, 31, 16,  7, 29,  2, 12,  6,  4, 23, 27],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.3.conv2, num of channels: 32
tensor([ 8,  5, 28,  1,  2, 30, 21, 25,  3, 24,  7, 12, 23, 19,  9,  4],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.3.conv3, num of channels: 128
tensor([  3,  82, 112,  80,  65,  95,  72,  44, 116,  60,  88, 118,   0,  28,
        111,  92, 108,  40,  64, 109,  97,  31,  45,  66,  18,  73,  63, 120,
         13,  89,  62,  29,  38,  27,  56,   8,  67,  74,  57, 123,   9,  84,
        114,  69,  94,  59,  75, 124, 125, 121,  83, 113,  21,  43,  51,   1,
        119, 105,  17,  49,  91,  33,  52,  48], device='cuda:0')
time: 0.0019s
start pruning module.layer2.4.conv1, num of channels: 32
tensor([ 1,  8, 23, 24, 22, 11, 29, 16, 28, 25, 19, 14, 15,  6, 17, 27],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.4.conv2, num of channels: 32
tensor([11,  7, 27, 16,  1,  8, 13, 15, 23, 22,  2, 12, 31,  4, 20, 17],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.4.conv3, num of channels: 128
tensor([ 92,  69,  63,  90,  40,  18,  51,  46, 116,  29, 124, 121,  78, 112,
         95,  56,   7, 120,  73,  77,  42,  80, 108,  34,  26, 122,  61, 119,
         21,  60,  59,  37, 123,  43,  27, 101, 125,  91, 111,  94,   2,  17,
         74,  32, 110,  33,  10,  75,  23,  97,  54,  39, 105, 113,  47,  67,
        118,  44,  16,  66, 126,  25,  88,  84], device='cuda:0')
time: 0.0019s
start pruning module.layer2.5.conv1, num of channels: 32
tensor([30, 12, 17, 11, 28,  7,  8, 21, 23, 26, 20, 27, 13,  5, 14,  4],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.5.conv2, num of channels: 32
tensor([29, 12, 26, 13, 30, 14, 18, 28, 21,  7, 17,  3, 10, 31, 16, 25],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.5.conv3, num of channels: 128
tensor([113,  98,  68,  47,  11,   5,  34,  43,  52,  75, 101, 119,  32, 124,
        125,  33, 117,  38,  21,  90, 126,  73,  10,  81,  85,   7,  63, 115,
         54,  96,  53, 104,  95, 118, 120,  50,  86, 110,  69,  16, 103, 108,
         77,  66,  51,  24,   2,  26,  15,  91,   1,  29,   4,  14,  25,  57,
         40, 123,  23,  27,  42, 106,  65,  12], device='cuda:0')
time: 0.0019s
start pruning module.layer2.6.conv1, num of channels: 32
tensor([29, 27, 28, 31,  9, 24, 22,  5, 18,  6,  4, 10, 20, 12, 16, 17],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.6.conv2, num of channels: 32
tensor([12,  9, 25, 31, 14, 20, 23,  1, 26, 22, 27, 16, 30,  5,  0, 29],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.6.conv3, num of channels: 128
tensor([ 68, 117,  31, 126,  87,  81,  11,   5,  38,  52,  17,  23,  86,  61,
         96,  47,  51,  91,  65, 100,  57,  78,  98,  54,  46,  75,  43, 107,
          6, 120,  21,  62,  50,  28, 115,  88,  90, 122, 108,  42, 116, 119,
         74, 123, 110,  25,  33,  84,  66,   8,  99,  26, 105,  55,  76, 103,
         44,  12,  67,  80,  73, 104,  15, 127], device='cuda:0')
time: 0.0019s
start pruning module.layer2.7.conv1, num of channels: 32
tensor([16, 20, 12, 14,  0, 13,  9,  1, 10,  8, 19,  7, 25,  2, 30,  5],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.7.conv2, num of channels: 32
tensor([30, 15, 31, 27, 21, 11, 13, 16, 10, 22,  4, 23,  1, 20, 26, 17],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.7.conv3, num of channels: 128
tensor([127,  76,  36,  20,  53,  77, 106,  92, 113,  41, 103,  71,  25,  38,
         64,   1, 108,  15,  14,  54,  81,  55,  91,  23,  32,  45,   2,  74,
        119,  22,  67, 100,  66,  44,  21,  30, 104,  50,  85,  11, 125,  88,
         59,  33,  99,  31, 101, 111,  63,  26,  78,  75,  89, 114,  24,  28,
          5,   3,  84,  62,  90, 122,  16,  68], device='cuda:0')
time: 0.0019s
start pruning module.layer2.8.conv1, num of channels: 32
tensor([10,  4, 22, 12, 28,  2, 23,  9, 18, 17,  3,  7, 31, 21, 15,  8],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.8.conv2, num of channels: 32
tensor([ 1, 11,  0, 31, 16, 23, 17,  6, 30, 13, 22, 15, 28,  7,  8, 25],
       device='cuda:0')
time: 0.0010s
start pruning module.layer2.8.conv3, num of channels: 128
tensor([  9,  55,  27,  12,   6,  70,  36,  17,  86,  85,  48,  81,  76, 108,
         24,  30, 103,  42,  10, 106,  89,  99,  43, 110, 105,   5,  65,  21,
         60,  44, 100,  92,  90,  33, 119,  87, 122, 107,   4, 123,  11,  47,
         77, 113,  31,  74,  91, 115, 118,  68, 126,  80, 117,  50,  52,   3,
         41,  64,  45,  13,  40,  14,  20,  51], device='cuda:0')
time: 0.0020s
start pruning module.layer3.0.conv1, num of channels: 64
tensor([22, 63, 52, 32, 36,  5, 26, 44, 39, 28, 49, 11, 35,  9,  3, 55, 30,  7,
        50,  4, 21, 58, 42, 12, 37, 46, 47, 59, 45, 33, 53, 18],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.0.conv2, num of channels: 64
tensor([19, 52, 49, 54, 63, 17, 43,  8, 28, 57, 61, 46,  0,  5, 11,  6, 12, 45,
        20, 48, 26, 10, 30, 40, 14,  2, 39, 31, 60, 56,  9, 59],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.0.conv3, num of channels: 256
tensor([ 76, 255,  65, 159,  27, 183, 122, 168,   4,  83, 139,  40,  92, 189,
        248,  68, 121,   3, 195,  50,  58, 185, 125,  88, 207, 141, 234, 151,
        136,  87, 219, 150,  80, 144, 137,  52, 100,  21, 164,  39,  59, 175,
        101, 190,  16,  26,  56,  97, 117,  69,  67,  25,  93, 200, 133, 148,
        244, 155,  77, 129, 212, 209, 130,  47,  72, 180, 107,  13,  46, 174,
         51, 215, 233, 208, 177,  36, 251, 108, 211,  44,  37, 222, 254, 163,
         64,  49,  82,  57, 191,  60, 109, 140, 178, 182, 197,  53, 149,  15,
        250, 216,  99, 134, 179,  22, 201, 111,  20,  55, 188,  48, 167,  32,
         45,  73,  24, 223, 253,  54,  23, 229, 124,  71,  35, 116, 199, 110,
         94, 120], device='cuda:0')
time: 0.0033s
start pruning module.layer3.0.downsample.0, num of channels: 256
tensor([ 64,  12, 255,  89, 110,  36,  72, 165, 125,   7,  77, 187, 122,  60,
         19,  76, 189, 147,  33, 141,  27,  52, 129, 216,  43,  85, 175, 174,
        179, 222, 150,  92,  34,  82, 130,   8, 136, 156, 100,  38, 240, 134,
         11, 167,  79, 101,  66,  83,  39, 170,  35, 251, 127,  47,  62,  59,
        115,   5, 185, 164,  90,  21, 160,  65, 212, 237,  53,  70, 117, 197,
        229, 207, 155, 208, 248,  91, 250, 118,  80, 219,  48, 121, 166, 144,
        195,  96, 235, 153, 180, 233, 182,  57, 132,  40,  28,  25,  50, 228,
        242,  24, 157, 217,   4, 142,  15,  56, 201,  44, 224,  30,  97,  42,
        221,  18, 254,  68, 223, 159,  49, 200, 169,  16, 209,  37, 230, 162,
        232,  61], device='cuda:0')
time: 0.0032s
start pruning module.layer3.1.conv1, num of channels: 64
tensor([ 6, 28, 62, 52, 58, 35, 32, 39,  2, 31, 19, 42, 21, 18, 25,  7, 14,  1,
        29, 51, 38,  3, 59, 24, 57, 37, 49, 47, 12, 45, 61, 26],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.1.conv2, num of channels: 64
tensor([14, 29, 15, 54, 27,  5, 45,  3, 50,  4, 25, 19, 20, 12,  9, 39, 30,  6,
        35,  1, 38, 31, 22, 36,  2, 40, 61, 13, 41,  8, 48, 33],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.1.conv3, num of channels: 256
tensor([250, 122,  40, 147,  81, 178,  43,  27, 154, 117, 221,  65,  96,  95,
         11,  39, 235, 174, 240, 249,  49,   7, 112,  45, 187,  85, 248, 164,
         79,  30, 180, 100, 232, 228, 121, 157, 116, 229, 132,  16, 199, 255,
         28,  89,  47,  60,  52, 231, 190,  51, 247, 179, 134, 216,  97, 254,
         83,  70, 166, 206, 138, 159,  80, 244,  34,  53, 173,  77, 212, 222,
         33, 227, 234,  90, 209, 210,  67,  94, 203, 186,   8, 110,  62, 129,
        126, 104, 133,  25,  48, 193, 170, 131, 237, 158, 181, 136, 152,  29,
        130, 106, 220, 198,   5, 142, 114,  72,  13, 243, 211,  78, 163, 155,
         20, 197, 162, 171, 160,  17, 102,  21,  98, 246, 218, 207,  37, 201,
        176, 242], device='cuda:0')
time: 0.0032s
start pruning module.layer3.2.conv1, num of channels: 64
tensor([ 0, 32, 55, 60,  7, 24, 59, 51,  1,  9, 39, 11, 61, 18, 38,  3, 31, 46,
        44, 26, 63, 45, 49, 21, 54, 56, 36, 30, 47, 34, 12, 57],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.2.conv2, num of channels: 64
tensor([57, 59, 33, 53, 51, 50, 34, 41, 24, 54, 16, 13,  7,  4, 38, 26, 43, 58,
        49, 40,  9, 20, 15, 19, 28, 62, 55,  8, 46, 48, 60, 32],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.2.conv3, num of channels: 256
tensor([ 39, 175, 112,  52,  73,  56, 216,   3,  95, 121, 206, 148,  64,  85,
         19, 199,  77,  20,  16, 250, 190, 162, 174, 255, 159, 147, 231, 136,
        160,  97,   1,   7,  29,  59, 106,  12, 165, 170, 222, 150, 141, 247,
         89,  32, 220, 201, 252, 187, 225, 205, 179,  69, 251, 122,  46, 181,
        200,  92, 254, 172,  40,  27, 117,  21,  67, 240, 227, 193, 116, 146,
        125,  43, 129,  45, 134,  54, 248,  72, 153, 168,   0, 145,  80, 235,
          4, 224, 173, 185,   5,  50, 166, 108, 127,  33, 144, 189, 210,  88,
        245,  17,  70, 221, 133,  75, 114, 143, 219, 243,   8,  66,  60, 232,
        163, 195, 178, 110, 155,  11, 203, 154, 107, 109,  38, 135, 115, 223,
         24,  42], device='cuda:0')
time: 0.0032s
start pruning module.layer3.3.conv1, num of channels: 64
tensor([58, 36, 63, 31,  8, 33,  2, 42, 32, 26, 57, 45,  7, 37,  9, 62,  6, 53,
        38, 13, 50, 54, 14,  0, 16, 11, 47, 46, 20, 55, 19, 35],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.3.conv2, num of channels: 64
tensor([55, 40, 26, 36, 12, 14, 16, 61,  5, 38, 52, 49, 39,  8, 33, 29, 34, 41,
        17, 30, 11,  4,  0, 46, 45, 32, 44, 63, 27, 62, 25, 23],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.3.conv3, num of channels: 256
tensor([222,  42, 121,  86, 250, 146,  52, 157, 112,  65, 117, 227, 148,   0,
        179, 220, 174, 185,   7,   4, 206, 244,  33, 125, 223,  64,  87, 249,
        175,  48, 197, 208,   8, 173, 255, 230,  85, 105, 178,  27, 204,  51,
        182,   1, 115, 254, 216, 198,  54,  94, 147,  80, 187,  56, 145, 191,
        241, 162, 252,  22,  12,  21, 160, 193,  35, 234, 215, 141, 200,  20,
         77,   9, 109,  41,  29,  25, 205, 213,  97, 240, 236, 192, 170,  39,
         43, 188, 195, 140, 245, 119,  55, 251,  10,  38, 167,  73, 124, 201,
        132, 101,  79,  88, 143, 181, 133,   3, 212,  34, 108, 172, 120,  63,
        154, 248, 231, 134,  47,  32, 156,  50,  60, 176,  83,  15, 229, 100,
        238, 130], device='cuda:0')
time: 0.0032s
start pruning module.layer3.4.conv1, num of channels: 64
tensor([24, 51, 42, 31, 56,  5, 21, 58,  2, 10, 23, 62, 29,  7, 53, 55, 40, 22,
        14, 49, 52,  8, 57, 61, 38, 44, 20, 17, 16, 13, 54, 35],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.4.conv2, num of channels: 64
tensor([ 2, 59, 24, 28, 29, 37, 14,  3, 50, 13, 35, 38, 40, 57, 58,  5, 21, 15,
         7, 11, 60,  4, 55, 23, 46, 41, 20, 51, 26, 53, 39,  9],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.4.conv3, num of channels: 256
tensor([ 86, 188,  85, 185, 114,  77,   8, 230, 149, 236, 250,   4, 117, 112,
         74,  45, 137,  33, 115, 233, 204,  18,  34, 151, 210, 121, 191,  29,
         42, 180, 179, 206, 222, 215, 220, 158, 187,  56,  38, 130, 255,  60,
         83,  55, 199,  90,  11,  41, 238,   1,  96,  27,   7, 241,  17, 216,
         89, 198,  44, 200, 189, 125, 249, 170,  20,  51,   5, 133, 100,  75,
        147,  47, 168, 217, 244, 186, 231, 243, 129, 134, 228, 172,  69, 235,
        203,  91,  98,  97,  40, 248,  54, 101, 224, 214, 227,  63, 132,  36,
        197,  26,  50, 211,  82, 146,  13,  65, 177, 190, 173, 155, 109,   3,
        157,  35, 163,  53,  61, 253, 162, 111,  21, 105, 246, 239, 182,  58,
        102, 120], device='cuda:0')
time: 0.0032s
start pruning module.layer3.5.conv1, num of channels: 64
tensor([14, 61, 59,  4, 34, 55,  2, 27,  1, 60, 43, 21, 36, 13, 40, 50,  8, 47,
        41, 48, 24, 23, 38, 57, 16, 37, 22, 31, 17, 19, 15, 12],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.5.conv2, num of channels: 64
tensor([35, 29, 43, 60,  2, 28, 31, 22,  3, 18, 27, 23, 49, 50, 53, 13, 58, 55,
        59, 34,  9, 10, 63, 42, 33, 39, 41, 46, 61, 30, 57,  0],
       device='cuda:0')
time: 0.0051s
start pruning module.layer3.5.conv3, num of channels: 256
tensor([ 20,   8,  86,  43,  76, 153, 220, 179, 208, 162,  53, 190, 186,  26,
         34, 126,  13,  44,  45, 120,   2, 250,  89, 117, 146,   7, 144, 230,
         27, 193, 175, 108, 211,  39, 243,  82, 236,   1, 207,  88,  40,  60,
         37,  80, 149, 252, 222, 122, 154, 132,   3, 245, 137,  61, 255, 159,
         28,  56, 160,  74, 200, 210, 130, 174, 148, 192, 151, 163,  91, 254,
        241, 141, 206, 133,  42,  78,  52,  87, 244, 185, 114, 198,  83, 248,
        239,  59, 181,  29, 136, 205, 238, 188, 142, 214,  36, 147, 213, 242,
         25, 199,  75,  10, 247, 218,  14, 127, 152, 150, 204,  11,  85, 170,
        215,  58, 187, 131, 121,  54,  55,  64,  97, 225, 223, 235,  57, 234,
         90,  77], device='cuda:0')
time: 0.0032s
start pruning module.layer3.6.conv1, num of channels: 64
tensor([23, 57, 36, 55, 18, 26, 29, 61, 24, 38, 43, 60,  4, 56, 15, 22, 48, 12,
        17, 41, 21, 34,  2, 63, 42, 58, 25,  3, 47, 32, 40, 28],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.6.conv2, num of channels: 64
tensor([50, 17, 31, 40, 27, 28,  1, 38, 62, 48, 16, 58, 49, 23, 33, 34, 53, 19,
        54, 44, 39, 61, 11, 32, 59, 10, 12, 26, 47, 55,  7, 36],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.6.conv3, num of channels: 256
tensor([120, 190, 126,  20, 206, 168, 121,  39,  42,  45, 147, 210, 179, 193,
        238,   1,   5,  27, 152,  85,  37, 109, 117, 175, 240, 242, 173, 233,
         58, 101, 136, 112,  61, 250,  49,  86,  34,  40, 174, 153,  35, 133,
          8, 236,  93,  82,  13, 186,  30, 222,  12, 220, 202,  71,   7, 244,
        211,   6, 149,  89,  87,  92, 122, 106,  43,  53, 104, 218, 252, 239,
        201, 144, 205, 208,  80, 154,  21, 198,  11, 183, 103,  51,  77, 166,
        159, 180, 114,  78, 108, 243, 214,  99,   3, 216,   9, 150,  65,   0,
         52,  16, 102,  38, 221,  97,  47, 105, 158, 237, 204, 226, 247,  36,
        163,  23, 146,  68, 246,  26, 115,  98, 164, 203, 151,  84, 253, 141,
         32, 209], device='cuda:0')
time: 0.0031s
start pruning module.layer3.7.conv1, num of channels: 64
tensor([33, 10, 58, 41, 40, 42, 54, 27, 53, 61, 12, 37, 45,  0, 44,  9, 43, 50,
         3, 46, 47, 38, 34, 20, 51, 26, 21, 56, 62,  1, 17, 16],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.7.conv2, num of channels: 64
tensor([ 6, 47, 13, 15, 39, 27,  2, 60, 21, 52, 55, 19, 25, 41, 36, 40, 43,  5,
        59, 46, 37,  7, 56, 11, 42,  8, 38, 22, 57,  1,  0, 61],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.7.conv3, num of channels: 256
tensor([ 43,   1, 179,  85, 244, 127, 206, 168, 117, 126, 174, 114, 162,   8,
         86,   4,  42,  34,  53, 222, 153,  30, 170, 178, 165,  87,  90, 240,
         32, 147, 140,  47, 204, 160,   5, 205, 142,  27, 132,  20, 220, 191,
        173,  39, 122, 231, 217, 236,  45, 199,  82, 190, 109, 234, 158, 149,
        230, 245, 185, 200,  89, 121, 212, 239, 193,   7,  65, 141, 151,  36,
        120,  49, 103,  92, 135,  52,  37, 252, 128, 166, 232, 233,  22, 106,
         40,  73, 159,  78,  77, 134, 150,  97,  51,  75, 176, 138, 163,  26,
          2, 133,  81, 175,  58, 250,  93, 203,  29, 148, 115,  99, 110, 255,
        104,   3, 210,  31, 242, 253, 188, 226,  72,  13,  38,   6,  74, 209,
        221,  35], device='cuda:0')
time: 0.0031s
start pruning module.layer3.8.conv1, num of channels: 64
tensor([ 3, 37, 52, 13, 38, 30, 62, 53, 16, 15, 61, 20, 60, 39,  6, 29, 26, 63,
        34, 27, 11,  4,  7, 24, 56, 43, 12, 51, 17, 32, 33, 50],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.8.conv2, num of channels: 64
tensor([20, 58,  8, 55, 57, 56, 32, 46, 21, 24,  7, 31, 62, 16, 50,  9, 37, 36,
        23,  4, 26, 14, 52,  0, 10, 40, 12, 53, 30, 27, 38, 28],
       device='cuda:0')
time: 0.0013s
start pruning module.layer3.8.conv3, num of channels: 256
tensor([170,  96,   5,  33, 179, 182,  87, 141, 206, 103, 240, 101,   7, 218,
         57,   4,  10, 153, 221, 136,  29,  27,  43, 165,   1, 190,  97,  45,
        148, 232, 230,  93, 210, 152,  38,   8, 122, 106, 117,  95, 127,  82,
        203, 255, 167, 135, 220,  52, 178, 104,  30, 180, 154,  73,  42, 155,
         44, 126, 226, 112, 205, 132, 147, 149,  65, 245, 242, 191, 116, 247,
        145, 114,  40, 183, 125, 159, 208, 228,  81,  37, 158,  23, 214, 110,
         34, 160,  12,  22, 181, 216, 168,  47, 200,  49, 175,  36, 253, 128,
        223, 184,  35, 252,  79,  78,  58,  11, 239, 118,  83, 222, 133, 251,
         85, 236,  25,  15, 140, 171,  64,  72,  63, 123, 146, 201, 224,  32,
         91,  86], device='cuda:0')
time: 0.0031s
Global sparsity: 49.47%
epoch: 0, train loss: 2.9131, train acc: 11.1260, test accuracy: 11.7600
step: 0, CrossEntropy loss: 2.4955 (2.4955), train accuracy: 42.188(42.188), lr: 0.0100
step: 100, CrossEntropy loss: 0.5494 (0.6688), train accuracy: 78.906(78.589), lr: 0.0100
step: 200, CrossEntropy loss: 0.2859 (0.5055), train accuracy: 89.062(83.524), lr: 0.0100
step: 300, CrossEntropy loss: 0.3164 (0.4370), train accuracy: 91.406(85.551), lr: 0.0100
epoch: 0, CrossEntropy loss: 0.3984, accuracy: 86.774
test acc: 88.1300
step: 0, CrossEntropy loss: 0.2602 (0.2602), train accuracy: 91.406(91.406), lr: 0.0100
step: 100, CrossEntropy loss: 0.2119 (0.2348), train accuracy: 92.188(91.932), lr: 0.0100
step: 200, CrossEntropy loss: 0.2888 (0.2313), train accuracy: 89.844(92.059), lr: 0.0100
step: 300, CrossEntropy loss: 0.1859 (0.2273), train accuracy: 93.750(92.182), lr: 0.0100
epoch: 1, CrossEntropy loss: 0.2215, accuracy: 92.398
test acc: 89.1500
step: 0, CrossEntropy loss: 0.2149 (0.2149), train accuracy: 92.188(92.188), lr: 0.0099
step: 100, CrossEntropy loss: 0.1218 (0.1796), train accuracy: 96.094(93.928), lr: 0.0099
step: 200, CrossEntropy loss: 0.1536 (0.1869), train accuracy: 93.750(93.556), lr: 0.0099
step: 300, CrossEntropy loss: 0.1198 (0.1857), train accuracy: 96.875(93.563), lr: 0.0099
epoch: 2, CrossEntropy loss: 0.1856, accuracy: 93.610
test acc: 90.0900
step: 0, CrossEntropy loss: 0.1993 (0.1993), train accuracy: 92.969(92.969), lr: 0.0098
step: 100, CrossEntropy loss: 0.0952 (0.1581), train accuracy: 96.875(94.694), lr: 0.0098
step: 200, CrossEntropy loss: 0.2109 (0.1575), train accuracy: 90.625(94.613), lr: 0.0098
step: 300, CrossEntropy loss: 0.2270 (0.1607), train accuracy: 92.188(94.495), lr: 0.0098
epoch: 3, CrossEntropy loss: 0.1628, accuracy: 94.474
test acc: 90.4100
step: 0, CrossEntropy loss: 0.1067 (0.1067), train accuracy: 94.531(94.531), lr: 0.0098
step: 100, CrossEntropy loss: 0.1175 (0.1413), train accuracy: 96.094(95.166), lr: 0.0098
step: 200, CrossEntropy loss: 0.1251 (0.1409), train accuracy: 96.875(95.215), lr: 0.0098
step: 300, CrossEntropy loss: 0.1210 (0.1452), train accuracy: 95.312(95.045), lr: 0.0098
epoch: 4, CrossEntropy loss: 0.1482, accuracy: 94.938
test acc: 90.2200
step: 0, CrossEntropy loss: 0.1440 (0.1440), train accuracy: 95.312(95.312), lr: 0.0096
step: 100, CrossEntropy loss: 0.1544 (0.1327), train accuracy: 95.312(95.490), lr: 0.0096
step: 200, CrossEntropy loss: 0.1137 (0.1360), train accuracy: 95.312(95.281), lr: 0.0096
step: 300, CrossEntropy loss: 0.1565 (0.1388), train accuracy: 94.531(95.201), lr: 0.0096
epoch: 5, CrossEntropy loss: 0.1389, accuracy: 95.232
test acc: 90.5100
step: 0, CrossEntropy loss: 0.0824 (0.0824), train accuracy: 98.438(98.438), lr: 0.0095
step: 100, CrossEntropy loss: 0.1109 (0.1229), train accuracy: 96.094(95.924), lr: 0.0095
step: 200, CrossEntropy loss: 0.0944 (0.1263), train accuracy: 96.094(95.736), lr: 0.0095
step: 300, CrossEntropy loss: 0.2535 (0.1293), train accuracy: 91.406(95.590), lr: 0.0095
epoch: 6, CrossEntropy loss: 0.1322, accuracy: 95.464
test acc: 91.1100
step: 0, CrossEntropy loss: 0.1323 (0.1323), train accuracy: 94.531(94.531), lr: 0.0094
step: 100, CrossEntropy loss: 0.1528 (0.1206), train accuracy: 93.750(95.777), lr: 0.0094
step: 200, CrossEntropy loss: 0.0643 (0.1214), train accuracy: 99.219(95.779), lr: 0.0094
step: 300, CrossEntropy loss: 0.1033 (0.1243), train accuracy: 96.094(95.725), lr: 0.0094
epoch: 7, CrossEntropy loss: 0.1232, accuracy: 95.810
test acc: 90.8600
step: 0, CrossEntropy loss: 0.0727 (0.0727), train accuracy: 97.656(97.656), lr: 0.0092
step: 100, CrossEntropy loss: 0.1078 (0.1080), train accuracy: 96.875(96.326), lr: 0.0092
step: 200, CrossEntropy loss: 0.1055 (0.1125), train accuracy: 96.094(96.171), lr: 0.0092
step: 300, CrossEntropy loss: 0.0926 (0.1124), train accuracy: 96.875(96.239), lr: 0.0092
epoch: 8, CrossEntropy loss: 0.1125, accuracy: 96.194
test acc: 91.0400
step: 0, CrossEntropy loss: 0.1144 (0.1144), train accuracy: 96.875(96.875), lr: 0.0090
step: 100, CrossEntropy loss: 0.0854 (0.1012), train accuracy: 97.656(96.550), lr: 0.0090
step: 200, CrossEntropy loss: 0.1505 (0.1064), train accuracy: 94.531(96.366), lr: 0.0090
step: 300, CrossEntropy loss: 0.0567 (0.1079), train accuracy: 98.438(96.301), lr: 0.0090
epoch: 9, CrossEntropy loss: 0.1086, accuracy: 96.276
test acc: 91.3100
step: 0, CrossEntropy loss: 0.0548 (0.0548), train accuracy: 99.219(99.219), lr: 0.0089
step: 100, CrossEntropy loss: 0.1007 (0.0973), train accuracy: 96.875(96.689), lr: 0.0089
step: 200, CrossEntropy loss: 0.1153 (0.1001), train accuracy: 96.094(96.537), lr: 0.0089
step: 300, CrossEntropy loss: 0.1658 (0.1022), train accuracy: 93.750(96.455), lr: 0.0089
epoch: 10, CrossEntropy loss: 0.1050, accuracy: 96.352
test acc: 90.9100
step: 0, CrossEntropy loss: 0.0648 (0.0648), train accuracy: 96.875(96.875), lr: 0.0086
step: 100, CrossEntropy loss: 0.0854 (0.0956), train accuracy: 96.875(96.867), lr: 0.0086
step: 200, CrossEntropy loss: 0.0685 (0.0979), train accuracy: 98.438(96.739), lr: 0.0086
step: 300, CrossEntropy loss: 0.1057 (0.1005), train accuracy: 97.656(96.644), lr: 0.0086
epoch: 11, CrossEntropy loss: 0.1030, accuracy: 96.518
test acc: 90.9200
step: 0, CrossEntropy loss: 0.1009 (0.1009), train accuracy: 98.438(98.438), lr: 0.0084
step: 100, CrossEntropy loss: 0.1088 (0.0947), train accuracy: 95.312(96.867), lr: 0.0084
step: 200, CrossEntropy loss: 0.0529 (0.0923), train accuracy: 98.438(96.988), lr: 0.0084
step: 300, CrossEntropy loss: 0.0747 (0.0945), train accuracy: 98.438(96.875), lr: 0.0084
epoch: 12, CrossEntropy loss: 0.0969, accuracy: 96.744
test acc: 91.3000
step: 0, CrossEntropy loss: 0.0933 (0.0933), train accuracy: 96.875(96.875), lr: 0.0082
step: 100, CrossEntropy loss: 0.0518 (0.0821), train accuracy: 98.438(97.215), lr: 0.0082
step: 200, CrossEntropy loss: 0.1389 (0.0845), train accuracy: 94.531(97.132), lr: 0.0082
step: 300, CrossEntropy loss: 0.1215 (0.0872), train accuracy: 96.875(97.036), lr: 0.0082
epoch: 13, CrossEntropy loss: 0.0926, accuracy: 96.818
test acc: 91.0400
step: 0, CrossEntropy loss: 0.0538 (0.0538), train accuracy: 99.219(99.219), lr: 0.0079
step: 100, CrossEntropy loss: 0.1352 (0.0866), train accuracy: 94.531(97.146), lr: 0.0079
step: 200, CrossEntropy loss: 0.0914 (0.0857), train accuracy: 96.875(97.135), lr: 0.0079
step: 300, CrossEntropy loss: 0.0687 (0.0870), train accuracy: 97.656(97.067), lr: 0.0079
epoch: 14, CrossEntropy loss: 0.0893, accuracy: 96.968
test acc: 90.9300
step: 0, CrossEntropy loss: 0.0869 (0.0869), train accuracy: 96.094(96.094), lr: 0.0077
step: 100, CrossEntropy loss: 0.1196 (0.0767), train accuracy: 96.094(97.478), lr: 0.0077
step: 200, CrossEntropy loss: 0.1431 (0.0806), train accuracy: 95.312(97.287), lr: 0.0077
step: 300, CrossEntropy loss: 0.1317 (0.0825), train accuracy: 96.094(97.215), lr: 0.0077
epoch: 15, CrossEntropy loss: 0.0836, accuracy: 97.216
test acc: 91.5100
step: 0, CrossEntropy loss: 0.1065 (0.1065), train accuracy: 95.312(95.312), lr: 0.0074
step: 100, CrossEntropy loss: 0.0987 (0.0740), train accuracy: 96.875(97.424), lr: 0.0074
step: 200, CrossEntropy loss: 0.0716 (0.0766), train accuracy: 98.438(97.404), lr: 0.0074
step: 300, CrossEntropy loss: 0.0633 (0.0784), train accuracy: 97.656(97.319), lr: 0.0074
epoch: 16, CrossEntropy loss: 0.0801, accuracy: 97.260
test acc: 91.1800
step: 0, CrossEntropy loss: 0.0423 (0.0423), train accuracy: 99.219(99.219), lr: 0.0071
step: 100, CrossEntropy loss: 0.1021 (0.0760), train accuracy: 96.094(97.455), lr: 0.0071
step: 200, CrossEntropy loss: 0.0703 (0.0773), train accuracy: 97.656(97.415), lr: 0.0071
step: 300, CrossEntropy loss: 0.0588 (0.0776), train accuracy: 98.438(97.394), lr: 0.0071
epoch: 17, CrossEntropy loss: 0.0787, accuracy: 97.330
test acc: 91.2500
step: 0, CrossEntropy loss: 0.0603 (0.0603), train accuracy: 98.438(98.438), lr: 0.0068
step: 100, CrossEntropy loss: 0.0429 (0.0666), train accuracy: 97.656(97.811), lr: 0.0068
step: 200, CrossEntropy loss: 0.0647 (0.0668), train accuracy: 98.438(97.823), lr: 0.0068
step: 300, CrossEntropy loss: 0.0412 (0.0674), train accuracy: 98.438(97.796), lr: 0.0068
epoch: 18, CrossEntropy loss: 0.0683, accuracy: 97.780
test acc: 91.7000
step: 0, CrossEntropy loss: 0.0275 (0.0275), train accuracy: 99.219(99.219), lr: 0.0065
step: 100, CrossEntropy loss: 0.0662 (0.0690), train accuracy: 96.875(97.718), lr: 0.0065
step: 200, CrossEntropy loss: 0.0777 (0.0681), train accuracy: 96.875(97.773), lr: 0.0065
step: 300, CrossEntropy loss: 0.1116 (0.0703), train accuracy: 95.312(97.669), lr: 0.0065
epoch: 19, CrossEntropy loss: 0.0712, accuracy: 97.612
test acc: 91.6700
step: 0, CrossEntropy loss: 0.0696 (0.0696), train accuracy: 97.656(97.656), lr: 0.0062
step: 100, CrossEntropy loss: 0.0553 (0.0677), train accuracy: 98.438(97.679), lr: 0.0062
step: 200, CrossEntropy loss: 0.0771 (0.0672), train accuracy: 96.875(97.816), lr: 0.0062
step: 300, CrossEntropy loss: 0.0492 (0.0648), train accuracy: 97.656(97.911), lr: 0.0062
epoch: 20, CrossEntropy loss: 0.0669, accuracy: 97.796
test acc: 91.7700
step: 0, CrossEntropy loss: 0.0765 (0.0765), train accuracy: 96.875(96.875), lr: 0.0059
step: 100, CrossEntropy loss: 0.0490 (0.0572), train accuracy: 98.438(98.198), lr: 0.0059
step: 200, CrossEntropy loss: 0.0820 (0.0612), train accuracy: 96.094(97.952), lr: 0.0059
step: 300, CrossEntropy loss: 0.0953 (0.0620), train accuracy: 96.875(97.934), lr: 0.0059
epoch: 21, CrossEntropy loss: 0.0619, accuracy: 97.938
test acc: 92.0300
step: 0, CrossEntropy loss: 0.0462 (0.0462), train accuracy: 98.438(98.438), lr: 0.0056
step: 100, CrossEntropy loss: 0.0971 (0.0558), train accuracy: 96.094(98.275), lr: 0.0056
step: 200, CrossEntropy loss: 0.1273 (0.0575), train accuracy: 95.312(98.173), lr: 0.0056
step: 300, CrossEntropy loss: 0.0916 (0.0595), train accuracy: 96.094(98.056), lr: 0.0056
epoch: 22, CrossEntropy loss: 0.0605, accuracy: 97.994
test acc: 92.1400
step: 0, CrossEntropy loss: 0.0411 (0.0411), train accuracy: 98.438(98.438), lr: 0.0053
step: 100, CrossEntropy loss: 0.0354 (0.0545), train accuracy: 98.438(98.213), lr: 0.0053
step: 200, CrossEntropy loss: 0.0655 (0.0550), train accuracy: 97.656(98.270), lr: 0.0053
step: 300, CrossEntropy loss: 0.0422 (0.0555), train accuracy: 99.219(98.258), lr: 0.0053
epoch: 23, CrossEntropy loss: 0.0559, accuracy: 98.234
test acc: 92.2200
step: 0, CrossEntropy loss: 0.0482 (0.0482), train accuracy: 98.438(98.438), lr: 0.0050
step: 100, CrossEntropy loss: 0.0484 (0.0487), train accuracy: 99.219(98.484), lr: 0.0050
step: 200, CrossEntropy loss: 0.0570 (0.0486), train accuracy: 99.219(98.515), lr: 0.0050
step: 300, CrossEntropy loss: 0.0427 (0.0489), train accuracy: 99.219(98.469), lr: 0.0050
epoch: 24, CrossEntropy loss: 0.0498, accuracy: 98.418
test acc: 92.3300
step: 0, CrossEntropy loss: 0.0825 (0.0825), train accuracy: 98.438(98.438), lr: 0.0047
step: 100, CrossEntropy loss: 0.0245 (0.0485), train accuracy: 100.000(98.453), lr: 0.0047
step: 200, CrossEntropy loss: 0.1018 (0.0499), train accuracy: 96.875(98.360), lr: 0.0047
step: 300, CrossEntropy loss: 0.0716 (0.0485), train accuracy: 97.656(98.448), lr: 0.0047
epoch: 25, CrossEntropy loss: 0.0490, accuracy: 98.422
test acc: 92.0100
step: 0, CrossEntropy loss: 0.0373 (0.0373), train accuracy: 99.219(99.219), lr: 0.0044
step: 100, CrossEntropy loss: 0.0554 (0.0450), train accuracy: 97.656(98.646), lr: 0.0044
step: 200, CrossEntropy loss: 0.0495 (0.0459), train accuracy: 98.438(98.632), lr: 0.0044
step: 300, CrossEntropy loss: 0.0552 (0.0477), train accuracy: 98.438(98.570), lr: 0.0044
epoch: 26, CrossEntropy loss: 0.0482, accuracy: 98.554
test acc: 92.3100
step: 0, CrossEntropy loss: 0.0566 (0.0566), train accuracy: 98.438(98.438), lr: 0.0041
step: 100, CrossEntropy loss: 0.0323 (0.0407), train accuracy: 98.438(98.847), lr: 0.0041
step: 200, CrossEntropy loss: 0.0352 (0.0410), train accuracy: 98.438(98.795), lr: 0.0041
step: 300, CrossEntropy loss: 0.0356 (0.0422), train accuracy: 99.219(98.752), lr: 0.0041
epoch: 27, CrossEntropy loss: 0.0431, accuracy: 98.722
test acc: 92.3300
step: 0, CrossEntropy loss: 0.0653 (0.0653), train accuracy: 96.875(96.875), lr: 0.0038
step: 100, CrossEntropy loss: 0.0177 (0.0402), train accuracy: 100.000(98.770), lr: 0.0038
step: 200, CrossEntropy loss: 0.0358 (0.0406), train accuracy: 99.219(98.803), lr: 0.0038
step: 300, CrossEntropy loss: 0.0387 (0.0421), train accuracy: 98.438(98.741), lr: 0.0038
epoch: 28, CrossEntropy loss: 0.0425, accuracy: 98.726
test acc: 92.2800
step: 0, CrossEntropy loss: 0.0215 (0.0215), train accuracy: 100.000(100.000), lr: 0.0035
step: 100, CrossEntropy loss: 0.0202 (0.0399), train accuracy: 100.000(98.956), lr: 0.0035
step: 200, CrossEntropy loss: 0.0546 (0.0395), train accuracy: 97.656(98.892), lr: 0.0035
step: 300, CrossEntropy loss: 0.0514 (0.0388), train accuracy: 98.438(98.892), lr: 0.0035
epoch: 29, CrossEntropy loss: 0.0395, accuracy: 98.840
test acc: 92.0200
step: 0, CrossEntropy loss: 0.0448 (0.0448), train accuracy: 99.219(99.219), lr: 0.0032
step: 100, CrossEntropy loss: 0.0547 (0.0369), train accuracy: 97.656(99.080), lr: 0.0032
step: 200, CrossEntropy loss: 0.0168 (0.0365), train accuracy: 100.000(99.071), lr: 0.0032
step: 300, CrossEntropy loss: 0.0355 (0.0364), train accuracy: 97.656(99.076), lr: 0.0032
epoch: 30, CrossEntropy loss: 0.0363, accuracy: 99.034
test acc: 92.2900
step: 0, CrossEntropy loss: 0.0112 (0.0112), train accuracy: 100.000(100.000), lr: 0.0029
step: 100, CrossEntropy loss: 0.0416 (0.0345), train accuracy: 99.219(99.087), lr: 0.0029
step: 200, CrossEntropy loss: 0.0254 (0.0346), train accuracy: 100.000(99.013), lr: 0.0029
step: 300, CrossEntropy loss: 0.0194 (0.0352), train accuracy: 100.000(98.980), lr: 0.0029
epoch: 31, CrossEntropy loss: 0.0355, accuracy: 98.966
test acc: 92.5600
step: 0, CrossEntropy loss: 0.0480 (0.0480), train accuracy: 97.656(97.656), lr: 0.0026
step: 100, CrossEntropy loss: 0.0122 (0.0337), train accuracy: 100.000(99.010), lr: 0.0026
step: 200, CrossEntropy loss: 0.0602 (0.0337), train accuracy: 98.438(99.052), lr: 0.0026
step: 300, CrossEntropy loss: 0.0683 (0.0344), train accuracy: 97.656(99.034), lr: 0.0026
epoch: 32, CrossEntropy loss: 0.0340, accuracy: 99.064
test acc: 92.5400
step: 0, CrossEntropy loss: 0.0352 (0.0352), train accuracy: 97.656(97.656), lr: 0.0023
step: 100, CrossEntropy loss: 0.0590 (0.0307), train accuracy: 99.219(99.211), lr: 0.0023
step: 200, CrossEntropy loss: 0.0252 (0.0303), train accuracy: 100.000(99.211), lr: 0.0023
step: 300, CrossEntropy loss: 0.0335 (0.0319), train accuracy: 100.000(99.143), lr: 0.0023
epoch: 33, CrossEntropy loss: 0.0315, accuracy: 99.160
test acc: 92.5100
step: 0, CrossEntropy loss: 0.0210 (0.0210), train accuracy: 100.000(100.000), lr: 0.0021
step: 100, CrossEntropy loss: 0.0436 (0.0302), train accuracy: 97.656(99.234), lr: 0.0021
step: 200, CrossEntropy loss: 0.0128 (0.0295), train accuracy: 100.000(99.223), lr: 0.0021
step: 300, CrossEntropy loss: 0.0162 (0.0297), train accuracy: 100.000(99.232), lr: 0.0021
epoch: 34, CrossEntropy loss: 0.0293, accuracy: 99.250
test acc: 92.5800
step: 0, CrossEntropy loss: 0.0152 (0.0152), train accuracy: 100.000(100.000), lr: 0.0018
step: 100, CrossEntropy loss: 0.0607 (0.0261), train accuracy: 96.875(99.420), lr: 0.0018
step: 200, CrossEntropy loss: 0.0145 (0.0273), train accuracy: 100.000(99.359), lr: 0.0018
step: 300, CrossEntropy loss: 0.0136 (0.0278), train accuracy: 100.000(99.299), lr: 0.0018
epoch: 35, CrossEntropy loss: 0.0285, accuracy: 99.268
test acc: 92.5600
step: 0, CrossEntropy loss: 0.0125 (0.0125), train accuracy: 100.000(100.000), lr: 0.0016
step: 100, CrossEntropy loss: 0.0286 (0.0259), train accuracy: 99.219(99.474), lr: 0.0016
step: 200, CrossEntropy loss: 0.0222 (0.0262), train accuracy: 100.000(99.405), lr: 0.0016
step: 300, CrossEntropy loss: 0.0604 (0.0273), train accuracy: 98.438(99.325), lr: 0.0016
epoch: 36, CrossEntropy loss: 0.0276, accuracy: 99.312
test acc: 92.7200
step: 0, CrossEntropy loss: 0.0124 (0.0124), train accuracy: 100.000(100.000), lr: 0.0014
step: 100, CrossEntropy loss: 0.0364 (0.0252), train accuracy: 97.656(99.404), lr: 0.0014
step: 200, CrossEntropy loss: 0.0302 (0.0265), train accuracy: 99.219(99.324), lr: 0.0014
step: 300, CrossEntropy loss: 0.0175 (0.0262), train accuracy: 100.000(99.354), lr: 0.0014
epoch: 37, CrossEntropy loss: 0.0259, accuracy: 99.360
test acc: 92.5800
step: 0, CrossEntropy loss: 0.0344 (0.0344), train accuracy: 98.438(98.438), lr: 0.0012
step: 100, CrossEntropy loss: 0.0344 (0.0256), train accuracy: 98.438(99.335), lr: 0.0012
step: 200, CrossEntropy loss: 0.0310 (0.0256), train accuracy: 99.219(99.351), lr: 0.0012
step: 300, CrossEntropy loss: 0.0425 (0.0257), train accuracy: 98.438(99.346), lr: 0.0012
epoch: 38, CrossEntropy loss: 0.0256, accuracy: 99.358
test acc: 92.7100
step: 0, CrossEntropy loss: 0.0223 (0.0223), train accuracy: 99.219(99.219), lr: 0.0010
step: 100, CrossEntropy loss: 0.0216 (0.0240), train accuracy: 99.219(99.366), lr: 0.0010
step: 200, CrossEntropy loss: 0.0157 (0.0237), train accuracy: 100.000(99.421), lr: 0.0010
step: 300, CrossEntropy loss: 0.0143 (0.0241), train accuracy: 100.000(99.398), lr: 0.0010
epoch: 39, CrossEntropy loss: 0.0242, accuracy: 99.390
test acc: 92.5700
step: 0, CrossEntropy loss: 0.0313 (0.0313), train accuracy: 98.438(98.438), lr: 0.0008
step: 100, CrossEntropy loss: 0.0299 (0.0233), train accuracy: 98.438(99.435), lr: 0.0008
step: 200, CrossEntropy loss: 0.0173 (0.0240), train accuracy: 99.219(99.417), lr: 0.0008
step: 300, CrossEntropy loss: 0.0206 (0.0241), train accuracy: 99.219(99.385), lr: 0.0008
epoch: 40, CrossEntropy loss: 0.0241, accuracy: 99.394
test acc: 92.6600
step: 0, CrossEntropy loss: 0.0513 (0.0513), train accuracy: 98.438(98.438), lr: 0.0006
step: 100, CrossEntropy loss: 0.0287 (0.0235), train accuracy: 98.438(99.350), lr: 0.0006
step: 200, CrossEntropy loss: 0.0140 (0.0232), train accuracy: 100.000(99.401), lr: 0.0006
step: 300, CrossEntropy loss: 0.0570 (0.0236), train accuracy: 98.438(99.390), lr: 0.0006
epoch: 41, CrossEntropy loss: 0.0236, accuracy: 99.388
test acc: 92.8300
step: 0, CrossEntropy loss: 0.0253 (0.0253), train accuracy: 99.219(99.219), lr: 0.0005
step: 100, CrossEntropy loss: 0.0306 (0.0218), train accuracy: 98.438(99.474), lr: 0.0005
step: 200, CrossEntropy loss: 0.0395 (0.0227), train accuracy: 99.219(99.475), lr: 0.0005
step: 300, CrossEntropy loss: 0.0167 (0.0228), train accuracy: 100.000(99.478), lr: 0.0005
epoch: 42, CrossEntropy loss: 0.0225, accuracy: 99.484
test acc: 92.8000
step: 0, CrossEntropy loss: 0.0062 (0.0062), train accuracy: 100.000(100.000), lr: 0.0004
step: 100, CrossEntropy loss: 0.0138 (0.0218), train accuracy: 100.000(99.551), lr: 0.0004
step: 200, CrossEntropy loss: 0.0100 (0.0218), train accuracy: 100.000(99.526), lr: 0.0004
step: 300, CrossEntropy loss: 0.0479 (0.0223), train accuracy: 98.438(99.491), lr: 0.0004
epoch: 43, CrossEntropy loss: 0.0228, accuracy: 99.466
test acc: 92.8000
step: 0, CrossEntropy loss: 0.0312 (0.0312), train accuracy: 99.219(99.219), lr: 0.0003
step: 100, CrossEntropy loss: 0.0163 (0.0222), train accuracy: 100.000(99.536), lr: 0.0003
step: 200, CrossEntropy loss: 0.0321 (0.0227), train accuracy: 98.438(99.436), lr: 0.0003
step: 300, CrossEntropy loss: 0.0049 (0.0234), train accuracy: 100.000(99.432), lr: 0.0003
epoch: 44, CrossEntropy loss: 0.0233, accuracy: 99.422
test acc: 92.6900
step: 0, CrossEntropy loss: 0.0268 (0.0268), train accuracy: 98.438(98.438), lr: 0.0002
step: 100, CrossEntropy loss: 0.0361 (0.0237), train accuracy: 99.219(99.443), lr: 0.0002
step: 200, CrossEntropy loss: 0.0161 (0.0232), train accuracy: 99.219(99.471), lr: 0.0002
step: 300, CrossEntropy loss: 0.0272 (0.0229), train accuracy: 99.219(99.465), lr: 0.0002
epoch: 45, CrossEntropy loss: 0.0231, accuracy: 99.440
test acc: 92.8200
step: 0, CrossEntropy loss: 0.0102 (0.0102), train accuracy: 100.000(100.000), lr: 0.0001
step: 100, CrossEntropy loss: 0.0175 (0.0218), train accuracy: 100.000(99.520), lr: 0.0001
step: 200, CrossEntropy loss: 0.0077 (0.0214), train accuracy: 100.000(99.537), lr: 0.0001
step: 300, CrossEntropy loss: 0.0336 (0.0221), train accuracy: 99.219(99.509), lr: 0.0001
epoch: 46, CrossEntropy loss: 0.0220, accuracy: 99.520
test acc: 92.7900
step: 0, CrossEntropy loss: 0.0465 (0.0465), train accuracy: 98.438(98.438), lr: 0.0000
step: 100, CrossEntropy loss: 0.0229 (0.0212), train accuracy: 100.000(99.505), lr: 0.0000
step: 200, CrossEntropy loss: 0.0074 (0.0223), train accuracy: 100.000(99.456), lr: 0.0000
step: 300, CrossEntropy loss: 0.0236 (0.0227), train accuracy: 99.219(99.455), lr: 0.0000
epoch: 47, CrossEntropy loss: 0.0224, accuracy: 99.466
test acc: 92.7200
step: 0, CrossEntropy loss: 0.0267 (0.0267), train accuracy: 98.438(98.438), lr: 0.0000
step: 100, CrossEntropy loss: 0.0149 (0.0214), train accuracy: 99.219(99.482), lr: 0.0000
step: 200, CrossEntropy loss: 0.0324 (0.0210), train accuracy: 99.219(99.502), lr: 0.0000
step: 300, CrossEntropy loss: 0.0175 (0.0216), train accuracy: 100.000(99.486), lr: 0.0000
epoch: 48, CrossEntropy loss: 0.0217, accuracy: 99.480
test acc: 92.7700
cosine structured pruning testing >>>>>>>>>>>>>>>>>>>>>>>>
model sum:  -1111.3250433802605
before pruning, train loss: 0.0033, train acc: 99.9640, test accuracy: 94.2900
start pruning module.conv1, num of channels: 16
tensor([ 7,  1,  9, 15, 12, 13,  3,  8])
time: 0.0044s
start pruning module.layer1.0.conv1, num of channels: 16
tensor([ 7,  6, 15,  2,  3, 12,  1,  9])
time: 0.0010s
start pruning module.layer1.0.conv2, num of channels: 16
tensor([ 1,  3,  7, 10, 13,  0, 15,  2])
time: 0.0010s
start pruning module.layer1.0.conv3, num of channels: 64
tensor([21, 30, 61, 26, 50, 63, 19, 27,  2, 45, 10, 58, 12, 46, 11, 56,  5, 14,
        24, 28,  3, 41, 37, 13, 55, 43, 38, 34, 44, 18, 29,  8])
time: 0.0012s
start pruning module.layer1.0.downsample.0, num of channels: 64
tensor([20, 37, 55, 16, 57, 46, 39,  4, 27, 41, 18, 40, 63, 13, 35, 54, 30, 26,
        47, 24, 34, 29, 36, 22, 56, 31, 38, 14, 52, 53,  8, 15])
time: 0.0011s
start pruning module.layer1.1.conv1, num of channels: 16
tensor([12, 14, 13,  4,  1,  9,  7,  0])
time: 0.0009s
start pruning module.layer1.1.conv2, num of channels: 16
tensor([14,  7,  1, 11,  9,  2,  5,  8])
time: 0.0010s
start pruning module.layer1.1.conv3, num of channels: 64
tensor([44, 60, 48, 38, 54, 36, 12, 15, 55, 59, 50, 32, 13, 29, 23,  7, 22, 18,
        45,  5,  2, 24, 20, 51, 27, 16, 31,  9, 57, 49, 26, 62])
time: 0.0011s
start pruning module.layer1.2.conv1, num of channels: 16
tensor([10,  0,  2, 11,  9, 13,  5,  3])
time: 0.0009s
start pruning module.layer1.2.conv2, num of channels: 16
tensor([ 1, 12,  6, 10,  8, 15,  5,  4])
time: 0.0009s
start pruning module.layer1.2.conv3, num of channels: 64
tensor([43, 52, 56, 63, 26, 31, 60,  8, 49, 38, 51,  5, 28, 15,  9, 13,  7, 53,
        22, 14, 35, 24, 46, 12, 62, 30,  0, 54, 40, 41, 55, 58])
time: 0.0011s
start pruning module.layer1.3.conv1, num of channels: 16
tensor([ 6, 12,  0,  5,  2,  8, 10,  9])
time: 0.0009s
start pruning module.layer1.3.conv2, num of channels: 16
tensor([14, 13,  4, 11, 12,  1,  3,  7])
time: 0.0010s
start pruning module.layer1.3.conv3, num of channels: 64
tensor([18, 54, 22, 59, 15, 45, 55, 57, 12,  0, 23, 62, 56,  4, 16, 49,  9, 14,
        48, 46, 24, 36,  1, 29, 47, 35, 31, 20, 37, 58, 51, 42])
time: 0.0011s
start pruning module.layer1.4.conv1, num of channels: 16
tensor([ 7, 14,  2, 13, 15,  5, 11,  6])
time: 0.0010s
start pruning module.layer1.4.conv2, num of channels: 16
tensor([ 5,  1,  8,  0,  6, 15, 10,  4])
time: 0.0009s
start pruning module.layer1.4.conv3, num of channels: 64
tensor([43, 18, 20,  1,  9, 33, 11, 42, 50, 40, 19, 22, 45, 49, 16, 39, 41, 34,
        56, 31, 47, 37, 54,  3, 27, 14, 53, 13, 57, 63,  5, 52])
time: 0.0011s
start pruning module.layer1.5.conv1, num of channels: 16
tensor([ 7,  4,  5,  8, 13,  0,  9, 12])
time: 0.0009s
start pruning module.layer1.5.conv2, num of channels: 16
tensor([ 4,  7, 12, 13,  3,  8,  2, 15])
time: 0.0010s
start pruning module.layer1.5.conv3, num of channels: 64
tensor([ 7, 57, 34, 22, 11, 52, 61, 13, 63, 41,  4, 43,  1, 50,  0, 55, 62, 51,
        49, 20, 32,  6, 30, 28,  3,  2, 38, 17, 42, 27, 58, 29])
time: 0.0011s
start pruning module.layer1.6.conv1, num of channels: 16
tensor([15,  5,  2, 14,  4,  6,  8,  1])
time: 0.0009s
start pruning module.layer1.6.conv2, num of channels: 16
tensor([11,  9, 15,  5,  2,  8, 12,  4])
time: 0.0010s
start pruning module.layer1.6.conv3, num of channels: 64
tensor([ 6, 55, 13, 37, 50, 54, 15, 56, 32, 39, 38, 29, 63, 23, 45, 51,  9, 52,
        24, 53, 44,  8,  1, 33, 58,  2,  3, 47, 14, 28, 49,  4])
time: 0.0011s
start pruning module.layer1.7.conv1, num of channels: 16
tensor([ 7,  6, 15,  2,  4,  5, 14,  3])
time: 0.0009s
start pruning module.layer1.7.conv2, num of channels: 16
tensor([10,  8,  6,  1,  5, 14,  0, 12])
time: 0.0009s
start pruning module.layer1.7.conv3, num of channels: 64
tensor([30, 16, 46, 48, 47, 10,  4, 13, 57,  7,  8, 26, 24, 60, 44, 35, 19, 59,
         5, 52, 21, 63, 62, 17, 61, 55, 28, 51, 23, 38, 53, 54])
time: 0.0011s
start pruning module.layer1.8.conv1, num of channels: 16
tensor([10,  9,  3, 12,  5, 13,  1,  7])
time: 0.0010s
start pruning module.layer1.8.conv2, num of channels: 16
tensor([10,  0,  3, 13,  9,  1,  6, 15])
time: 0.0009s
start pruning module.layer1.8.conv3, num of channels: 64
tensor([25, 27, 50, 24, 26,  2, 56, 32, 34, 20, 55,  6, 13, 38, 33, 53, 22, 52,
        49, 41, 58, 17,  5, 59, 62,  4, 19, 12, 28, 18,  7, 63])
time: 0.0011s
start pruning module.layer2.0.conv1, num of channels: 32
tensor([ 8, 31,  5, 24, 23, 30, 28, 21, 12, 26,  0,  3,  1,  7, 16, 25])
time: 0.0011s
start pruning module.layer2.0.conv2, num of channels: 32
tensor([ 1, 30, 28, 22, 20,  6,  2, 11, 24,  8, 18, 16, 10, 26, 21,  0])
time: 0.0012s
start pruning module.layer2.0.conv3, num of channels: 128
tensor([  9,  58, 112,  94, 107,  17,  30,  82,  64,  13, 117,  72,  24,  65,
        105, 125,  15,  56,  48,  93,  71,  35,   6, 116,  86,   0,  84, 121,
         16,  25,  34,  53,  69,  27, 124,  39,  21, 106,  31,  46,  62,  89,
        115, 113,  88, 111, 114, 119,  92,  66,  95,  87,  80,  45,  98,  77,
         59,  40,  63,  50,  57,  78,  61, 103])
time: 0.0014s
start pruning module.layer2.0.downsample.0, num of channels: 128
tensor([ 44,  79,  71,  62, 124, 109,  35, 110, 120, 102,   4, 118,  14,   0,
          2,  42,  97,  28, 104,  95, 108,  54,  37,  20, 127, 123,  59,  96,
         38,  81, 101, 116,  67,  83,  61,  10,  33,  60,  29,  30,  86,  65,
         18,  87,  17,  34, 125, 111, 112,  45,  40,  92,  82,  48,  69,  75,
         26,  90,  19,  72,  32, 117,  99,  68])
time: 0.0019s
start pruning module.layer2.1.conv1, num of channels: 32
tensor([ 5,  6,  4, 19, 25, 23, 31, 18, 16,  3, 13,  7, 24, 15,  0,  2])
time: 0.0010s
start pruning module.layer2.1.conv2, num of channels: 32
tensor([10, 20, 23, 11, 22,  7,  6, 19, 17,  8, 27,  3, 21, 13, 29,  4])
time: 0.0011s
start pruning module.layer2.1.conv3, num of channels: 128
tensor([ 67,  19, 123,  89,  88,  43, 114,  99,  22,  47,  50,  15,  91, 102,
        115,  90,  38, 117,  16, 107,  29,  98,  81,  36,  58, 112,  76,  37,
         53, 103,  94,  56, 101, 105,  33,  97,  10,  74,  30, 113,  12,  82,
         48,  70,   7, 122,  85,  51,  13,  63, 106,  93,  83,  65,  11,  41,
        110,  60,  92,   9,  25,  79,  21, 119])
time: 0.0014s
start pruning module.layer2.2.conv1, num of channels: 32
tensor([ 5, 12, 26, 31, 24, 27, 25,  7,  2, 20, 18,  1, 21,  0, 23, 11])
time: 0.0010s
start pruning module.layer2.2.conv2, num of channels: 32
tensor([16,  8,  2, 14,  6, 31, 27, 12,  3,  5,  4,  7, 29, 13,  1, 19])
time: 0.0011s
start pruning module.layer2.2.conv3, num of channels: 128
tensor([ 82,  83,  58,  78,   2,  62,   4,   1,  70,  67,  24,  22,  66,  90,
         17, 122,  98, 101,  68,  47,   6,  36, 107, 108,  14,  79, 111, 114,
         91,  77,  43, 117, 113, 119,  30,  99,   5,  84, 126,  16,  10,  44,
         85, 118, 105,  18,  89, 123,  49,  33,  39,  19,  97,  37,  54,  38,
         94,  50,   8,  59,  71, 120,  40,  57])
time: 0.0014s
start pruning module.layer2.3.conv1, num of channels: 32
tensor([22,  9, 26,  6, 24, 27,  7, 31, 18, 13,  5, 19, 21,  1,  0, 17])
time: 0.0010s
start pruning module.layer2.3.conv2, num of channels: 32
tensor([ 2, 26,  5,  3,  1, 28, 11, 13, 23,  8, 22, 30, 25, 14, 20, 17])
time: 0.0010s
start pruning module.layer2.3.conv3, num of channels: 128
tensor([ 19,  39, 110,  17,  29,  10, 118,  90,   6, 111,  57, 104,  71, 117,
         70,  61,  48,  62,  14, 123,  33, 102,  73, 107,  11,  26,  54,  96,
          2,  49,  46,  31, 112,  79,  80,  82, 116,  13,  30,  93,   3,  67,
         44,  43, 103,  59, 127, 115,  52, 121,  95, 124,  22,  36,  47,  12,
         74, 113,  15,   8, 122, 108,  89,  55])
time: 0.0014s
start pruning module.layer2.4.conv1, num of channels: 32
tensor([ 8, 29, 12, 14,  0,  3, 21, 31, 27,  6, 17, 24, 10, 11,  4, 18])
time: 0.0010s
start pruning module.layer2.4.conv2, num of channels: 32
tensor([16, 12, 11, 27, 13, 23, 15, 14,  7, 31,  9, 30, 22, 29, 21,  2])
time: 0.0010s
start pruning module.layer2.4.conv3, num of channels: 128
tensor([ 50,  67, 112,  21,  63, 106,   9, 101,  65,  45,  79,  98,   6,  86,
         47,  40, 125,  72,  61,   4,  64,  57, 124,  16,  52,  49,  25,  68,
        121,  75, 122,   1, 103,  38,   8,  77,  36,  80, 105,  17, 113,  24,
         31,  99,  29, 115, 119, 123,  85,  73, 120, 116,  51,  76, 107,  43,
        114,  56,  88,  74,   2, 102,  87,   0])
time: 0.0014s
start pruning module.layer2.5.conv1, num of channels: 32
tensor([ 3, 24,  9, 23,  2, 26, 14, 11, 13, 28, 17,  5, 27, 10, 18,  1])
time: 0.0010s
start pruning module.layer2.5.conv2, num of channels: 32
tensor([ 1, 30, 22, 13, 18, 27, 25, 21,  3, 19, 12,  7,  2, 14, 28, 23])
time: 0.0010s
start pruning module.layer2.5.conv3, num of channels: 128
tensor([ 18,   0,  72, 102,  48,   9,  37,  56,  28,  67,  42, 109,  21,  75,
         85,  41,  91,  50, 116, 119, 123,  86,  15,  47,  77,  63,   7,   6,
         40,  84,  16, 113, 125, 124,  32, 105, 114,  34,  89,  43,  73,  76,
         87,  90,  61,  10,  26, 115,  27,  78,  99,  36,  74,  14, 117,  30,
        127, 122, 103,  24,   2,  20,  96,  11])
time: 0.0014s
start pruning module.layer2.6.conv1, num of channels: 32
tensor([28, 16, 12,  1, 21, 11,  7,  9,  3, 10, 13, 29,  0,  6, 17,  2])
time: 0.0010s
start pruning module.layer2.6.conv2, num of channels: 32
tensor([24,  4, 13, 12,  9, 31,  3, 28,  5, 17, 25, 26, 23, 27, 29,  0])
time: 0.0011s
start pruning module.layer2.6.conv3, num of channels: 128
tensor([ 29,   0,  58, 118,  59,  22,  45,  83,   1,  82,  95,  64, 112,  41,
         17,  80,   6,  71, 116,  74,  21,  86, 123,  73,  38,   8, 104,  42,
         13,  14,  31,  44, 108, 107,  96,  47,  61, 119, 100,  55,  20,  15,
         91,  23,  87,  65, 124,  98, 114,  99, 122,  81, 127,   5, 125,  50,
         51,  46,  12,  90,  30,   2, 105, 113])
time: 0.0014s
start pruning module.layer2.7.conv1, num of channels: 32
tensor([14, 19,  6, 12,  9, 27,  7, 31, 24, 15,  1, 16,  4,  5,  2, 26])
time: 0.0010s
start pruning module.layer2.7.conv2, num of channels: 32
tensor([23, 31, 18, 22, 27, 30, 17,  4,  0, 29, 19, 28, 10, 21, 13, 14])
time: 0.0011s
start pruning module.layer2.7.conv3, num of channels: 128
tensor([103, 114,  18,  86,  38,  83,  66,  21,  42, 117,  11,  35, 124,  26,
         61, 127,  22,  79,  48,  69,  20, 111,  15, 118,  10,  57, 126, 105,
         29,  53,   9,  98,  13, 101, 120, 102,   6, 112, 108,  33,  14,  94,
         41,  68,  74,  55,  39, 104,  67,  28,  34,  52, 110,  76,  44,  99,
         12,  90,  91,  43,  85,  95, 107,  75])
time: 0.0014s
start pruning module.layer2.8.conv1, num of channels: 32
tensor([15, 17,  9, 14, 28, 25,  7, 30, 26, 21, 31, 11,  1, 24, 16, 29])
time: 0.0010s
start pruning module.layer2.8.conv2, num of channels: 32
tensor([ 2,  0,  6,  7, 18, 19, 13, 10, 21, 28, 26,  8,  5,  9, 17, 27])
time: 0.0011s
start pruning module.layer2.8.conv3, num of channels: 128
tensor([ 70,  79,  56,   5,  34, 105,  97,  59, 116,   4,  93,  29,  53,  46,
         22,  89, 114,  40,  57,   0, 126,  23,  77,  30,  31,  66,   7,  32,
          6, 125,  60,  28,  16,  74,  67,  14,   8,  84, 107,  45,  55, 103,
         86,  24, 122, 113,  12,  36, 100,  39,  85,  21,  26,  81,  43,  87,
         65,  50, 123,  68,  33, 118,  78, 120])
time: 0.0014s
start pruning module.layer3.0.conv1, num of channels: 64
tensor([39, 41, 16,  5, 23, 26, 31, 56, 46, 50, 61,  1, 54, 10, 30, 49, 15, 36,
        22,  3,  4, 13, 62, 25, 48, 63, 11, 60, 28, 38, 44,  7])
time: 0.0012s
start pruning module.layer3.0.conv2, num of channels: 64
tensor([57, 35, 58, 48, 38, 14, 26, 63, 33, 31, 21, 42, 13, 34,  7, 56, 22, 62,
        41, 45, 32,  9, 10,  1, 44, 19, 50, 17, 16, 54,  0, 43])
time: 0.0016s
start pruning module.layer3.0.conv3, num of channels: 256
tensor([141, 225,  59, 236, 244,  90, 129,   9,  73,  36, 196,  85,  61,  22,
        233,  35, 130, 227, 123,  30, 152,  62, 160, 132,   4, 239, 133,  75,
         14, 111,   8,  89, 237,  29, 223, 184,  50,  97, 247, 149, 231, 162,
         74, 101,  25, 164,  16, 159, 150,  23, 252, 114,  48, 222, 221, 215,
        177, 250,  12, 212,  53, 209,  95,  42,  27, 249, 163, 210, 116, 176,
        134, 109, 199, 220,  86, 167, 218,  99, 219,  71, 214, 168,   7,  63,
         49, 189, 255, 125, 205,  13, 186,   2, 174, 170,  52, 180, 172, 203,
        140,  96, 238,  69,  46, 224,  18, 102,  47, 173,  11, 139,  77, 171,
        253,  81, 185, 251, 242,  20, 142, 117, 230, 194, 254,  78, 126, 136,
        178, 124])
time: 0.0022s
start pruning module.layer3.0.downsample.0, num of channels: 256
tensor([141, 225, 139, 244, 227, 109,  59,  29, 249, 133, 252, 230, 181, 140,
        185,  46,  52,  60,  75, 129, 130,  51, 237, 182, 170, 145,  54,  37,
         64,  38, 102, 114, 137, 214, 105,   4, 176,   1, 248,  90,  42, 165,
        149,  61, 229, 122, 242,  96,  57, 212, 151, 166, 192,  14, 255, 159,
         23, 254, 125, 157, 239, 118, 209, 246,  73,  43,  69, 124, 117,  28,
         39, 219,  68,  44, 191, 206,  63, 134, 245, 123, 217,  48,  22, 132,
         35,  25, 234,  80, 236, 136, 180,  36,  85, 205, 110, 224,  97, 178,
        147, 100, 220, 126, 177,  41,   8,  47, 187, 116, 199, 221,  11, 189,
        112,  32, 210, 223, 150,  53, 115, 215, 168, 148, 161,  50,  76,  40,
        153,  17])
time: 0.0025s
start pruning module.layer3.1.conv1, num of channels: 64
tensor([55, 60,  2, 38, 49, 21, 48, 41, 24, 29, 23, 62, 52, 33,  9,  1,  7, 39,
        58, 26, 43, 61, 47, 13, 63, 20, 27, 53, 35, 15,  4, 28])
time: 0.0012s
start pruning module.layer3.1.conv2, num of channels: 64
tensor([ 2, 51, 26, 27, 19, 44, 50, 60, 21, 33, 34, 11, 22, 41,  3,  0, 35, 38,
         7, 25, 52,  1, 36, 17,  8, 48, 13, 43, 14, 49, 55, 24])
time: 0.0013s
start pruning module.layer3.1.conv3, num of channels: 256
tensor([ 68, 140, 239,  51, 249,  65, 144,  92, 243,  56, 147, 101, 190,  81,
         82, 152, 137, 159, 214, 228,  32,  23, 102, 130, 172,  90,  47, 177,
        189,  26,  35, 205, 198, 252,   7, 188, 230, 185, 180, 221, 182,  57,
        235, 193, 248,   2,  50, 207, 124,  88,  72,  58,  85, 134,  78,  48,
        153,  20, 116, 162, 132, 254, 133, 240, 173, 174, 135, 250,  77, 176,
         62, 157,  10, 105, 233,  40, 161, 218, 168,  84, 115, 155, 106, 131,
         75, 118, 222, 165, 151, 112, 200, 138,  55, 141,  45, 114, 120, 122,
         95, 181,  66, 247,   6, 213, 237,  46,  12,  18, 170,  34, 119,  28,
         25,  22, 108, 187, 238, 126,  29,  97, 178,   5,  14, 160, 125, 226,
        150,  60])
time: 0.0021s
start pruning module.layer3.2.conv1, num of channels: 64
tensor([ 4, 27, 19, 16, 55, 21, 29, 46, 20, 40, 42, 32,  3, 45, 12, 43, 56, 54,
        57, 33, 34, 51,  0, 36, 37, 50, 11, 52,  5,  8, 39, 53])
time: 0.0012s
start pruning module.layer3.2.conv2, num of channels: 64
tensor([51, 37, 45, 13, 50, 27, 34, 36, 59, 11, 28, 44, 29, 55,  5, 32, 31, 61,
        15,  3, 43, 38, 23,  4, 49, 14, 58, 26, 16, 42, 12,  6])
time: 0.0013s
start pruning module.layer3.2.conv3, num of channels: 256
tensor([141, 252,  14,  59, 162,  29, 225,  73, 196,  76, 116, 106, 228,  54,
        197,  69, 215, 124,   1, 129,  75, 193,  11, 181, 135, 132, 153, 111,
        186, 232, 150, 148,  84, 254,  67, 159,  25,  68, 114,  50,  80, 219,
         46,   6, 154, 209,  53, 230,  90, 220,  56, 242, 117, 211, 123,  98,
        239,  37,  28, 112, 210, 134,  18, 133, 173, 206, 207,  82,  24, 217,
        127, 243, 191,  89,   9, 244, 144, 238,  21,  26,  23, 168, 237,   8,
        213, 126, 205,  92, 233,  66, 158, 231, 119,  42, 221, 249,  86, 108,
        169,  32, 178, 151,  35, 157,  62, 145,  20,  74, 190,  30, 177, 170,
        125, 183, 115, 176, 246,  58,  12,  77, 247, 192, 227,  48, 167, 166,
        164, 161])
time: 0.0021s
start pruning module.layer3.3.conv1, num of channels: 64
tensor([51, 47, 23, 11, 38, 54, 33, 50, 60, 25, 14, 28, 19,  9, 36, 43, 56, 37,
        58, 20, 59,  1, 40, 34, 49, 27, 26,  6, 41,  4, 48, 45])
time: 0.0012s
start pruning module.layer3.3.conv2, num of channels: 64
tensor([30, 29, 54, 58,  5, 41, 55,  4, 39, 26, 56, 32, 63, 11, 14, 60, 22, 21,
         3,  6, 10, 23, 46, 52, 17,  9, 28, 35, 59, 38, 13, 25])
time: 0.0014s
start pruning module.layer3.3.conv3, num of channels: 256
tensor([ 76, 244,  19, 141, 162, 132,  16, 114, 167,  62, 168, 123, 199,  12,
        106, 251,  59, 116,   4,  22,  90, 238,   8, 134, 202, 174, 204, 253,
        236, 184,   9, 205, 165, 133, 160,  10,  78,  35,  49, 142,  85,  25,
        222,   6, 188, 200,  99, 228,  48, 252,  37, 138, 119, 117,  34, 189,
        150,  13,   2, 190,  24, 198, 249, 159, 230, 245, 153, 176,  58, 130,
        109, 235, 131, 187,  94, 145, 155, 149,   3, 234,  23, 233, 115,  73,
        224, 215,  96,  86, 128,  33, 220,  92, 255, 144,  55, 161,  54, 214,
         71,   5,  65,   0, 242, 219, 129, 105, 206, 126, 147,  79, 157, 177,
         75, 140,  20, 246, 122,  57,  56,  40, 112,  68, 178,  51, 172,  50,
         15, 221])
time: 0.0021s
start pruning module.layer3.4.conv1, num of channels: 64
tensor([54, 52,  3, 39, 42, 14,  5, 22, 23, 16, 35, 50,  4, 48, 62, 33, 44, 59,
        46, 38, 58, 34, 56, 26, 30, 53, 19, 13, 60, 41, 37,  7])
time: 0.0012s
start pruning module.layer3.4.conv2, num of channels: 64
tensor([54, 45, 53,  2, 37, 46, 60, 30, 36, 21, 49, 20, 27, 32, 24, 13,  0, 19,
        15, 62, 18,  5,  1,  6, 56, 10, 12,  7, 17, 47, 11, 40])
time: 0.0014s
start pruning module.layer3.4.conv3, num of channels: 256
tensor([244,  64, 142,  24, 255,  33, 252, 254, 209,  30,  35, 147,  65, 201,
        141, 165,  73, 174,   3,   5, 115, 162,  50,  92, 184, 152,  81, 150,
        210, 129, 222, 159, 106, 130, 200,  90, 123,  55,  14, 225,  97, 119,
        191,  59,  48, 217, 151,  12,  16, 134, 238, 226,  13, 197, 228,  68,
        249, 114, 105, 144,  99,  28, 145,   6, 153, 239,  54,  95,  67,   8,
        189, 172, 169, 234, 211, 139, 233,   9, 215,  41, 196,  76, 160, 192,
        158,   7,  51,  80,  75, 140,  22, 164, 116, 168, 109, 232, 243, 223,
        148,  19, 133, 178, 176, 111, 231,  79,  49, 167,  88,  71,  34, 187,
        157, 125, 146,  86,  63,  56, 180,  27,  26,  70, 161, 149, 186, 250,
         74,  43])
time: 0.0021s
start pruning module.layer3.5.conv1, num of channels: 64
tensor([56, 10,  5, 23, 58, 38, 33, 11, 13, 21,  8, 47,  9, 43,  7, 28, 55, 61,
        14, 17, 35, 31, 59, 22, 19, 30, 60, 62,  1, 34, 42, 15])
time: 0.0012s
start pruning module.layer3.5.conv2, num of channels: 64
tensor([23, 29, 63, 37, 55, 46, 42, 61,  3, 43,  2, 31, 10, 59,  5, 35, 48, 28,
        45, 52, 44, 21, 57, 60, 27, 58, 33, 13, 54, 18, 41, 16])
time: 0.0013s
start pruning module.layer3.5.conv3, num of channels: 256
tensor([244,  28,  73, 255, 123,  20, 153, 175, 102, 176,   8,  16, 131, 220,
         38, 145, 150, 138, 142, 162, 141, 167, 251, 140, 132,  22, 202, 127,
         94, 210, 160, 101,  81, 129,  14,   9, 201,  13,   3,  57,  44, 166,
        233, 229,  93, 146, 186, 230,  72, 189,  80, 225, 135, 147,  47,  82,
         12, 156, 121,  50, 177, 164, 184, 171, 173, 149, 118, 252, 242,  89,
        243,  79, 222, 211, 182,  55, 112,  42,  43, 143, 128, 234,  23, 133,
        104, 206,  77, 161,  39,  58,  61,  95, 116, 237,  91, 217, 221,  75,
         15,  49, 110,  88, 159, 115,  26, 109, 172, 208, 196, 254,  27,  59,
        193, 174,   6, 216, 122,  56, 192, 235, 215, 253, 130,  53, 232, 185,
         33, 148])
time: 0.0021s
start pruning module.layer3.6.conv1, num of channels: 64
tensor([20, 42, 46, 35, 24, 14, 27, 57, 26, 11, 39,  6,  5,  4,  1, 17, 29, 61,
        22, 58, 48, 60,  2, 28,  8, 25,  7, 59, 47, 18, 63, 56])
time: 0.0013s
start pruning module.layer3.6.conv2, num of channels: 64
tensor([32, 46, 41, 34, 50, 24, 36, 38, 42, 62, 17, 54, 59, 10, 14, 28, 57, 20,
        43, 40, 31, 39,  0,  1, 33, 61, 60, 27, 22,  3, 48, 51])
time: 0.0013s
start pruning module.layer3.6.conv3, num of channels: 256
tensor([244,  62,  73, 132, 156, 233, 102,  23, 242,  78,  82,   6,   3,  22,
        153, 134,  50, 141, 160, 144, 230, 190,  99,  25, 116, 109, 157, 252,
        167,  92,  30, 249, 140, 148, 182,  54, 176, 237, 202, 246,  12,  45,
        253, 125, 238, 154,  88,  38,  39, 208, 122, 133,  36, 255,  93, 142,
        251, 105, 236, 193, 124,   9, 188, 152, 170,  43,  98, 150,  33, 192,
        158,  29, 191,  13, 221, 163,   8, 187, 111,  57, 240, 161,  90,  70,
         16, 172,  77,  65, 250, 215,  47, 210, 168,  66, 177, 214, 179, 231,
          4, 180, 216,  56,  14, 145, 120, 239, 126, 229, 164,  75, 131, 119,
         15,  49,  80, 143,  37,  83, 112, 155, 204,  58, 115,  63,  91,  69,
        146, 209])
time: 0.0021s
start pruning module.layer3.7.conv1, num of channels: 64
tensor([ 3, 10, 51, 45, 56, 19, 36, 58, 50, 49, 26, 17, 40, 48, 33, 27, 55, 14,
         5, 47, 18,  1, 23, 37,  4,  9, 30, 34, 15, 25, 61, 41])
time: 0.0012s
start pruning module.layer3.7.conv2, num of channels: 64
tensor([13, 26, 59, 52, 34, 21, 45, 29,  2, 32, 18, 42,  4, 36, 41, 37, 50, 58,
        20, 53, 40, 61,  7, 57,  8, 35, 14, 56,  6,  0, 63, 31])
time: 0.0014s
start pruning module.layer3.7.conv3, num of channels: 256
tensor([244,  14, 156,  75, 225,  73,  95,  22, 134,  81, 233, 176, 167, 101,
          3, 116, 160,  59, 148,  72,  29, 132, 222,  90, 165, 106, 229, 130,
        224, 198,  37, 158, 182, 141, 236,  54, 245, 145, 247, 150, 174, 206,
         23, 196, 129, 193,   4,  17,  63,  50, 140, 234,  25, 251, 100, 209,
         38,  99,  10, 111, 161, 133, 235, 157,  30, 138,  43,  94, 123, 238,
        142, 117, 255,  16, 240, 124, 204,  92, 231, 162,  71,  86, 253, 210,
          8, 172, 215, 249,   5, 113,  88, 109,  97,  26, 147,  52, 170,  44,
        127, 254, 202,  98, 122, 180, 179, 115,   7, 252, 166, 153,  49, 102,
         69, 221,  42,  51,   9,  47,  87,  48,  62, 186, 217, 152, 119, 205,
        230,  40])
time: 0.0021s
start pruning module.layer3.8.conv1, num of channels: 64
tensor([53, 54, 38, 10, 17, 48, 35,  5, 37, 23, 19,  0, 43, 28, 45, 21, 20,  9,
        31, 18, 11, 33, 56, 58, 50, 42,  3, 59,  4,  2, 51,  7])
time: 0.0012s
start pruning module.layer3.8.conv2, num of channels: 64
tensor([33, 20, 19,  1, 59, 42, 37, 23,  5, 29, 40, 58, 54, 32,  6, 51, 13, 43,
        27, 18, 63, 21, 41, 17, 22, 56, 15, 45, 52,  7, 24, 57])
time: 0.0013s
start pruning module.layer3.8.conv3, num of channels: 256
tensor([170,  43,  33, 119,  40,  83, 214, 182,  19, 173, 233, 122, 178, 155,
         94, 135, 243, 240, 103, 230,  13,  41, 199, 198, 231, 132, 221, 206,
         85,  30, 108, 181, 133, 115, 246, 154, 174,  93,  66, 162, 239,  96,
        211,   6, 228,  86, 186, 175, 142, 179,  80,   0, 123, 237,  52, 111,
         74, 244, 250, 120, 200, 196, 100,  58,  20,   1, 218, 202, 180, 253,
        255,  72,  78,   5, 187,  22,   2, 251,  60, 232,  68, 193,  53,  15,
          7, 226,  44,  45, 168,  71, 219,  77, 148, 189, 134, 236, 222,  14,
         79,   3, 191, 185, 106, 131, 104,  92, 167, 177, 169, 102, 146, 235,
        107,  28,  21, 159,  65, 140, 114,  87, 229, 183, 234, 128,  98, 152,
         39,  67])
time: 0.0021s
Global sparsity: 49.47%
epoch: 0, train loss: 11.4952, train acc: 10.0000, test accuracy: 10.0000
step: 0, CrossEntropy loss: 4.0805 (4.0805), train accuracy: 10.938(10.938), lr: 0.0100
step: 100, CrossEntropy loss: 1.3501 (1.8305), train accuracy: 51.562(35.373), lr: 0.0100
step: 200, CrossEntropy loss: 0.9179 (1.4669), train accuracy: 69.531(48.216), lr: 0.0100
step: 300, CrossEntropy loss: 0.7281 (1.2559), train accuracy: 71.875(55.692), lr: 0.0100
epoch: 0, CrossEntropy loss: 1.1314, accuracy: 60.160
test acc: 75.9200
step: 0, CrossEntropy loss: 0.6271 (0.6271), train accuracy: 78.906(78.906), lr: 0.0100
step: 100, CrossEntropy loss: 0.5891 (0.5932), train accuracy: 75.000(79.138), lr: 0.0100
step: 200, CrossEntropy loss: 0.6283 (0.5760), train accuracy: 78.125(79.816), lr: 0.0100
step: 300, CrossEntropy loss: 0.5544 (0.5530), train accuracy: 80.469(80.762), lr: 0.0100
epoch: 1, CrossEntropy loss: 0.5347, accuracy: 81.392
test acc: 83.1400
step: 0, CrossEntropy loss: 0.3015 (0.3015), train accuracy: 90.625(90.625), lr: 0.0100
step: 100, CrossEntropy loss: 0.4837 (0.4196), train accuracy: 85.156(85.458), lr: 0.0100
step: 200, CrossEntropy loss: 0.3890 (0.4103), train accuracy: 86.719(85.805), lr: 0.0100
step: 300, CrossEntropy loss: 0.5614 (0.4106), train accuracy: 81.250(85.862), lr: 0.0100
epoch: 2, CrossEntropy loss: 0.4043, accuracy: 86.090
test acc: 84.6200
step: 0, CrossEntropy loss: 0.2798 (0.2798), train accuracy: 90.625(90.625), lr: 0.0099
step: 100, CrossEntropy loss: 0.3825 (0.3550), train accuracy: 88.281(87.546), lr: 0.0099
step: 200, CrossEntropy loss: 0.2948 (0.3522), train accuracy: 89.844(87.663), lr: 0.0099
step: 300, CrossEntropy loss: 0.4936 (0.3499), train accuracy: 82.812(87.754), lr: 0.0099
epoch: 3, CrossEntropy loss: 0.3466, accuracy: 87.904
test acc: 85.8700
step: 0, CrossEntropy loss: 0.3508 (0.3508), train accuracy: 90.625(90.625), lr: 0.0098
step: 100, CrossEntropy loss: 0.2512 (0.3013), train accuracy: 89.844(89.511), lr: 0.0098
step: 200, CrossEntropy loss: 0.3170 (0.3066), train accuracy: 90.625(89.397), lr: 0.0098
step: 300, CrossEntropy loss: 0.2508 (0.3049), train accuracy: 89.844(89.501), lr: 0.0098
epoch: 4, CrossEntropy loss: 0.3059, accuracy: 89.438
test acc: 84.1300
step: 0, CrossEntropy loss: 0.1897 (0.1897), train accuracy: 93.750(93.750), lr: 0.0098
step: 100, CrossEntropy loss: 0.3102 (0.2846), train accuracy: 89.062(90.091), lr: 0.0098
step: 200, CrossEntropy loss: 0.1892 (0.2802), train accuracy: 92.969(90.376), lr: 0.0098
step: 300, CrossEntropy loss: 0.2835 (0.2858), train accuracy: 92.188(90.160), lr: 0.0098
epoch: 5, CrossEntropy loss: 0.2830, accuracy: 90.186
test acc: 87.3400
step: 0, CrossEntropy loss: 0.2112 (0.2112), train accuracy: 96.875(96.875), lr: 0.0096
step: 100, CrossEntropy loss: 0.2402 (0.2614), train accuracy: 92.969(91.035), lr: 0.0096
step: 200, CrossEntropy loss: 0.2464 (0.2589), train accuracy: 93.750(91.119), lr: 0.0096
step: 300, CrossEntropy loss: 0.1802 (0.2597), train accuracy: 93.750(91.061), lr: 0.0096
epoch: 6, CrossEntropy loss: 0.2602, accuracy: 90.994
test acc: 88.1800
step: 0, CrossEntropy loss: 0.1646 (0.1646), train accuracy: 95.312(95.312), lr: 0.0095
step: 100, CrossEntropy loss: 0.1801 (0.2387), train accuracy: 95.312(91.723), lr: 0.0095
step: 200, CrossEntropy loss: 0.1981 (0.2415), train accuracy: 92.188(91.527), lr: 0.0095
step: 300, CrossEntropy loss: 0.2033 (0.2417), train accuracy: 92.188(91.482), lr: 0.0095
epoch: 7, CrossEntropy loss: 0.2424, accuracy: 91.472
test acc: 88.3200
step: 0, CrossEntropy loss: 0.2070 (0.2070), train accuracy: 94.531(94.531), lr: 0.0094
step: 100, CrossEntropy loss: 0.3103 (0.2194), train accuracy: 89.844(92.567), lr: 0.0094
step: 200, CrossEntropy loss: 0.1971 (0.2236), train accuracy: 95.312(92.327), lr: 0.0094
step: 300, CrossEntropy loss: 0.2490 (0.2270), train accuracy: 90.625(92.169), lr: 0.0094
epoch: 8, CrossEntropy loss: 0.2273, accuracy: 92.154
test acc: 88.8500
step: 0, CrossEntropy loss: 0.1898 (0.1898), train accuracy: 95.312(95.312), lr: 0.0092
step: 100, CrossEntropy loss: 0.2410 (0.2101), train accuracy: 92.969(92.814), lr: 0.0092
step: 200, CrossEntropy loss: 0.1747 (0.2123), train accuracy: 94.531(92.646), lr: 0.0092
step: 300, CrossEntropy loss: 0.1970 (0.2159), train accuracy: 93.750(92.481), lr: 0.0092
epoch: 9, CrossEntropy loss: 0.2184, accuracy: 92.342
test acc: 88.0800
step: 0, CrossEntropy loss: 0.1846 (0.1846), train accuracy: 93.750(93.750), lr: 0.0090
step: 100, CrossEntropy loss: 0.2085 (0.2017), train accuracy: 93.750(93.154), lr: 0.0090
step: 200, CrossEntropy loss: 0.1611 (0.2054), train accuracy: 95.312(93.008), lr: 0.0090
step: 300, CrossEntropy loss: 0.3441 (0.2090), train accuracy: 87.500(92.893), lr: 0.0090
epoch: 10, CrossEntropy loss: 0.2090, accuracy: 92.816
test acc: 88.0700
step: 0, CrossEntropy loss: 0.2672 (0.2672), train accuracy: 89.062(89.062), lr: 0.0089
step: 100, CrossEntropy loss: 0.1508 (0.1953), train accuracy: 95.312(93.255), lr: 0.0089
step: 200, CrossEntropy loss: 0.2553 (0.1998), train accuracy: 92.188(92.992), lr: 0.0089
step: 300, CrossEntropy loss: 0.2055 (0.2013), train accuracy: 91.406(92.987), lr: 0.0089
epoch: 11, CrossEntropy loss: 0.2012, accuracy: 93.014
test acc: 89.0900
step: 0, CrossEntropy loss: 0.1753 (0.1753), train accuracy: 95.312(95.312), lr: 0.0086
step: 100, CrossEntropy loss: 0.2801 (0.1762), train accuracy: 89.844(93.982), lr: 0.0086
step: 200, CrossEntropy loss: 0.1377 (0.1842), train accuracy: 95.312(93.699), lr: 0.0086
step: 300, CrossEntropy loss: 0.2032 (0.1863), train accuracy: 92.188(93.631), lr: 0.0086
epoch: 12, CrossEntropy loss: 0.1893, accuracy: 93.498
test acc: 89.3700
step: 0, CrossEntropy loss: 0.1061 (0.1061), train accuracy: 97.656(97.656), lr: 0.0084
step: 100, CrossEntropy loss: 0.1723 (0.1825), train accuracy: 93.750(93.673), lr: 0.0084
step: 200, CrossEntropy loss: 0.1951 (0.1812), train accuracy: 92.969(93.777), lr: 0.0084
step: 300, CrossEntropy loss: 0.1747 (0.1797), train accuracy: 92.969(93.807), lr: 0.0084
epoch: 13, CrossEntropy loss: 0.1798, accuracy: 93.794
test acc: 89.2300
step: 0, CrossEntropy loss: 0.1274 (0.1274), train accuracy: 96.094(96.094), lr: 0.0082
step: 100, CrossEntropy loss: 0.2011 (0.1653), train accuracy: 94.531(94.307), lr: 0.0082
step: 200, CrossEntropy loss: 0.1334 (0.1676), train accuracy: 96.094(94.259), lr: 0.0082
step: 300, CrossEntropy loss: 0.1420 (0.1702), train accuracy: 95.312(94.157), lr: 0.0082
epoch: 14, CrossEntropy loss: 0.1716, accuracy: 94.130
test acc: 90.2800
step: 0, CrossEntropy loss: 0.1659 (0.1659), train accuracy: 95.312(95.312), lr: 0.0079
step: 100, CrossEntropy loss: 0.0948 (0.1537), train accuracy: 96.094(94.717), lr: 0.0079
step: 200, CrossEntropy loss: 0.1936 (0.1632), train accuracy: 89.062(94.298), lr: 0.0079
step: 300, CrossEntropy loss: 0.1217 (0.1624), train accuracy: 96.875(94.342), lr: 0.0079
epoch: 15, CrossEntropy loss: 0.1658, accuracy: 94.196
test acc: 89.5500
step: 0, CrossEntropy loss: 0.1579 (0.1579), train accuracy: 95.312(95.312), lr: 0.0077
step: 100, CrossEntropy loss: 0.1342 (0.1585), train accuracy: 96.875(94.516), lr: 0.0077
step: 200, CrossEntropy loss: 0.2033 (0.1584), train accuracy: 92.969(94.496), lr: 0.0077
step: 300, CrossEntropy loss: 0.1716 (0.1613), train accuracy: 92.188(94.318), lr: 0.0077
epoch: 16, CrossEntropy loss: 0.1642, accuracy: 94.206
test acc: 89.6300
step: 0, CrossEntropy loss: 0.2181 (0.2181), train accuracy: 93.750(93.750), lr: 0.0074
step: 100, CrossEntropy loss: 0.1464 (0.1502), train accuracy: 93.750(94.918), lr: 0.0074
step: 200, CrossEntropy loss: 0.2157 (0.1504), train accuracy: 90.625(94.885), lr: 0.0074
step: 300, CrossEntropy loss: 0.1456 (0.1504), train accuracy: 96.094(94.882), lr: 0.0074
epoch: 17, CrossEntropy loss: 0.1529, accuracy: 94.776
test acc: 89.0200
step: 0, CrossEntropy loss: 0.1161 (0.1161), train accuracy: 96.094(96.094), lr: 0.0071
step: 100, CrossEntropy loss: 0.1316 (0.1397), train accuracy: 96.875(95.258), lr: 0.0071
step: 200, CrossEntropy loss: 0.1531 (0.1448), train accuracy: 95.312(95.103), lr: 0.0071
step: 300, CrossEntropy loss: 0.0794 (0.1459), train accuracy: 97.656(95.045), lr: 0.0071
epoch: 18, CrossEntropy loss: 0.1477, accuracy: 94.944
test acc: 90.0100
step: 0, CrossEntropy loss: 0.0764 (0.0764), train accuracy: 98.438(98.438), lr: 0.0068
step: 100, CrossEntropy loss: 0.1095 (0.1390), train accuracy: 96.875(95.150), lr: 0.0068
step: 200, CrossEntropy loss: 0.1744 (0.1374), train accuracy: 92.188(95.278), lr: 0.0068
step: 300, CrossEntropy loss: 0.1265 (0.1375), train accuracy: 94.531(95.300), lr: 0.0068
epoch: 19, CrossEntropy loss: 0.1407, accuracy: 95.210
test acc: 90.1300
step: 0, CrossEntropy loss: 0.1930 (0.1930), train accuracy: 92.188(92.188), lr: 0.0065
step: 100, CrossEntropy loss: 0.1247 (0.1357), train accuracy: 93.750(95.390), lr: 0.0065
step: 200, CrossEntropy loss: 0.1388 (0.1351), train accuracy: 93.750(95.421), lr: 0.0065
step: 300, CrossEntropy loss: 0.0977 (0.1356), train accuracy: 98.438(95.359), lr: 0.0065
epoch: 20, CrossEntropy loss: 0.1351, accuracy: 95.344
test acc: 90.5000
step: 0, CrossEntropy loss: 0.1488 (0.1488), train accuracy: 94.531(94.531), lr: 0.0062
step: 100, CrossEntropy loss: 0.0769 (0.1274), train accuracy: 97.656(95.537), lr: 0.0062
step: 200, CrossEntropy loss: 0.1342 (0.1250), train accuracy: 96.094(95.682), lr: 0.0062
step: 300, CrossEntropy loss: 0.1496 (0.1252), train accuracy: 94.531(95.673), lr: 0.0062
epoch: 21, CrossEntropy loss: 0.1274, accuracy: 95.584
test acc: 90.8500
step: 0, CrossEntropy loss: 0.1188 (0.1188), train accuracy: 93.750(93.750), lr: 0.0059
step: 100, CrossEntropy loss: 0.1379 (0.1166), train accuracy: 95.312(96.117), lr: 0.0059
step: 200, CrossEntropy loss: 0.1382 (0.1164), train accuracy: 93.750(95.993), lr: 0.0059
step: 300, CrossEntropy loss: 0.1312 (0.1177), train accuracy: 94.531(95.933), lr: 0.0059
epoch: 22, CrossEntropy loss: 0.1203, accuracy: 95.882
test acc: 90.7300
step: 0, CrossEntropy loss: 0.0694 (0.0694), train accuracy: 99.219(99.219), lr: 0.0056
step: 100, CrossEntropy loss: 0.0862 (0.1209), train accuracy: 96.094(95.692), lr: 0.0056
step: 200, CrossEntropy loss: 0.0777 (0.1196), train accuracy: 98.438(95.833), lr: 0.0056
step: 300, CrossEntropy loss: 0.0990 (0.1189), train accuracy: 97.656(95.842), lr: 0.0056
epoch: 23, CrossEntropy loss: 0.1188, accuracy: 95.848
test acc: 90.7600
step: 0, CrossEntropy loss: 0.1191 (0.1191), train accuracy: 95.312(95.312), lr: 0.0053
step: 100, CrossEntropy loss: 0.1079 (0.1044), train accuracy: 96.094(96.589), lr: 0.0053
step: 200, CrossEntropy loss: 0.0902 (0.1095), train accuracy: 97.656(96.323), lr: 0.0053
step: 300, CrossEntropy loss: 0.1567 (0.1122), train accuracy: 96.875(96.166), lr: 0.0053
epoch: 24, CrossEntropy loss: 0.1119, accuracy: 96.166
test acc: 91.1000
step: 0, CrossEntropy loss: 0.1235 (0.1235), train accuracy: 95.312(95.312), lr: 0.0050
step: 100, CrossEntropy loss: 0.1233 (0.1083), train accuracy: 96.094(96.380), lr: 0.0050
step: 200, CrossEntropy loss: 0.0724 (0.1053), train accuracy: 97.656(96.490), lr: 0.0050
step: 300, CrossEntropy loss: 0.0782 (0.1036), train accuracy: 96.875(96.493), lr: 0.0050
epoch: 25, CrossEntropy loss: 0.1052, accuracy: 96.416
test acc: 90.4700
step: 0, CrossEntropy loss: 0.1007 (0.1007), train accuracy: 96.094(96.094), lr: 0.0047
step: 100, CrossEntropy loss: 0.1104 (0.0996), train accuracy: 96.875(96.720), lr: 0.0047
step: 200, CrossEntropy loss: 0.1010 (0.0963), train accuracy: 95.312(96.782), lr: 0.0047
step: 300, CrossEntropy loss: 0.1050 (0.0987), train accuracy: 97.656(96.675), lr: 0.0047
epoch: 26, CrossEntropy loss: 0.1005, accuracy: 96.584
test acc: 91.2400
step: 0, CrossEntropy loss: 0.0716 (0.0716), train accuracy: 98.438(98.438), lr: 0.0044
step: 100, CrossEntropy loss: 0.0790 (0.0990), train accuracy: 97.656(96.798), lr: 0.0044
step: 200, CrossEntropy loss: 0.0811 (0.0963), train accuracy: 96.094(96.797), lr: 0.0044
step: 300, CrossEntropy loss: 0.1163 (0.0968), train accuracy: 96.094(96.784), lr: 0.0044
epoch: 27, CrossEntropy loss: 0.0978, accuracy: 96.692
test acc: 91.3300
step: 0, CrossEntropy loss: 0.1039 (0.1039), train accuracy: 97.656(97.656), lr: 0.0041
step: 100, CrossEntropy loss: 0.1094 (0.0906), train accuracy: 95.312(96.999), lr: 0.0041
step: 200, CrossEntropy loss: 0.0662 (0.0920), train accuracy: 96.094(96.941), lr: 0.0041
step: 300, CrossEntropy loss: 0.1039 (0.0924), train accuracy: 95.312(96.930), lr: 0.0041
epoch: 28, CrossEntropy loss: 0.0932, accuracy: 96.906
test acc: 91.1800
step: 0, CrossEntropy loss: 0.0903 (0.0903), train accuracy: 98.438(98.438), lr: 0.0038
step: 100, CrossEntropy loss: 0.0767 (0.0805), train accuracy: 97.656(97.324), lr: 0.0038
step: 200, CrossEntropy loss: 0.1313 (0.0833), train accuracy: 96.094(97.271), lr: 0.0038
step: 300, CrossEntropy loss: 0.0743 (0.0849), train accuracy: 96.094(97.194), lr: 0.0038
epoch: 29, CrossEntropy loss: 0.0846, accuracy: 97.198
test acc: 91.6400
step: 0, CrossEntropy loss: 0.0844 (0.0844), train accuracy: 96.875(96.875), lr: 0.0035
step: 100, CrossEntropy loss: 0.0675 (0.0802), train accuracy: 97.656(97.331), lr: 0.0035
step: 200, CrossEntropy loss: 0.0526 (0.0790), train accuracy: 98.438(97.404), lr: 0.0035
step: 300, CrossEntropy loss: 0.1032 (0.0802), train accuracy: 94.531(97.350), lr: 0.0035
epoch: 30, CrossEntropy loss: 0.0814, accuracy: 97.316
test acc: 91.2800
step: 0, CrossEntropy loss: 0.1067 (0.1067), train accuracy: 94.531(94.531), lr: 0.0032
step: 100, CrossEntropy loss: 0.0585 (0.0735), train accuracy: 98.438(97.710), lr: 0.0032
step: 200, CrossEntropy loss: 0.0609 (0.0765), train accuracy: 97.656(97.520), lr: 0.0032
step: 300, CrossEntropy loss: 0.0967 (0.0778), train accuracy: 96.094(97.469), lr: 0.0032
epoch: 31, CrossEntropy loss: 0.0771, accuracy: 97.498
test acc: 91.5900
step: 0, CrossEntropy loss: 0.0736 (0.0736), train accuracy: 97.656(97.656), lr: 0.0029
step: 100, CrossEntropy loss: 0.0794 (0.0707), train accuracy: 96.875(97.757), lr: 0.0029
step: 200, CrossEntropy loss: 0.1043 (0.0697), train accuracy: 96.875(97.816), lr: 0.0029
step: 300, CrossEntropy loss: 0.0765 (0.0703), train accuracy: 98.438(97.778), lr: 0.0029
epoch: 32, CrossEntropy loss: 0.0703, accuracy: 97.776
test acc: 91.6200
step: 0, CrossEntropy loss: 0.0595 (0.0595), train accuracy: 98.438(98.438), lr: 0.0026
step: 100, CrossEntropy loss: 0.0629 (0.0690), train accuracy: 99.219(97.850), lr: 0.0026
step: 200, CrossEntropy loss: 0.0597 (0.0661), train accuracy: 97.656(97.991), lr: 0.0026
step: 300, CrossEntropy loss: 0.0255 (0.0679), train accuracy: 99.219(97.942), lr: 0.0026
epoch: 33, CrossEntropy loss: 0.0691, accuracy: 97.880
test acc: 91.6900
step: 0, CrossEntropy loss: 0.1504 (0.1504), train accuracy: 96.094(96.094), lr: 0.0023
step: 100, CrossEntropy loss: 0.0664 (0.0628), train accuracy: 98.438(98.058), lr: 0.0023
step: 200, CrossEntropy loss: 0.1074 (0.0642), train accuracy: 93.750(97.874), lr: 0.0023
step: 300, CrossEntropy loss: 0.0451 (0.0650), train accuracy: 98.438(97.874), lr: 0.0023
epoch: 34, CrossEntropy loss: 0.0655, accuracy: 97.856
test acc: 91.5800
step: 0, CrossEntropy loss: 0.0527 (0.0527), train accuracy: 98.438(98.438), lr: 0.0021
step: 100, CrossEntropy loss: 0.0808 (0.0603), train accuracy: 98.438(98.190), lr: 0.0021
step: 200, CrossEntropy loss: 0.0675 (0.0596), train accuracy: 97.656(98.204), lr: 0.0021
step: 300, CrossEntropy loss: 0.0417 (0.0602), train accuracy: 98.438(98.155), lr: 0.0021
epoch: 35, CrossEntropy loss: 0.0607, accuracy: 98.158
test acc: 91.6300
step: 0, CrossEntropy loss: 0.1122 (0.1122), train accuracy: 98.438(98.438), lr: 0.0018
step: 100, CrossEntropy loss: 0.1054 (0.0617), train accuracy: 96.094(97.958), lr: 0.0018
step: 200, CrossEntropy loss: 0.0587 (0.0592), train accuracy: 96.875(98.045), lr: 0.0018
step: 300, CrossEntropy loss: 0.0903 (0.0571), train accuracy: 96.875(98.165), lr: 0.0018
epoch: 36, CrossEntropy loss: 0.0576, accuracy: 98.140
test acc: 91.6600
step: 0, CrossEntropy loss: 0.0588 (0.0588), train accuracy: 98.438(98.438), lr: 0.0016
step: 100, CrossEntropy loss: 0.0438 (0.0573), train accuracy: 97.656(98.205), lr: 0.0016
step: 200, CrossEntropy loss: 0.0704 (0.0578), train accuracy: 98.438(98.134), lr: 0.0016
step: 300, CrossEntropy loss: 0.0527 (0.0566), train accuracy: 97.656(98.155), lr: 0.0016
epoch: 37, CrossEntropy loss: 0.0580, accuracy: 98.130
test acc: 91.8200
step: 0, CrossEntropy loss: 0.0304 (0.0304), train accuracy: 100.000(100.000), lr: 0.0014
step: 100, CrossEntropy loss: 0.0419 (0.0517), train accuracy: 98.438(98.468), lr: 0.0014
step: 200, CrossEntropy loss: 0.0211 (0.0506), train accuracy: 100.000(98.554), lr: 0.0014
step: 300, CrossEntropy loss: 0.0595 (0.0516), train accuracy: 98.438(98.471), lr: 0.0014
epoch: 38, CrossEntropy loss: 0.0520, accuracy: 98.444
test acc: 91.6300
step: 0, CrossEntropy loss: 0.0468 (0.0468), train accuracy: 98.438(98.438), lr: 0.0012
step: 100, CrossEntropy loss: 0.0822 (0.0506), train accuracy: 96.875(98.530), lr: 0.0012
step: 200, CrossEntropy loss: 0.0184 (0.0519), train accuracy: 100.000(98.480), lr: 0.0012
step: 300, CrossEntropy loss: 0.0237 (0.0529), train accuracy: 100.000(98.430), lr: 0.0012
epoch: 39, CrossEntropy loss: 0.0526, accuracy: 98.420
test acc: 91.7600
step: 0, CrossEntropy loss: 0.0415 (0.0415), train accuracy: 99.219(99.219), lr: 0.0010
step: 100, CrossEntropy loss: 0.0558 (0.0490), train accuracy: 97.656(98.639), lr: 0.0010
step: 200, CrossEntropy loss: 0.0392 (0.0488), train accuracy: 98.438(98.616), lr: 0.0010
step: 300, CrossEntropy loss: 0.0637 (0.0494), train accuracy: 96.875(98.552), lr: 0.0010
epoch: 40, CrossEntropy loss: 0.0500, accuracy: 98.516
test acc: 91.7600
step: 0, CrossEntropy loss: 0.0945 (0.0945), train accuracy: 96.094(96.094), lr: 0.0008
step: 100, CrossEntropy loss: 0.0469 (0.0475), train accuracy: 98.438(98.561), lr: 0.0008
step: 200, CrossEntropy loss: 0.0829 (0.0461), train accuracy: 96.875(98.675), lr: 0.0008
step: 300, CrossEntropy loss: 0.0544 (0.0461), train accuracy: 98.438(98.650), lr: 0.0008
epoch: 41, CrossEntropy loss: 0.0468, accuracy: 98.626
test acc: 91.9400
step: 0, CrossEntropy loss: 0.0244 (0.0244), train accuracy: 99.219(99.219), lr: 0.0006
step: 100, CrossEntropy loss: 0.0529 (0.0435), train accuracy: 97.656(98.855), lr: 0.0006
step: 200, CrossEntropy loss: 0.0385 (0.0440), train accuracy: 99.219(98.830), lr: 0.0006
step: 300, CrossEntropy loss: 0.0263 (0.0448), train accuracy: 100.000(98.757), lr: 0.0006
epoch: 42, CrossEntropy loss: 0.0443, accuracy: 98.772
test acc: 91.9000
step: 0, CrossEntropy loss: 0.0301 (0.0301), train accuracy: 99.219(99.219), lr: 0.0005
step: 100, CrossEntropy loss: 0.0273 (0.0432), train accuracy: 100.000(98.716), lr: 0.0005
step: 200, CrossEntropy loss: 0.0266 (0.0444), train accuracy: 99.219(98.706), lr: 0.0005
step: 300, CrossEntropy loss: 0.0300 (0.0435), train accuracy: 99.219(98.752), lr: 0.0005
epoch: 43, CrossEntropy loss: 0.0441, accuracy: 98.730
test acc: 91.8100
step: 0, CrossEntropy loss: 0.0414 (0.0414), train accuracy: 99.219(99.219), lr: 0.0004
step: 100, CrossEntropy loss: 0.0502 (0.0451), train accuracy: 98.438(98.662), lr: 0.0004
step: 200, CrossEntropy loss: 0.0285 (0.0444), train accuracy: 100.000(98.706), lr: 0.0004
step: 300, CrossEntropy loss: 0.0699 (0.0451), train accuracy: 97.656(98.689), lr: 0.0004
epoch: 44, CrossEntropy loss: 0.0453, accuracy: 98.684
test acc: 91.7400
step: 0, CrossEntropy loss: 0.0418 (0.0418), train accuracy: 99.219(99.219), lr: 0.0003
step: 100, CrossEntropy loss: 0.0293 (0.0471), train accuracy: 100.000(98.592), lr: 0.0003
step: 200, CrossEntropy loss: 0.0242 (0.0452), train accuracy: 99.219(98.713), lr: 0.0003
step: 300, CrossEntropy loss: 0.0349 (0.0440), train accuracy: 99.219(98.731), lr: 0.0003
epoch: 45, CrossEntropy loss: 0.0431, accuracy: 98.770
test acc: 91.8300
step: 0, CrossEntropy loss: 0.0857 (0.0857), train accuracy: 97.656(97.656), lr: 0.0002
step: 100, CrossEntropy loss: 0.0725 (0.0416), train accuracy: 97.656(98.762), lr: 0.0002
step: 200, CrossEntropy loss: 0.0610 (0.0417), train accuracy: 97.656(98.834), lr: 0.0002
step: 300, CrossEntropy loss: 0.0379 (0.0423), train accuracy: 98.438(98.814), lr: 0.0002
epoch: 46, CrossEntropy loss: 0.0417, accuracy: 98.834
test acc: 91.9000
step: 0, CrossEntropy loss: 0.0582 (0.0582), train accuracy: 98.438(98.438), lr: 0.0001
step: 100, CrossEntropy loss: 0.0286 (0.0428), train accuracy: 100.000(98.832), lr: 0.0001
step: 200, CrossEntropy loss: 0.0182 (0.0438), train accuracy: 100.000(98.818), lr: 0.0001
step: 300, CrossEntropy loss: 0.0406 (0.0426), train accuracy: 98.438(98.858), lr: 0.0001
epoch: 47, CrossEntropy loss: 0.0428, accuracy: 98.836
test acc: 91.7000
step: 0, CrossEntropy loss: 0.0521 (0.0521), train accuracy: 98.438(98.438), lr: 0.0000
step: 100, CrossEntropy loss: 0.0572 (0.0418), train accuracy: 99.219(98.793), lr: 0.0000
step: 200, CrossEntropy loss: 0.0353 (0.0422), train accuracy: 100.000(98.822), lr: 0.0000
step: 300, CrossEntropy loss: 0.0693 (0.0422), train accuracy: 97.656(98.822), lr: 0.0000
epoch: 48, CrossEntropy loss: 0.0417, accuracy: 98.846
test acc: 91.8400
step: 0, CrossEntropy loss: 0.0233 (0.0233), train accuracy: 100.000(100.000), lr: 0.0000
step: 100, CrossEntropy loss: 0.0388 (0.0400), train accuracy: 99.219(98.840), lr: 0.0000
step: 200, CrossEntropy loss: 0.0156 (0.0399), train accuracy: 100.000(98.873), lr: 0.0000
step: 300, CrossEntropy loss: 0.0652 (0.0411), train accuracy: 98.438(98.827), lr: 0.0000
epoch: 49, CrossEntropy loss: 0.0419, accuracy: 98.812
test acc: 91.8700
ln structured pruning testing >>>>>>>>>>>>>>>>>>>>>>>>
order: 1
model sum:  -1111.3250433802605
before pruning, train loss: 0.0033, train acc: 99.9620, test accuracy: 94.2900
start pruning module.conv1, num of channels: 16
tensor([ 3, 12, 10,  7, 15,  2,  9,  8], device='cuda:0')
time: 0.0019s
start pruning module.layer1.0.conv1, num of channels: 16
tensor([ 5, 10, 14,  4, 11,  8,  7,  0], device='cuda:0')
time: 0.0008s
start pruning module.layer1.0.conv2, num of channels: 16
tensor([ 9,  1, 14, 11,  4, 12,  5,  6], device='cuda:0')
time: 0.0008s
start pruning module.layer1.0.conv3, num of channels: 64
tensor([13,  8, 26, 63, 54, 34,  5, 28, 50, 52, 41, 27, 44, 25, 59, 48, 10, 29,
        19, 37,  1, 55, 43, 11, 38, 57, 18, 22, 60, 33, 42,  3],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.0.downsample.0, num of channels: 64
tensor([26,  5,  1, 34, 27, 28, 48, 41, 63, 44, 54, 52, 50, 25, 59,  8, 10, 29,
        43, 13, 37, 55, 11, 19, 33, 18, 38, 22, 42, 57, 32, 60],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.1.conv1, num of channels: 16
tensor([14,  3, 10,  8,  6,  5,  7,  2], device='cuda:0')
time: 0.0007s
start pruning module.layer1.1.conv2, num of channels: 16
tensor([ 4, 12,  3, 13, 14,  0,  1, 15], device='cuda:0')
time: 0.0007s
start pruning module.layer1.1.conv3, num of channels: 64
tensor([53, 26, 28,  5, 44, 27,  8, 41, 34, 48, 63, 13, 10,  1, 15, 52, 50, 54,
        11, 25, 29, 37, 55, 59, 43, 35, 19, 18, 57, 38, 47,  2],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.2.conv1, num of channels: 16
tensor([14,  1, 11, 13,  9,  3,  0,  2], device='cuda:0')
time: 0.0007s
start pruning module.layer1.2.conv2, num of channels: 16
tensor([ 2,  1, 13,  3,  6,  4,  9, 10], device='cuda:0')
time: 0.0007s
start pruning module.layer1.2.conv3, num of channels: 64
tensor([53, 48, 63, 26, 27,  5, 41, 52, 28, 44, 34, 25, 50,  1, 21, 15, 54, 43,
        55, 51, 37, 59, 13, 10,  8, 29, 11, 23, 57, 18, 19, 56],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.3.conv1, num of channels: 16
tensor([11,  6,  1,  3,  8,  0,  7, 12], device='cuda:0')
time: 0.0007s
start pruning module.layer1.3.conv2, num of channels: 16
tensor([11,  6,  9,  8,  5,  2, 15,  1], device='cuda:0')
time: 0.0007s
start pruning module.layer1.3.conv3, num of channels: 64
tensor([ 5, 26, 63,  1, 34, 48, 13, 29, 41, 52, 28, 59, 53, 10, 15, 39,  8, 37,
        54, 27, 44, 11, 51, 25, 21, 23, 50, 55, 43, 22, 18, 14],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.4.conv1, num of channels: 16
tensor([ 7,  8, 14,  0, 12,  3,  2,  5], device='cuda:0')
time: 0.0007s
start pruning module.layer1.4.conv2, num of channels: 16
tensor([13,  8,  1, 10, 12,  9, 14,  3], device='cuda:0')
time: 0.0007s
start pruning module.layer1.4.conv3, num of channels: 64
tensor([27, 48, 20, 49, 57, 16, 56, 62, 61, 14, 55,  1, 51, 15,  0, 22, 32, 58,
        29, 10,  6, 18, 42, 44, 30,  7, 37, 12, 28,  2, 59, 38],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.5.conv1, num of channels: 16
tensor([13,  4,  3, 11,  7,  1, 14,  6], device='cuda:0')
time: 0.0007s
start pruning module.layer1.5.conv2, num of channels: 16
tensor([ 4,  0,  3,  1,  9,  8, 14, 12], device='cuda:0')
time: 0.0007s
start pruning module.layer1.5.conv3, num of channels: 64
tensor([30, 57, 49, 36, 14, 20, 22, 17, 39,  2, 12, 33, 18, 61,  5, 32,  4, 58,
        42, 38,  3,  9, 27, 47, 56, 25, 19, 10, 13, 23, 41, 21],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.6.conv1, num of channels: 16
tensor([11, 15,  2,  5,  0, 14,  9, 13], device='cuda:0')
time: 0.0007s
start pruning module.layer1.6.conv2, num of channels: 16
tensor([ 9,  7, 12,  2,  4,  5, 15,  6], device='cuda:0')
time: 0.0007s
start pruning module.layer1.6.conv3, num of channels: 64
tensor([27, 36, 49, 23, 61, 18, 42, 48, 14, 25, 45,  6,  3, 10, 17, 22, 41, 58,
        53, 28, 20,  5, 62, 39, 21, 26, 59, 40, 47, 56, 11, 50],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.7.conv1, num of channels: 16
tensor([ 7, 12,  2,  3,  1, 15,  6, 13], device='cuda:0')
time: 0.0008s
start pruning module.layer1.7.conv2, num of channels: 16
tensor([ 1,  6,  5, 12,  8,  3, 15, 10], device='cuda:0')
time: 0.0007s
start pruning module.layer1.7.conv3, num of channels: 64
tensor([47,  0, 61, 12, 33, 31, 30, 20,  9, 49, 60, 40, 58, 46,  2, 17,  6, 27,
        18, 45, 36,  3, 32, 14, 16, 42, 11, 38, 24, 56,  5, 35],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.8.conv1, num of channels: 16
tensor([14,  0, 12,  9,  7,  6,  1, 10], device='cuda:0')
time: 0.0007s
start pruning module.layer1.8.conv2, num of channels: 16
tensor([10,  3,  1,  6,  9, 14, 15,  2], device='cuda:0')
time: 0.0007s
start pruning module.layer1.8.conv3, num of channels: 64
tensor([40, 61, 20,  2, 10,  3, 18, 17, 26, 25, 51, 45,  6, 42, 60,  5, 14, 46,
        31, 29,  9, 27,  4, 23, 43, 21, 41, 63, 34, 50, 48, 57],
       device='cuda:0')
time: 0.0012s
start pruning module.layer2.0.conv1, num of channels: 32
tensor([21, 24, 15,  5, 26, 23,  0, 30, 10,  1, 19, 29,  7, 25, 14, 18],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.0.conv2, num of channels: 32
tensor([ 2, 11, 26, 25, 30, 21, 20, 13, 12, 16, 31, 17,  8,  6,  5,  4],
       device='cuda:0')
time: 0.0011s
start pruning module.layer2.0.conv3, num of channels: 128
tensor([  9,  58,  52, 126,  79,   4,  11, 106,  98,  23,  70, 124,  48,  38,
         87,  96,  84,  10,   1,  86,  27,  78,   5,  35, 120,  54, 122, 101,
          7,  71,  73,  17, 110,  33, 123,  45, 103, 117,  24, 105,  12, 125,
         22, 114,   0,  44,   8, 102,  21,  53, 104,  83,  29,  62,  49,  69,
         97,  61, 113,  51,  90,  74,  26,  89], device='cuda:0')
time: 0.0022s
start pruning module.layer2.0.downsample.0, num of channels: 128
tensor([ 79,  29,  70,  35,  48, 124,  21,   1,  26, 102,  62,  83,  96, 116,
         28, 104,  56,  22,  49,  93,  90,   4,  51,  71,  11, 125,  23, 103,
         42,  19,   0, 120,  61,  59,  82,  69,  60, 110,  17,  98,  45,   5,
        114, 105,  74,   7,  10,  38,  37,  46, 106, 126, 122,  84, 101,  78,
         65,  24,  39, 109,  97,  87,  27,  54], device='cuda:0')
time: 0.0018s
start pruning module.layer2.1.conv1, num of channels: 32
tensor([ 5, 31, 27,  2,  0, 30,  7, 16, 13, 28, 15, 10, 12, 24,  1, 23],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.1.conv2, num of channels: 32
tensor([22, 19, 30, 23, 25,  4,  6,  5, 17, 11, 28,  9, 12, 20,  2,  3],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.1.conv3, num of channels: 128
tensor([111,  60,  88,  72,  28,  61,  80,  94,  37,  40,  97, 120, 102,  82,
        123, 112,   8, 121, 116, 109,  17,  39,  31,  19,  89,  13,  59,  21,
         64,  44,  14,  26,  73,  45,  93, 125, 118, 104,  49,  27,  54, 105,
          0,  24,  56,  29, 114,  75,  22,  67,  18,  74,  91,  12, 107, 126,
         62,  32,  69,   9,  83,   1,  50,  84], device='cuda:0')
time: 0.0018s
start pruning module.layer2.2.conv1, num of channels: 32
tensor([20, 27, 26, 24, 12, 15, 10,  2, 21,  0,  9, 14, 23, 19, 22, 31],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.2.conv2, num of channels: 32
tensor([16, 12,  3, 19, 18, 29, 13,  8, 27,  4, 25,  6, 14,  5, 31, 17],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.2.conv3, num of channels: 128
tensor([102,  19,  79,  61,  93,  64,  72,  13,  71,   5, 123,   8,  28,  11,
         52, 112, 106,  94, 126,  43,  59, 117,  40,  95,  48, 111,  21,  27,
         33,  97,  39,  37,   0,  89,  73,  31,  88, 121,  49, 109,  10,  14,
        101,  60,  38,  44,  54, 120,  92,  16,  62,  83,  63,  80,  23,  29,
        113,  84, 118, 107, 110,   9,  91,  65], device='cuda:0')
time: 0.0018s
start pruning module.layer2.3.conv1, num of channels: 32
tensor([24, 26, 18,  9, 19,  2, 31, 13,  4, 29,  7, 28,  8, 12, 16, 10],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.3.conv2, num of channels: 32
tensor([ 8,  1,  3, 28,  5, 25,  2, 12,  9, 30, 21,  4, 24, 19, 27, 23],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.3.conv3, num of channels: 128
tensor([ 44, 112,  82,  65,  72,  80,   3,  60,  88,   0, 108,  95, 118,  13,
        116,  63,  18,  40,  45, 111,  64,  66,  97,  28,  56,  92, 109,  31,
        120,  89,   8,  29,  67,  27,  74, 105,  73,  38,  75,  84,  79, 121,
          9,  59,  52, 119, 114,  69,   1,  21,  91, 102,  17,  43, 122,  57,
        124,  93,  94,  51,  42,  62,  35,  70], device='cuda:0')
time: 0.0018s
start pruning module.layer2.4.conv1, num of channels: 32
tensor([ 8, 22, 29, 24, 16, 23, 14,  1, 11, 15, 30,  6,  4, 25, 17, 27],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.4.conv2, num of channels: 32
tensor([11,  7, 27, 16, 13,  1, 12, 23,  8, 15, 18, 17, 30, 31, 22, 24],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.4.conv3, num of channels: 128
tensor([ 40,  46,  69,  18,  29,  51,  92,  26, 111, 125,  78,  63,  90,   7,
         42, 124,  95,  37, 112, 120,  94,  60, 122,  59, 121,  77,  73,  80,
        101,  10, 123,  56,  97,   2,  43,  33, 110,  34, 108,  21,  27,  67,
         54, 118, 105, 113,  32, 119,  17,  61,  91,  66,  28,  88,  23,  13,
          3,  93,  47,  75,  39,   8,  84,  24], device='cuda:0')
time: 0.0018s
start pruning module.layer2.5.conv1, num of channels: 32
tensor([26, 11,  7, 21, 17, 12, 28, 20,  8, 30,  4, 13, 27, 23,  5, 14],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.5.conv2, num of channels: 32
tensor([12,  3, 10, 29, 26, 18, 14, 27, 11, 13, 21,  7, 25, 28, 23,  6],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.5.conv3, num of channels: 128
tensor([ 68,  98, 113, 101,  10,  52,   5, 126,  81, 117,  86,  53,  43,  33,
         73,  38,  11, 125, 119,  32,  47,  40,  63,  75,  34,   1,  21, 124,
         90,  25, 118,  54, 115,   2,  65,  95, 120,  57, 108,  26,  85,  66,
        110, 103,  23,  24,  96,  91, 123,   7, 106,  84,  27,  69,  78,  16,
         15, 104,  12,   4,  42,  79,  14,  44], device='cuda:0')
time: 0.0018s
start pruning module.layer2.6.conv1, num of channels: 32
tensor([27, 28,  4,  6, 24, 31, 20, 16, 29,  9,  5, 18, 19,  8, 12, 11],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.6.conv2, num of channels: 32
tensor([14,  9, 25, 29, 23,  1, 26, 20, 12, 16, 22,  3, 27, 28, 30, 17],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.6.conv3, num of channels: 128
tensor([126, 117,  68,  98,  81,  87,  31,  47,  96,  43, 123,  38, 108,  86,
         11,  78,  51,  90,  62,  75,  52,   5,  25,  17, 100,  61,  46,  66,
         91, 124, 115,  23,  65,  77, 103,  88, 107,  57,  21, 104,  54,   8,
        101,  55,  12,   6,  84, 110,  15,  99,  76, 120,  44,  74,  26,  39,
         50,  42,  67,  85,  60,  24,  33,   9], device='cuda:0')
time: 0.0018s
start pruning module.layer2.7.conv1, num of channels: 32
tensor([12, 20, 16, 13,  0, 19, 14,  9,  2,  6, 27, 10, 29, 23,  7,  3],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.7.conv2, num of channels: 32
tensor([ 1, 30, 31, 15, 17, 13, 11, 27, 21,  7, 22, 23, 16,  4, 20, 10],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.7.conv3, num of channels: 128
tensor([ 20, 127,  77,  25, 106,  64,  15,  36, 113,  53,  76,  41,  45,  71,
        103,  92,   2,  21,  22,   1,  32,  14, 104,  54,  66,  38, 100,  85,
         11, 101, 119,  74, 108,   5, 111,  55,  50,  31,   3,  63, 121,  49,
         78,   4, 109, 125,  97,  81,  67,  73,  23,  35,  75,  33,  28, 122,
         68,  69,  30,  59,  89,  16,  90,  44], device='cuda:0')
time: 0.0018s
start pruning module.layer2.8.conv1, num of channels: 32
tensor([18, 15, 17,  9, 10, 31,  6, 28, 23, 12, 30,  4, 21, 14, 19, 16],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.8.conv2, num of channels: 32
tensor([ 1,  0, 23, 31, 11,  8, 25, 13, 10,  4,  6, 17, 30,  7, 21, 16],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.8.conv3, num of channels: 128
tensor([ 36,   9,  55,  10,  85,  86,   6, 100,  81,  12,  76,  68,  30, 108,
         70,   3,  27,  24,  42,  48,  87,  99, 103,  31,  43, 113,  33, 110,
         89,  44,  17,  65, 104,  77,   5, 115,  13, 119,  45,  21,  25, 126,
        123, 107,  11, 120,  80, 106,  91,  16,  14, 118,  92,  38,  50, 117,
        105, 101,  19,  41,  22,  47,  67, 112], device='cuda:0')
time: 0.0018s
start pruning module.layer3.0.conv1, num of channels: 64
tensor([42, 22,  9, 52, 50, 58,  4, 59, 44, 32, 55,  5, 63, 57, 53, 26, 49, 37,
        43, 21, 38,  7, 10, 28, 35, 61, 30, 11, 56, 20, 47, 24],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.0.conv2, num of channels: 64
tensor([43, 29,  0,  8, 57, 24,  2, 30, 51, 39, 54,  9, 61, 52, 22, 16, 20, 23,
         1, 28, 45, 26, 41, 62, 46, 63, 60, 25, 19,  6, 37, 58],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.0.conv3, num of channels: 256
tensor([ 65,  76, 107,  40, 189,  92, 151, 183, 159,  56, 207, 248, 155, 234,
         87, 139,  21,   4, 251,  15, 212, 192, 101, 188, 190,  93, 104,  27,
         50,  13,  57, 164, 150,  37, 109,  83,  44,  88,  91, 255, 208, 154,
         16,  31,  99, 144,  68, 137, 125,  80, 130, 195, 200,  25,  97,  23,
         79, 175, 185, 219,  42, 163, 191, 232,  47, 133,  22,  55, 199, 140,
        177,   5, 113,  58, 110, 201, 100,   3, 122, 194, 117, 111, 218, 211,
         35, 197,  78, 179, 108,  45,  52,  73, 136,  20,  67,  46,  94, 124,
         48, 121,  36,  26,  49,   6,  60, 142, 141,  32,  59, 178, 143, 129,
        210,  69, 241,  82, 205, 148,  24, 225, 204,  85, 203, 215, 134,  19,
         84,  11], device='cuda:0')
time: 0.0030s
start pruning module.layer3.0.downsample.0, num of channels: 256
tensor([ 64, 255, 110,  89,  34,  38, 189,  65,  19,  35, 156,  33, 141, 155,
         53,  79, 130,  72,  36,  76,  12, 208,  52,  92, 166, 170, 212, 125,
         85,  27,  57, 216,  21,  66, 164, 136,  43,  15, 237,  11, 251, 100,
         25, 150, 147,  93,  70,   7, 129, 167, 187,   1, 101,  98,  91, 122,
          4,  60,  62,  77, 197, 234,  24, 248,   5, 175, 240, 163, 117, 232,
        246, 233, 109,  78, 165, 222,  37, 180, 140, 201,  96, 191,  31, 115,
         16,  47, 207,  90, 228, 185, 107,  42, 174,  23, 144,  83,   8,  97,
         44, 160,  80,  48, 235, 142, 118,  17, 182, 179,  40, 247, 111,  14,
        121, 195, 223, 127, 203, 159,   3, 139, 128,  13, 134, 104,  30,  59,
         67,  26], device='cuda:0')
time: 0.0030s
start pruning module.layer3.1.conv1, num of channels: 64
tensor([ 2, 52,  7, 32,  6, 24, 59, 42, 36, 29, 18, 12,  3, 26, 28, 31, 39, 51,
        58, 50, 35,  5, 13, 34, 62, 37, 21, 49,  1, 60, 57, 46],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.1.conv2, num of channels: 64
tensor([31,  1, 35,  4, 15,  6, 45, 20, 34, 25, 30, 33, 46, 38, 39, 55, 27, 40,
        13,  2, 61, 48, 42, 22, 18, 12, 23, 58, 36, 56, 16,  5],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.1.conv3, num of channels: 256
tensor([ 40,  11,  43, 178, 218, 231, 154,  49, 147, 122, 117, 232,  45, 221,
        199, 228, 247,  79, 240, 212,  52,  81,  78, 180,  27, 112, 155,  30,
        234,  34, 250, 111, 166,  65, 109, 249,   5,  89, 203,  28,  97, 104,
        121,  62,  53,  85, 179,  13, 107, 190, 106, 192, 202,  39, 100, 110,
          7,  20,  96, 187, 219,   6, 174, 194,   8, 116,  80, 227, 235, 136,
        210, 134, 246,  24,  70,  60,  95,  91, 114,   4,  64, 254, 198, 158,
         77, 255, 113, 242, 236, 163, 248, 171,   9,  16, 186, 191,  57,  25,
        181, 176,  90,  87, 244, 206, 152,  21,  88, 184, 230, 214, 135,  94,
        241, 164, 133, 209,  67, 197,  66, 150, 169, 132, 101, 153, 201,  10,
         29,  33], device='cuda:0')
time: 0.0030s
start pruning module.layer3.2.conv1, num of channels: 64
tensor([ 1, 34, 59, 10, 48, 17, 60,  9, 39, 51,  3, 38, 18,  0, 47, 45, 12, 13,
        31, 52, 25,  6, 44, 29,  7, 55, 49, 61, 26, 24,  2, 32],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.2.conv2, num of channels: 64
tensor([16, 48, 53,  7, 54,  9, 59, 57, 43, 32, 24, 50, 21,  0, 13, 35,  5, 60,
        27, 62, 25, 33, 34, 22, 10, 44, 49, 41, 47, 30, 56, 52],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.2.conv3, num of channels: 256
tensor([  1, 112, 175,  20, 148, 136,  39,   3, 199, 147, 110,  95,   5,  19,
        113,  56,  73,  64,  78, 108, 255, 135, 231, 107, 179, 251, 141, 205,
        216, 117,  92, 146, 122,  88,  59, 252,  52, 206, 170,  31, 201, 166,
         97,  16, 219, 115, 188, 245, 203, 232, 161, 155,  21,   0, 165, 106,
        153, 172,  89,  77,  45, 150, 247, 220,   6,  12,   7, 143, 225, 235,
        174, 254, 190, 109,  74, 133,  23,  29,  67, 160, 227,  80, 248,  94,
         17,  70,  91, 240, 189,   4,  60, 101,  32,  85,  62, 202, 131, 119,
        200,  43, 250, 116,  72, 163, 187, 249, 191,  46, 204, 129, 159, 237,
        156,  13,  25,  11,  38, 192, 132, 145,  75, 223, 103, 121,  35, 154,
        238,  54], device='cuda:0')
time: 0.0030s
start pruning module.layer3.3.conv1, num of channels: 64
tensor([50, 36,  6, 11, 37, 54, 47,  9, 20, 31, 34, 63, 13, 46, 62, 45, 58, 16,
        14, 60, 41, 19, 57, 29, 21,  7, 22, 43, 35, 23, 42, 39],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.3.conv2, num of channels: 64
tensor([29, 40, 45, 49, 17, 38, 63, 36, 41, 32, 30, 14,  8, 11, 62, 23, 55, 52,
        48,  5, 33,  3, 12, 21,  0, 46, 26, 25, 60, 59, 19, 57],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.3.conv3, num of channels: 256
tensor([ 42, 206, 115,   1, 213,  35, 148, 244,  94, 198, 117, 105, 205, 254,
        179,  20, 222,  41, 204, 208, 193, 112, 133, 124,  96, 223,   0, 227,
         75,  48,  29,  87, 238, 170,   7,  73,  93, 250,  10,  55,  65,  21,
        182, 251, 140,  52, 189,  64,  54, 146,  51, 212,  63, 236, 119, 171,
        191, 197, 108, 220,  78, 136, 130,  56, 194,  15,  85, 118, 160, 249,
         39, 121, 107,  86,  88,   9, 200,  31, 192, 230, 104, 195,  22,  79,
         25, 157, 145,  50, 113, 120, 175,  59, 196, 100,  60, 167, 162, 125,
        156, 176, 245, 185, 252, 241,  28,  27, 215, 181, 231,  80, 187,  34,
        172, 173, 141,  12,  57,  74, 188,  38, 201, 247,  77,  62, 110, 255,
        235,  47], device='cuda:0')
time: 0.0030s
start pruning module.layer3.4.conv1, num of channels: 64
tensor([31, 57, 10, 58, 42, 60, 51, 26,  1, 24,  3, 11, 41, 21, 40, 49, 50, 17,
        54, 36,  0, 22, 35, 61,  6, 20, 63,  2, 45, 39, 28, 56],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.4.conv2, num of channels: 64
tensor([ 2, 24, 35, 50, 46, 17, 38,  7,  3, 29, 58, 13, 27, 15, 59, 55,  1, 39,
        48, 57, 30, 11, 40,  0,  6, 21, 54, 26, 36, 28,  9,  8],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.4.conv3, num of channels: 256
tensor([ 34, 230,  45, 114, 115, 250, 238, 191, 189, 188, 170, 151, 117,   1,
         96, 210, 192, 220, 236, 203,  41,  93, 204,  86, 154, 177, 132,  75,
         11, 121,  74,  78,  85, 101, 149, 225, 146, 190, 140,  14,  60,  42,
        109, 179,  83, 241,  47,  56,  92, 147,  18, 105,  89,  98,  65, 215,
        112, 224,  29, 244, 233,  57, 100,  50, 228,  55,  27, 137, 198, 155,
          5, 235, 185,  17, 163,  21, 108,  77, 143, 129,   4, 202,  63,  35,
         40,  82, 134, 214, 247, 200,  20, 213,   8, 222,  53, 186, 217, 196,
         10,   7,  44, 180, 133, 219,  67, 237,  19, 130, 183, 206, 232, 131,
        216,  73, 242,  91,  51, 187, 231,  37,  26,  69, 159, 104, 205, 246,
        239,  80], device='cuda:0')
time: 0.0030s
start pruning module.layer3.5.conv1, num of channels: 64
tensor([ 1, 21, 61, 59, 16, 36, 54, 15, 34, 18, 43, 33, 63, 14, 30,  0, 41, 51,
        62, 45, 24, 57, 13, 38, 48, 27, 20,  8, 28, 31, 47, 22],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.5.conv2, num of channels: 64
tensor([60, 35, 18, 53, 33, 17, 29, 39, 58, 15, 50, 38,  9, 12, 14, 28, 59, 42,
        30, 13,  6,  5, 21, 54, 43, 24, 61,  3, 22, 20,  1, 56],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.5.conv3, num of channels: 256
tensor([ 20, 220, 190,  53,  34, 113,   2, 208,  76, 218,  37, 154,  89, 108,
        170,  45, 175,   1, 236,  40, 189, 230,  78, 146,  13,  93,  86, 207,
        114, 186, 211,  44,  74, 144, 234, 117, 159, 191, 202,  84, 245,  80,
         26,  35, 239,   7, 241, 120, 179,  48, 252,  42, 151,  75, 103, 210,
         61, 163,  71, 152,  43, 204,  52, 115,  96, 149, 136,  39, 122, 248,
        250, 137, 126,  82, 225,   6, 148, 131, 206,  88,  31, 150, 107,  98,
        223, 188,   3,  59, 132, 160, 106, 213,  87, 192, 195, 193,  63,  23,
        181, 198, 112, 130, 205, 247, 105,  56, 237,  58,  91, 244, 135, 203,
        214,  60, 174, 229,  11, 215, 183, 121,  57, 233, 217, 156, 235,  28,
        254,  10], device='cuda:0')
time: 0.0030s
start pruning module.layer3.6.conv1, num of channels: 64
tensor([22, 55, 34, 39, 12, 13, 28,  9, 57, 52, 23, 27, 58, 43, 47, 48, 40, 38,
        53, 61, 41,  4, 26, 60, 15, 35,  2, 54, 29, 18, 56, 62],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.6.conv2, num of channels: 64
tensor([17, 10, 53, 31, 51, 57,  0, 22, 28,  3, 23, 43, 60,  5, 61, 27,  2, 39,
        50, 16, 34, 19, 11, 14, 58, 15, 38, 26, 54, 59, 35,  6],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.6.conv3, num of channels: 256
tensor([120,  34,  45, 236, 190, 121,   1, 103, 193, 117, 218,  93, 240, 202,
         20,  37, 154,   2,  35,  21, 220, 152, 109,  80, 239, 179, 136, 114,
        168, 205, 115,  42, 126,  86, 166, 186,  53,   5,  58,  40, 183, 206,
        147,   6, 238,  87, 150, 108,  27, 210,  61,  71,  13, 105, 198, 146,
        149,  92, 189, 159, 245,   3, 111,  75,  96,   8,  82,  76,  49, 235,
         99, 112, 113, 175, 201,  48,  36, 173, 233, 221,  11, 243, 104, 211,
        140, 181, 234, 132,  89,   0, 157,  39,  77, 101,  23, 247,  85, 208,
        242,   7, 153,  25, 170, 204, 130, 188, 174, 226,  30,  47,  31, 203,
        225, 216, 180, 191, 209,   9,  14, 224,  91,  98, 207,  43, 222,  26,
        158,  68], device='cuda:0')
time: 0.0049s
start pruning module.layer3.7.conv1, num of channels: 64
tensor([46, 12, 27, 43, 58, 39, 45, 49, 41, 63,  9, 30, 42, 21, 33, 28, 16,  6,
        51, 38, 44, 55, 36, 10, 54, 11,  3, 32,  7, 40, 23, 37],
       device='cuda:0')
time: 0.0020s
start pruning module.layer3.7.conv2, num of channels: 64
tensor([30, 52, 25, 60, 15, 27, 59, 23, 24, 17, 50,  2, 51, 38, 57, 62, 55, 47,
         8, 54, 37,  4,  3, 40,  6, 61, 42, 56, 21,  7, 53, 31],
       device='cuda:0')
time: 0.0020s
start pruning module.layer3.7.conv3, num of channels: 256
tensor([ 34,   1, 117, 168,  43, 147,  20,  87,  85, 103, 205, 173, 245, 149,
        240,  53,  47, 104, 206, 126, 165, 174,   2,   5, 170,  78, 234, 179,
        222, 231, 204, 178, 142, 114,  45,   7,  35,  93, 188, 135, 252, 150,
         37, 153, 239, 220, 190,  42, 159, 244, 203, 199, 232,  74,  22, 108,
         86,  49, 120,  89, 148, 115,  80, 189, 140, 200, 166,  30, 158, 138,
          6, 226, 175, 236, 230, 109, 253, 132,   4, 152,  82,  92, 255,  32,
         27, 160, 134,  40,  13,  61,  10, 110, 157, 128, 212, 121,  58,  99,
        223, 151, 133, 218,  48, 241,  38,  73, 217,  90, 202,  81, 229, 106,
        191, 183, 180,  75,  97, 242, 214, 113, 112, 145,  59, 141,  65, 193,
        101, 125], device='cuda:0')
time: 0.0055s
start pruning module.layer3.8.conv1, num of channels: 64
tensor([15, 63, 55, 52, 37, 36, 35, 60, 13,  6, 61,  7, 12,  4, 20, 45, 39,  1,
        46, 51, 62,  3, 57, 26, 47, 44, 49, 31, 14, 24, 33, 25],
       device='cuda:0')
time: 0.0021s
start pruning module.layer3.8.conv2, num of channels: 64
tensor([16, 52, 32, 45, 48,  0, 36, 53, 58, 44, 57, 62, 56, 41, 24, 27, 14, 21,
        26, 39, 25, 54, 63,  8, 46, 50, 28, 49, 40, 33, 10, 61],
       device='cuda:0')
time: 0.0020s
start pruning module.layer3.8.conv3, num of channels: 256
tensor([ 96,  87,   7,  34, 148, 152,  29, 205, 170,  45, 255,  97,  57, 136,
        101,   1, 179,  93, 132,  30, 103,  38, 141, 218, 106, 245,  22, 168,
         52,   5,  37, 223, 247, 206,  27, 190, 158,  10, 114,  47, 122, 240,
        104, 253, 210,  28, 220, 178, 167, 145, 201,   8, 184, 182, 160,  43,
        180,  72,  95, 128,  35, 251, 221, 232,  65,  12, 118, 125,  78, 153,
        127, 112,  58,   4,  82, 163, 149, 117, 140,  49, 165,  40,  81, 214,
        208, 203, 115, 147,  33, 231, 200,  23,  54,  91, 213, 110, 242, 146,
        159,  63, 239,  53, 222, 135, 174, 183, 109,  64, 249,  62, 166, 164,
        155, 162,  20, 126, 226,  79, 191, 212,  42, 171, 217,  85, 113,  99,
         51,  25], device='cuda:0')
time: 0.0055s
Global sparsity: 49.47%
epoch: 0, train loss: 2.3176, train acc: 26.3820, test accuracy: 25.7000
step: 0, CrossEntropy loss: 1.3755 (1.3755), train accuracy: 59.375(59.375), lr: 0.0100
step: 100, CrossEntropy loss: 0.2496 (0.4593), train accuracy: 90.625(84.769), lr: 0.0100
step: 200, CrossEntropy loss: 0.2761 (0.3664), train accuracy: 92.188(87.624), lr: 0.0100
step: 300, CrossEntropy loss: 0.2806 (0.3263), train accuracy: 90.625(88.915), lr: 0.0100
epoch: 0, CrossEntropy loss: 0.3032, accuracy: 89.678
test acc: 89.5100
step: 0, CrossEntropy loss: 0.1016 (0.1016), train accuracy: 96.875(96.875), lr: 0.0100
step: 100, CrossEntropy loss: 0.2704 (0.1942), train accuracy: 91.406(93.348), lr: 0.0100
step: 200, CrossEntropy loss: 0.2544 (0.1956), train accuracy: 89.844(93.280), lr: 0.0100
step: 300, CrossEntropy loss: 0.2948 (0.1907), train accuracy: 92.969(93.488), lr: 0.0100
epoch: 1, CrossEntropy loss: 0.1886, accuracy: 93.468
test acc: 90.5300
step: 0, CrossEntropy loss: 0.1130 (0.1130), train accuracy: 96.875(96.875), lr: 0.0100
step: 100, CrossEntropy loss: 0.1318 (0.1585), train accuracy: 95.312(94.640), lr: 0.0100
step: 200, CrossEntropy loss: 0.1614 (0.1546), train accuracy: 91.406(94.694), lr: 0.0100
step: 300, CrossEntropy loss: 0.1748 (0.1577), train accuracy: 93.750(94.505), lr: 0.0100
epoch: 2, CrossEntropy loss: 0.1582, accuracy: 94.520
test acc: 90.6400
step: 0, CrossEntropy loss: 0.1089 (0.1089), train accuracy: 97.656(97.656), lr: 0.0099
step: 100, CrossEntropy loss: 0.1465 (0.1383), train accuracy: 95.312(95.173), lr: 0.0099
step: 200, CrossEntropy loss: 0.1259 (0.1391), train accuracy: 96.875(95.258), lr: 0.0099
step: 300, CrossEntropy loss: 0.1651 (0.1416), train accuracy: 93.750(95.128), lr: 0.0099
epoch: 3, CrossEntropy loss: 0.1434, accuracy: 95.050
test acc: 90.9000
step: 0, CrossEntropy loss: 0.1464 (0.1464), train accuracy: 95.312(95.312), lr: 0.0098
step: 100, CrossEntropy loss: 0.1793 (0.1270), train accuracy: 94.531(95.606), lr: 0.0098
step: 200, CrossEntropy loss: 0.1373 (0.1302), train accuracy: 95.312(95.433), lr: 0.0098
step: 300, CrossEntropy loss: 0.1367 (0.1327), train accuracy: 95.312(95.380), lr: 0.0098
epoch: 4, CrossEntropy loss: 0.1332, accuracy: 95.318
test acc: 90.9200
step: 0, CrossEntropy loss: 0.1558 (0.1558), train accuracy: 94.531(94.531), lr: 0.0098
step: 100, CrossEntropy loss: 0.0694 (0.1178), train accuracy: 97.656(95.947), lr: 0.0098
step: 200, CrossEntropy loss: 0.1609 (0.1199), train accuracy: 93.750(95.892), lr: 0.0098
step: 300, CrossEntropy loss: 0.2025 (0.1225), train accuracy: 92.969(95.780), lr: 0.0098
epoch: 5, CrossEntropy loss: 0.1240, accuracy: 95.722
test acc: 91.6800
step: 0, CrossEntropy loss: 0.0891 (0.0891), train accuracy: 98.438(98.438), lr: 0.0096
step: 100, CrossEntropy loss: 0.0713 (0.1136), train accuracy: 98.438(96.009), lr: 0.0096
step: 200, CrossEntropy loss: 0.1048 (0.1163), train accuracy: 97.656(95.993), lr: 0.0096
step: 300, CrossEntropy loss: 0.1755 (0.1168), train accuracy: 95.312(95.985), lr: 0.0096
epoch: 6, CrossEntropy loss: 0.1176, accuracy: 95.934
test acc: 91.4200
step: 0, CrossEntropy loss: 0.1956 (0.1956), train accuracy: 92.188(92.188), lr: 0.0095
step: 100, CrossEntropy loss: 0.1514 (0.1075), train accuracy: 97.656(96.403), lr: 0.0095
step: 200, CrossEntropy loss: 0.1112 (0.1078), train accuracy: 94.531(96.358), lr: 0.0095
step: 300, CrossEntropy loss: 0.1162 (0.1080), train accuracy: 93.750(96.288), lr: 0.0095
epoch: 7, CrossEntropy loss: 0.1110, accuracy: 96.178
test acc: 90.7300
step: 0, CrossEntropy loss: 0.0700 (0.0700), train accuracy: 97.656(97.656), lr: 0.0094
step: 100, CrossEntropy loss: 0.0822 (0.1030), train accuracy: 97.656(96.457), lr: 0.0094
step: 200, CrossEntropy loss: 0.1024 (0.1064), train accuracy: 96.094(96.292), lr: 0.0094
step: 300, CrossEntropy loss: 0.0628 (0.1053), train accuracy: 98.438(96.361), lr: 0.0094
epoch: 8, CrossEntropy loss: 0.1057, accuracy: 96.342
test acc: 91.2300
step: 0, CrossEntropy loss: 0.0854 (0.0854), train accuracy: 96.875(96.875), lr: 0.0092
step: 100, CrossEntropy loss: 0.0917 (0.0963), train accuracy: 98.438(96.774), lr: 0.0092
step: 200, CrossEntropy loss: 0.0808 (0.0970), train accuracy: 96.875(96.611), lr: 0.0092
step: 300, CrossEntropy loss: 0.0453 (0.0991), train accuracy: 97.656(96.488), lr: 0.0092
epoch: 9, CrossEntropy loss: 0.0998, accuracy: 96.492
test acc: 91.2300
step: 0, CrossEntropy loss: 0.0648 (0.0648), train accuracy: 98.438(98.438), lr: 0.0090
step: 100, CrossEntropy loss: 0.0729 (0.0892), train accuracy: 97.656(97.061), lr: 0.0090
step: 200, CrossEntropy loss: 0.1058 (0.0905), train accuracy: 96.875(96.887), lr: 0.0090
step: 300, CrossEntropy loss: 0.0743 (0.0923), train accuracy: 96.875(96.758), lr: 0.0090
epoch: 10, CrossEntropy loss: 0.0943, accuracy: 96.684
test acc: 91.2400
step: 0, CrossEntropy loss: 0.0771 (0.0771), train accuracy: 96.875(96.875), lr: 0.0089
step: 100, CrossEntropy loss: 0.1140 (0.0905), train accuracy: 96.094(96.883), lr: 0.0089
step: 200, CrossEntropy loss: 0.1287 (0.0898), train accuracy: 95.312(96.933), lr: 0.0089
step: 300, CrossEntropy loss: 0.1049 (0.0920), train accuracy: 96.875(96.904), lr: 0.0089
epoch: 11, CrossEntropy loss: 0.0936, accuracy: 96.820
test acc: 91.5600
step: 0, CrossEntropy loss: 0.1026 (0.1026), train accuracy: 96.094(96.094), lr: 0.0086
step: 100, CrossEntropy loss: 0.0949 (0.0844), train accuracy: 96.875(97.146), lr: 0.0086
step: 200, CrossEntropy loss: 0.0798 (0.0855), train accuracy: 98.438(97.089), lr: 0.0086
step: 300, CrossEntropy loss: 0.0995 (0.0880), train accuracy: 96.875(97.031), lr: 0.0086
epoch: 12, CrossEntropy loss: 0.0887, accuracy: 96.968
test acc: 91.2300
step: 0, CrossEntropy loss: 0.0588 (0.0588), train accuracy: 97.656(97.656), lr: 0.0084
step: 100, CrossEntropy loss: 0.0798 (0.0787), train accuracy: 95.312(97.262), lr: 0.0084
step: 200, CrossEntropy loss: 0.0747 (0.0841), train accuracy: 96.875(97.112), lr: 0.0084
step: 300, CrossEntropy loss: 0.1343 (0.0861), train accuracy: 95.312(97.080), lr: 0.0084
epoch: 13, CrossEntropy loss: 0.0875, accuracy: 96.982
test acc: 91.2500
step: 0, CrossEntropy loss: 0.0585 (0.0585), train accuracy: 97.656(97.656), lr: 0.0082
step: 100, CrossEntropy loss: 0.0763 (0.0778), train accuracy: 98.438(97.486), lr: 0.0082
step: 200, CrossEntropy loss: 0.0972 (0.0772), train accuracy: 96.094(97.404), lr: 0.0082
step: 300, CrossEntropy loss: 0.0361 (0.0802), train accuracy: 99.219(97.324), lr: 0.0082
epoch: 14, CrossEntropy loss: 0.0823, accuracy: 97.216
test acc: 91.4300
step: 0, CrossEntropy loss: 0.0939 (0.0939), train accuracy: 96.875(96.875), lr: 0.0079
step: 100, CrossEntropy loss: 0.1020 (0.0769), train accuracy: 96.094(97.347), lr: 0.0079
step: 200, CrossEntropy loss: 0.1160 (0.0780), train accuracy: 95.312(97.318), lr: 0.0079
step: 300, CrossEntropy loss: 0.0405 (0.0779), train accuracy: 100.000(97.345), lr: 0.0079
epoch: 15, CrossEntropy loss: 0.0787, accuracy: 97.350
test acc: 91.6700
step: 0, CrossEntropy loss: 0.0480 (0.0480), train accuracy: 98.438(98.438), lr: 0.0077
step: 100, CrossEntropy loss: 0.0939 (0.0719), train accuracy: 95.312(97.718), lr: 0.0077
step: 200, CrossEntropy loss: 0.0780 (0.0741), train accuracy: 97.656(97.621), lr: 0.0077
step: 300, CrossEntropy loss: 0.1013 (0.0760), train accuracy: 95.312(97.511), lr: 0.0077
epoch: 16, CrossEntropy loss: 0.0779, accuracy: 97.454
test acc: 90.8700
step: 0, CrossEntropy loss: 0.0959 (0.0959), train accuracy: 96.875(96.875), lr: 0.0074
step: 100, CrossEntropy loss: 0.1071 (0.0718), train accuracy: 97.656(97.734), lr: 0.0074
step: 200, CrossEntropy loss: 0.0870 (0.0718), train accuracy: 96.094(97.691), lr: 0.0074
step: 300, CrossEntropy loss: 0.0416 (0.0713), train accuracy: 98.438(97.659), lr: 0.0074
epoch: 17, CrossEntropy loss: 0.0734, accuracy: 97.526
test acc: 91.4600
step: 0, CrossEntropy loss: 0.0330 (0.0330), train accuracy: 99.219(99.219), lr: 0.0071
step: 100, CrossEntropy loss: 0.0698 (0.0691), train accuracy: 96.875(97.718), lr: 0.0071
step: 200, CrossEntropy loss: 0.0712 (0.0703), train accuracy: 99.219(97.680), lr: 0.0071
step: 300, CrossEntropy loss: 0.0653 (0.0690), train accuracy: 96.875(97.737), lr: 0.0071
epoch: 18, CrossEntropy loss: 0.0697, accuracy: 97.682
test acc: 91.3800
step: 0, CrossEntropy loss: 0.0643 (0.0643), train accuracy: 97.656(97.656), lr: 0.0068
step: 100, CrossEntropy loss: 0.0749 (0.0720), train accuracy: 97.656(97.540), lr: 0.0068
step: 200, CrossEntropy loss: 0.0661 (0.0670), train accuracy: 96.875(97.746), lr: 0.0068
step: 300, CrossEntropy loss: 0.0380 (0.0684), train accuracy: 99.219(97.726), lr: 0.0068
epoch: 19, CrossEntropy loss: 0.0688, accuracy: 97.654
test acc: 92.0100
step: 0, CrossEntropy loss: 0.0572 (0.0572), train accuracy: 97.656(97.656), lr: 0.0065
step: 100, CrossEntropy loss: 0.0679 (0.0603), train accuracy: 98.438(98.035), lr: 0.0065
step: 200, CrossEntropy loss: 0.0729 (0.0628), train accuracy: 98.438(98.041), lr: 0.0065
step: 300, CrossEntropy loss: 0.0310 (0.0629), train accuracy: 99.219(97.983), lr: 0.0065
epoch: 20, CrossEntropy loss: 0.0628, accuracy: 98.010
test acc: 92.0600
step: 0, CrossEntropy loss: 0.0981 (0.0981), train accuracy: 96.094(96.094), lr: 0.0062
step: 100, CrossEntropy loss: 0.0809 (0.0611), train accuracy: 97.656(97.950), lr: 0.0062
step: 200, CrossEntropy loss: 0.1005 (0.0606), train accuracy: 96.094(97.979), lr: 0.0062
step: 300, CrossEntropy loss: 0.0532 (0.0611), train accuracy: 98.438(98.007), lr: 0.0062
epoch: 21, CrossEntropy loss: 0.0619, accuracy: 97.974
test acc: 92.1700
step: 0, CrossEntropy loss: 0.0593 (0.0593), train accuracy: 96.875(96.875), lr: 0.0059
step: 100, CrossEntropy loss: 0.0569 (0.0567), train accuracy: 98.438(98.113), lr: 0.0059
step: 200, CrossEntropy loss: 0.0831 (0.0592), train accuracy: 97.656(98.076), lr: 0.0059
step: 300, CrossEntropy loss: 0.0748 (0.0589), train accuracy: 96.875(98.090), lr: 0.0059
epoch: 22, CrossEntropy loss: 0.0585, accuracy: 98.134
test acc: 91.9200
step: 0, CrossEntropy loss: 0.0624 (0.0624), train accuracy: 97.656(97.656), lr: 0.0056
step: 100, CrossEntropy loss: 0.0958 (0.0561), train accuracy: 96.875(98.097), lr: 0.0056
step: 200, CrossEntropy loss: 0.0700 (0.0575), train accuracy: 99.219(98.189), lr: 0.0056
step: 300, CrossEntropy loss: 0.0588 (0.0596), train accuracy: 96.875(98.077), lr: 0.0056
epoch: 23, CrossEntropy loss: 0.0586, accuracy: 98.084
test acc: 92.4900
step: 0, CrossEntropy loss: 0.0234 (0.0234), train accuracy: 100.000(100.000), lr: 0.0053
step: 100, CrossEntropy loss: 0.0534 (0.0488), train accuracy: 98.438(98.430), lr: 0.0053
step: 200, CrossEntropy loss: 0.0279 (0.0516), train accuracy: 99.219(98.298), lr: 0.0053
step: 300, CrossEntropy loss: 0.0624 (0.0522), train accuracy: 98.438(98.308), lr: 0.0053
epoch: 24, CrossEntropy loss: 0.0527, accuracy: 98.264
test acc: 92.2700
step: 0, CrossEntropy loss: 0.0619 (0.0619), train accuracy: 98.438(98.438), lr: 0.0050
step: 100, CrossEntropy loss: 0.0463 (0.0485), train accuracy: 98.438(98.554), lr: 0.0050
step: 200, CrossEntropy loss: 0.0803 (0.0501), train accuracy: 96.875(98.488), lr: 0.0050
step: 300, CrossEntropy loss: 0.0776 (0.0507), train accuracy: 97.656(98.427), lr: 0.0050
epoch: 25, CrossEntropy loss: 0.0500, accuracy: 98.468
test acc: 92.2800
step: 0, CrossEntropy loss: 0.0645 (0.0645), train accuracy: 97.656(97.656), lr: 0.0047
step: 100, CrossEntropy loss: 0.0384 (0.0448), train accuracy: 98.438(98.554), lr: 0.0047
step: 200, CrossEntropy loss: 0.0721 (0.0451), train accuracy: 96.875(98.589), lr: 0.0047
step: 300, CrossEntropy loss: 0.0148 (0.0463), train accuracy: 100.000(98.539), lr: 0.0047
epoch: 26, CrossEntropy loss: 0.0466, accuracy: 98.532
test acc: 92.3200
step: 0, CrossEntropy loss: 0.0652 (0.0652), train accuracy: 97.656(97.656), lr: 0.0044
step: 100, CrossEntropy loss: 0.0787 (0.0443), train accuracy: 97.656(98.708), lr: 0.0044
step: 200, CrossEntropy loss: 0.0277 (0.0447), train accuracy: 98.438(98.655), lr: 0.0044
step: 300, CrossEntropy loss: 0.0177 (0.0447), train accuracy: 100.000(98.645), lr: 0.0044
epoch: 27, CrossEntropy loss: 0.0456, accuracy: 98.612
test acc: 92.3000
step: 0, CrossEntropy loss: 0.0664 (0.0664), train accuracy: 97.656(97.656), lr: 0.0041
step: 100, CrossEntropy loss: 0.0123 (0.0411), train accuracy: 100.000(98.840), lr: 0.0041
step: 200, CrossEntropy loss: 0.0345 (0.0406), train accuracy: 99.219(98.842), lr: 0.0041
step: 300, CrossEntropy loss: 0.0261 (0.0406), train accuracy: 99.219(98.855), lr: 0.0041
epoch: 28, CrossEntropy loss: 0.0411, accuracy: 98.814
test acc: 92.2600
step: 0, CrossEntropy loss: 0.0527 (0.0527), train accuracy: 97.656(97.656), lr: 0.0038
step: 100, CrossEntropy loss: 0.0609 (0.0404), train accuracy: 98.438(98.731), lr: 0.0038
step: 200, CrossEntropy loss: 0.0166 (0.0407), train accuracy: 100.000(98.745), lr: 0.0038
step: 300, CrossEntropy loss: 0.0419 (0.0408), train accuracy: 99.219(98.731), lr: 0.0038
epoch: 29, CrossEntropy loss: 0.0410, accuracy: 98.734
test acc: 92.2900
step: 0, CrossEntropy loss: 0.0136 (0.0136), train accuracy: 100.000(100.000), lr: 0.0035
step: 100, CrossEntropy loss: 0.0416 (0.0333), train accuracy: 98.438(99.141), lr: 0.0035
step: 200, CrossEntropy loss: 0.0327 (0.0356), train accuracy: 99.219(98.997), lr: 0.0035
step: 300, CrossEntropy loss: 0.0171 (0.0357), train accuracy: 100.000(99.003), lr: 0.0035
epoch: 30, CrossEntropy loss: 0.0364, accuracy: 98.964
test acc: 92.6100
step: 0, CrossEntropy loss: 0.0426 (0.0426), train accuracy: 98.438(98.438), lr: 0.0032
step: 100, CrossEntropy loss: 0.0203 (0.0326), train accuracy: 100.000(99.049), lr: 0.0032
step: 200, CrossEntropy loss: 0.0419 (0.0336), train accuracy: 99.219(99.040), lr: 0.0032
step: 300, CrossEntropy loss: 0.0422 (0.0339), train accuracy: 97.656(99.021), lr: 0.0032
epoch: 31, CrossEntropy loss: 0.0337, accuracy: 99.024
test acc: 92.5400
step: 0, CrossEntropy loss: 0.0269 (0.0269), train accuracy: 99.219(99.219), lr: 0.0029
step: 100, CrossEntropy loss: 0.0129 (0.0332), train accuracy: 100.000(99.087), lr: 0.0029
step: 200, CrossEntropy loss: 0.0277 (0.0330), train accuracy: 98.438(99.063), lr: 0.0029
step: 300, CrossEntropy loss: 0.0291 (0.0353), train accuracy: 100.000(98.954), lr: 0.0029
epoch: 32, CrossEntropy loss: 0.0352, accuracy: 98.976
test acc: 92.5900
step: 0, CrossEntropy loss: 0.0121 (0.0121), train accuracy: 100.000(100.000), lr: 0.0026
step: 100, CrossEntropy loss: 0.0387 (0.0325), train accuracy: 99.219(99.103), lr: 0.0026
step: 200, CrossEntropy loss: 0.0181 (0.0328), train accuracy: 100.000(99.114), lr: 0.0026
step: 300, CrossEntropy loss: 0.0445 (0.0329), train accuracy: 97.656(99.107), lr: 0.0026
epoch: 33, CrossEntropy loss: 0.0329, accuracy: 99.100
test acc: 92.3100
step: 0, CrossEntropy loss: 0.0492 (0.0492), train accuracy: 99.219(99.219), lr: 0.0023
step: 100, CrossEntropy loss: 0.0467 (0.0295), train accuracy: 98.438(99.188), lr: 0.0023
step: 200, CrossEntropy loss: 0.0232 (0.0305), train accuracy: 100.000(99.153), lr: 0.0023
step: 300, CrossEntropy loss: 0.0373 (0.0302), train accuracy: 98.438(99.164), lr: 0.0023
epoch: 34, CrossEntropy loss: 0.0308, accuracy: 99.152
test acc: 92.5500
step: 0, CrossEntropy loss: 0.0294 (0.0294), train accuracy: 99.219(99.219), lr: 0.0021
step: 100, CrossEntropy loss: 0.0325 (0.0312), train accuracy: 97.656(99.141), lr: 0.0021
step: 200, CrossEntropy loss: 0.0417 (0.0282), train accuracy: 97.656(99.269), lr: 0.0021
step: 300, CrossEntropy loss: 0.0554 (0.0279), train accuracy: 98.438(99.258), lr: 0.0021
epoch: 35, CrossEntropy loss: 0.0286, accuracy: 99.234
test acc: 92.5400
step: 0, CrossEntropy loss: 0.0314 (0.0314), train accuracy: 98.438(98.438), lr: 0.0018
step: 100, CrossEntropy loss: 0.0204 (0.0302), train accuracy: 100.000(99.226), lr: 0.0018
step: 200, CrossEntropy loss: 0.0646 (0.0296), train accuracy: 98.438(99.238), lr: 0.0018
step: 300, CrossEntropy loss: 0.0191 (0.0287), train accuracy: 99.219(99.273), lr: 0.0018
epoch: 36, CrossEntropy loss: 0.0281, accuracy: 99.288
test acc: 92.5800
step: 0, CrossEntropy loss: 0.0243 (0.0243), train accuracy: 99.219(99.219), lr: 0.0016
step: 100, CrossEntropy loss: 0.0297 (0.0257), train accuracy: 99.219(99.366), lr: 0.0016
step: 200, CrossEntropy loss: 0.0290 (0.0246), train accuracy: 99.219(99.433), lr: 0.0016
step: 300, CrossEntropy loss: 0.0424 (0.0248), train accuracy: 98.438(99.429), lr: 0.0016
epoch: 37, CrossEntropy loss: 0.0252, accuracy: 99.418
test acc: 92.6500
step: 0, CrossEntropy loss: 0.0238 (0.0238), train accuracy: 100.000(100.000), lr: 0.0014
step: 100, CrossEntropy loss: 0.0353 (0.0246), train accuracy: 98.438(99.435), lr: 0.0014
step: 200, CrossEntropy loss: 0.0297 (0.0254), train accuracy: 100.000(99.409), lr: 0.0014
step: 300, CrossEntropy loss: 0.0197 (0.0259), train accuracy: 100.000(99.372), lr: 0.0014
epoch: 38, CrossEntropy loss: 0.0254, accuracy: 99.390
test acc: 92.6300
step: 0, CrossEntropy loss: 0.0137 (0.0137), train accuracy: 100.000(100.000), lr: 0.0012
step: 100, CrossEntropy loss: 0.0519 (0.0271), train accuracy: 98.438(99.242), lr: 0.0012
step: 200, CrossEntropy loss: 0.0181 (0.0260), train accuracy: 100.000(99.335), lr: 0.0012
step: 300, CrossEntropy loss: 0.0151 (0.0261), train accuracy: 100.000(99.336), lr: 0.0012
epoch: 39, CrossEntropy loss: 0.0261, accuracy: 99.322
test acc: 92.8200
step: 0, CrossEntropy loss: 0.0114 (0.0114), train accuracy: 100.000(100.000), lr: 0.0010
step: 100, CrossEntropy loss: 0.0147 (0.0255), train accuracy: 100.000(99.435), lr: 0.0010
step: 200, CrossEntropy loss: 0.0291 (0.0248), train accuracy: 100.000(99.413), lr: 0.0010
step: 300, CrossEntropy loss: 0.0191 (0.0242), train accuracy: 100.000(99.429), lr: 0.0010
epoch: 40, CrossEntropy loss: 0.0243, accuracy: 99.436
test acc: 92.7000
step: 0, CrossEntropy loss: 0.0294 (0.0294), train accuracy: 99.219(99.219), lr: 0.0008
step: 100, CrossEntropy loss: 0.0235 (0.0237), train accuracy: 100.000(99.459), lr: 0.0008
step: 200, CrossEntropy loss: 0.0121 (0.0241), train accuracy: 100.000(99.417), lr: 0.0008
step: 300, CrossEntropy loss: 0.0212 (0.0240), train accuracy: 99.219(99.416), lr: 0.0008
epoch: 41, CrossEntropy loss: 0.0242, accuracy: 99.404
test acc: 92.7400
step: 0, CrossEntropy loss: 0.0137 (0.0137), train accuracy: 100.000(100.000), lr: 0.0006
step: 100, CrossEntropy loss: 0.0086 (0.0238), train accuracy: 100.000(99.497), lr: 0.0006
step: 200, CrossEntropy loss: 0.0277 (0.0241), train accuracy: 99.219(99.464), lr: 0.0006
step: 300, CrossEntropy loss: 0.0140 (0.0231), train accuracy: 100.000(99.489), lr: 0.0006
epoch: 42, CrossEntropy loss: 0.0229, accuracy: 99.496
test acc: 92.8300
step: 0, CrossEntropy loss: 0.0292 (0.0292), train accuracy: 99.219(99.219), lr: 0.0005
step: 100, CrossEntropy loss: 0.0123 (0.0229), train accuracy: 100.000(99.373), lr: 0.0005
step: 200, CrossEntropy loss: 0.0152 (0.0227), train accuracy: 100.000(99.440), lr: 0.0005
step: 300, CrossEntropy loss: 0.0320 (0.0236), train accuracy: 99.219(99.426), lr: 0.0005
epoch: 43, CrossEntropy loss: 0.0227, accuracy: 99.480
test acc: 92.8900
step: 0, CrossEntropy loss: 0.0321 (0.0321), train accuracy: 99.219(99.219), lr: 0.0004
step: 100, CrossEntropy loss: 0.0246 (0.0229), train accuracy: 100.000(99.404), lr: 0.0004
step: 200, CrossEntropy loss: 0.0061 (0.0226), train accuracy: 100.000(99.436), lr: 0.0004
step: 300, CrossEntropy loss: 0.0200 (0.0226), train accuracy: 100.000(99.465), lr: 0.0004
epoch: 44, CrossEntropy loss: 0.0224, accuracy: 99.464
test acc: 92.9100
step: 0, CrossEntropy loss: 0.0140 (0.0140), train accuracy: 100.000(100.000), lr: 0.0003
step: 100, CrossEntropy loss: 0.0208 (0.0235), train accuracy: 100.000(99.474), lr: 0.0003
step: 200, CrossEntropy loss: 0.0679 (0.0225), train accuracy: 98.438(99.495), lr: 0.0003
step: 300, CrossEntropy loss: 0.0145 (0.0222), train accuracy: 100.000(99.515), lr: 0.0003
epoch: 45, CrossEntropy loss: 0.0219, accuracy: 99.528
test acc: 92.8800
step: 0, CrossEntropy loss: 0.0151 (0.0151), train accuracy: 100.000(100.000), lr: 0.0002
step: 100, CrossEntropy loss: 0.0238 (0.0208), train accuracy: 99.219(99.559), lr: 0.0002
step: 200, CrossEntropy loss: 0.0269 (0.0227), train accuracy: 100.000(99.479), lr: 0.0002
step: 300, CrossEntropy loss: 0.0204 (0.0224), train accuracy: 99.219(99.502), lr: 0.0002
epoch: 46, CrossEntropy loss: 0.0221, accuracy: 99.494
test acc: 92.9300
step: 0, CrossEntropy loss: 0.0304 (0.0304), train accuracy: 98.438(98.438), lr: 0.0001
step: 100, CrossEntropy loss: 0.0147 (0.0207), train accuracy: 100.000(99.513), lr: 0.0001
step: 200, CrossEntropy loss: 0.0105 (0.0209), train accuracy: 100.000(99.514), lr: 0.0001
step: 300, CrossEntropy loss: 0.0234 (0.0212), train accuracy: 99.219(99.494), lr: 0.0001
epoch: 47, CrossEntropy loss: 0.0219, accuracy: 99.452
test acc: 92.8800
step: 0, CrossEntropy loss: 0.0345 (0.0345), train accuracy: 99.219(99.219), lr: 0.0000
step: 100, CrossEntropy loss: 0.0123 (0.0199), train accuracy: 100.000(99.575), lr: 0.0000
step: 200, CrossEntropy loss: 0.0099 (0.0200), train accuracy: 100.000(99.565), lr: 0.0000
step: 300, CrossEntropy loss: 0.0216 (0.0207), train accuracy: 99.219(99.535), lr: 0.0000
epoch: 48, CrossEntropy loss: 0.0212, accuracy: 99.496
test acc: 92.9200
step: 0, CrossEntropy loss: 0.0521 (0.0521), train accuracy: 98.438(98.438), lr: 0.0000
step: 100, CrossEntropy loss: 0.0134 (0.0205), train accuracy: 100.000(99.551), lr: 0.0000
step: 200, CrossEntropy loss: 0.0138 (0.0205), train accuracy: 100.000(99.580), lr: 0.0000
step: 300, CrossEntropy loss: 0.0189 (0.0208), train accuracy: 100.000(99.567), lr: 0.0000
epoch: 49, CrossEntropy loss: 0.0210, accuracy: 99.572
test acc: 92.9700
ln structured pruning testing >>>>>>>>>>>>>>>>>>>>>>>>
order: 2
model sum:  -1111.3250433802605
before pruning, train loss: 0.0031, train acc: 99.9680, test accuracy: 94.2900
start pruning module.conv1, num of channels: 16
tensor([ 3, 12, 10,  7, 15,  2,  9,  8], device='cuda:0')
time: 0.0026s
start pruning module.layer1.0.conv1, num of channels: 16
tensor([ 5, 10, 14,  4, 11,  8,  7,  0], device='cuda:0')
time: 0.0014s
start pruning module.layer1.0.conv2, num of channels: 16
tensor([ 9,  1, 14, 11,  4, 12,  5,  6], device='cuda:0')
time: 0.0014s
start pruning module.layer1.0.conv3, num of channels: 64
tensor([13,  8, 26, 63, 54, 34,  5, 28, 50, 52, 41, 27, 44, 25, 59, 48, 10, 29,
        19, 37,  1, 55, 43, 11, 38, 57, 18, 22, 60, 33, 42,  3],
       device='cuda:0')
time: 0.0019s
start pruning module.layer1.0.downsample.0, num of channels: 64
tensor([26,  5,  1, 34, 27, 28, 48, 41, 63, 44, 54, 52, 50, 25, 59,  8, 10, 29,
        43, 13, 37, 55, 11, 19, 33, 18, 38, 22, 42, 57, 32, 60],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.1.conv1, num of channels: 16
tensor([14,  3, 10,  8,  6,  5,  7,  2], device='cuda:0')
time: 0.0008s
start pruning module.layer1.1.conv2, num of channels: 16
tensor([ 4, 12,  3, 13, 14,  0,  1, 15], device='cuda:0')
time: 0.0008s
start pruning module.layer1.1.conv3, num of channels: 64
tensor([53, 26, 28,  5, 44, 27,  8, 41, 34, 48, 63, 13, 10,  1, 15, 52, 50, 54,
        11, 25, 29, 37, 55, 59, 43, 35, 19, 18, 57, 38, 47,  2],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.2.conv1, num of channels: 16
tensor([14,  1, 11, 13,  9,  3,  0,  2], device='cuda:0')
time: 0.0007s
start pruning module.layer1.2.conv2, num of channels: 16
tensor([ 2,  1, 13,  3,  6,  4,  9, 10], device='cuda:0')
time: 0.0008s
start pruning module.layer1.2.conv3, num of channels: 64
tensor([53, 48, 63, 26, 27,  5, 41, 52, 28, 44, 34, 25, 50,  1, 21, 15, 54, 43,
        55, 51, 37, 59, 13, 10,  8, 29, 11, 23, 57, 18, 19, 56],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.3.conv1, num of channels: 16
tensor([11,  6,  1,  3,  8,  0,  7, 12], device='cuda:0')
time: 0.0008s
start pruning module.layer1.3.conv2, num of channels: 16
tensor([11,  6,  9,  8,  5,  2, 15,  1], device='cuda:0')
time: 0.0007s
start pruning module.layer1.3.conv3, num of channels: 64
tensor([ 5, 26, 63,  1, 34, 48, 13, 29, 41, 52, 28, 59, 53, 10, 15, 39,  8, 37,
        54, 27, 44, 11, 51, 25, 21, 23, 50, 55, 43, 22, 18, 14],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.4.conv1, num of channels: 16
tensor([ 7,  8, 14,  0, 12,  3,  2,  5], device='cuda:0')
time: 0.0007s
start pruning module.layer1.4.conv2, num of channels: 16
tensor([13,  8,  1, 10, 12,  9, 14,  3], device='cuda:0')
time: 0.0008s
start pruning module.layer1.4.conv3, num of channels: 64
tensor([27, 48, 20, 49, 57, 16, 56, 62, 61, 14, 55,  1, 51, 15,  0, 22, 32, 58,
        29, 10,  6, 18, 42, 44, 30,  7, 37, 12, 28,  2, 59, 38],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.5.conv1, num of channels: 16
tensor([13,  4,  3, 11,  7,  1, 14,  6], device='cuda:0')
time: 0.0007s
start pruning module.layer1.5.conv2, num of channels: 16
tensor([ 4,  0,  3,  1,  9,  8, 14, 12], device='cuda:0')
time: 0.0007s
start pruning module.layer1.5.conv3, num of channels: 64
tensor([30, 57, 49, 36, 14, 20, 22, 17, 39,  2, 12, 33, 18, 61,  5, 32,  4, 58,
        42, 38,  3,  9, 27, 47, 56, 25, 19, 10, 13, 23, 41, 21],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.6.conv1, num of channels: 16
tensor([11, 15,  2,  5,  0, 14,  9, 13], device='cuda:0')
time: 0.0007s
start pruning module.layer1.6.conv2, num of channels: 16
tensor([ 9,  7, 12,  2,  4,  5, 15,  6], device='cuda:0')
time: 0.0007s
start pruning module.layer1.6.conv3, num of channels: 64
tensor([27, 36, 49, 23, 61, 18, 42, 48, 14, 25, 45,  6,  3, 10, 17, 22, 41, 58,
        53, 28, 20,  5, 62, 39, 21, 26, 59, 40, 47, 56, 11, 50],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.7.conv1, num of channels: 16
tensor([ 7, 12,  2,  3,  1, 15,  6, 13], device='cuda:0')
time: 0.0007s
start pruning module.layer1.7.conv2, num of channels: 16
tensor([ 1,  6,  5, 12,  8,  3, 15, 10], device='cuda:0')
time: 0.0008s
start pruning module.layer1.7.conv3, num of channels: 64
tensor([47,  0, 61, 12, 33, 31, 30, 20,  9, 49, 60, 40, 58, 46,  2, 17,  6, 27,
        18, 45, 36,  3, 32, 14, 16, 42, 11, 38, 24, 56,  5, 35],
       device='cuda:0')
time: 0.0012s
start pruning module.layer1.8.conv1, num of channels: 16
tensor([14,  0, 12,  9,  7,  6,  1, 10], device='cuda:0')
time: 0.0007s
start pruning module.layer1.8.conv2, num of channels: 16
tensor([10,  3,  1,  6,  9, 14, 15,  2], device='cuda:0')
time: 0.0007s
start pruning module.layer1.8.conv3, num of channels: 64
tensor([40, 61, 20,  2, 10,  3, 18, 17, 26, 25, 51, 45,  6, 42, 60,  5, 14, 46,
        31, 29,  9, 27,  4, 23, 43, 21, 41, 63, 34, 50, 48, 57],
       device='cuda:0')
time: 0.0012s
start pruning module.layer2.0.conv1, num of channels: 32
tensor([21, 24, 15,  5, 26, 23,  0, 30, 10,  1, 19, 29,  7, 25, 14, 18],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.0.conv2, num of channels: 32
tensor([ 2, 11, 26, 25, 30, 21, 20, 13, 12, 16, 31, 17,  8,  6,  5,  4],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.0.conv3, num of channels: 128
tensor([  9,  58,  52, 126,  79,   4,  11, 106,  98,  23,  70, 124,  48,  38,
         87,  96,  84,  10,   1,  86,  27,  78,   5,  35, 120,  54, 122, 101,
          7,  71,  73,  17, 110,  33, 123,  45, 103, 117,  24, 105,  12, 125,
         22, 114,   0,  44,   8, 102,  21,  53, 104,  83,  29,  62,  49,  69,
         97,  61, 113,  51,  90,  74,  26,  89], device='cuda:0')
time: 0.0019s
start pruning module.layer2.0.downsample.0, num of channels: 128
tensor([ 79,  29,  70,  35,  48, 124,  21,   1,  26, 102,  62,  83,  96, 116,
         28, 104,  56,  22,  49,  93,  90,   4,  51,  71,  11, 125,  23, 103,
         42,  19,   0, 120,  61,  59,  82,  69,  60, 110,  17,  98,  45,   5,
        114, 105,  74,   7,  10,  38,  37,  46, 106, 126, 122,  84, 101,  78,
         65,  24,  39, 109,  97,  87,  27,  54], device='cuda:0')
time: 0.0018s
start pruning module.layer2.1.conv1, num of channels: 32
tensor([ 5, 31, 27,  2,  0, 30,  7, 16, 13, 28, 15, 10, 12, 24,  1, 23],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.1.conv2, num of channels: 32
tensor([22, 19, 30, 23, 25,  4,  6,  5, 17, 11, 28,  9, 12, 20,  2,  3],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.1.conv3, num of channels: 128
tensor([111,  60,  88,  72,  28,  61,  80,  94,  37,  40,  97, 120, 102,  82,
        123, 112,   8, 121, 116, 109,  17,  39,  31,  19,  89,  13,  59,  21,
         64,  44,  14,  26,  73,  45,  93, 125, 118, 104,  49,  27,  54, 105,
          0,  24,  56,  29, 114,  75,  22,  67,  18,  74,  91,  12, 107, 126,
         62,  32,  69,   9,  83,   1,  50,  84], device='cuda:0')
time: 0.0018s
start pruning module.layer2.2.conv1, num of channels: 32
tensor([20, 27, 26, 24, 12, 15, 10,  2, 21,  0,  9, 14, 23, 19, 22, 31],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.2.conv2, num of channels: 32
tensor([16, 12,  3, 19, 18, 29, 13,  8, 27,  4, 25,  6, 14,  5, 31, 17],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.2.conv3, num of channels: 128
tensor([102,  19,  79,  61,  93,  64,  72,  13,  71,   5, 123,   8,  28,  11,
         52, 112, 106,  94, 126,  43,  59, 117,  40,  95,  48, 111,  21,  27,
         33,  97,  39,  37,   0,  89,  73,  31,  88, 121,  49, 109,  10,  14,
        101,  60,  38,  44,  54, 120,  92,  16,  62,  83,  63,  80,  23,  29,
        113,  84, 118, 107, 110,   9,  91,  65], device='cuda:0')
time: 0.0018s
start pruning module.layer2.3.conv1, num of channels: 32
tensor([24, 26, 18,  9, 19,  2, 31, 13,  4, 29,  7, 28,  8, 12, 16, 10],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.3.conv2, num of channels: 32
tensor([ 8,  1,  3, 28,  5, 25,  2, 12,  9, 30, 21,  4, 24, 19, 27, 23],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.3.conv3, num of channels: 128
tensor([ 44, 112,  82,  65,  72,  80,   3,  60,  88,   0, 108,  95, 118,  13,
        116,  63,  18,  40,  45, 111,  64,  66,  97,  28,  56,  92, 109,  31,
        120,  89,   8,  29,  67,  27,  74, 105,  73,  38,  75,  84,  79, 121,
          9,  59,  52, 119, 114,  69,   1,  21,  91, 102,  17,  43, 122,  57,
        124,  93,  94,  51,  42,  62,  35,  70], device='cuda:0')
time: 0.0018s
start pruning module.layer2.4.conv1, num of channels: 32
tensor([ 8, 22, 29, 24, 16, 23, 14,  1, 11, 15, 30,  6,  4, 25, 17, 27],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.4.conv2, num of channels: 32
tensor([11,  7, 27, 16, 13,  1, 12, 23,  8, 15, 18, 17, 30, 31, 22, 24],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.4.conv3, num of channels: 128
tensor([ 40,  46,  69,  18,  29,  51,  92,  26, 111, 125,  78,  63,  90,   7,
         42, 124,  95,  37, 112, 120,  94,  60, 122,  59, 121,  77,  73,  80,
        101,  10, 123,  56,  97,   2,  43,  33, 110,  34, 108,  21,  27,  67,
         54, 118, 105, 113,  32, 119,  17,  61,  91,  66,  28,  88,  23,  13,
          3,  93,  47,  75,  39,   8,  84,  24], device='cuda:0')
time: 0.0018s
start pruning module.layer2.5.conv1, num of channels: 32
tensor([26, 11,  7, 21, 17, 12, 28, 20,  8, 30,  4, 13, 27, 23,  5, 14],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.5.conv2, num of channels: 32
tensor([12,  3, 10, 29, 26, 18, 14, 27, 11, 13, 21,  7, 25, 28, 23,  6],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.5.conv3, num of channels: 128
tensor([ 68,  98, 113, 101,  10,  52,   5, 126,  81, 117,  86,  53,  43,  33,
         73,  38,  11, 125, 119,  32,  47,  40,  63,  75,  34,   1,  21, 124,
         90,  25, 118,  54, 115,   2,  65,  95, 120,  57, 108,  26,  85,  66,
        110, 103,  23,  24,  96,  91, 123,   7, 106,  84,  27,  69,  78,  16,
         15, 104,  12,   4,  42,  79,  14,  44], device='cuda:0')
time: 0.0018s
start pruning module.layer2.6.conv1, num of channels: 32
tensor([27, 28,  4,  6, 24, 31, 20, 16, 29,  9,  5, 18, 19,  8, 12, 11],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.6.conv2, num of channels: 32
tensor([14,  9, 25, 29, 23,  1, 26, 20, 12, 16, 22,  3, 27, 28, 30, 17],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.6.conv3, num of channels: 128
tensor([126, 117,  68,  98,  81,  87,  31,  47,  96,  43, 123,  38, 108,  86,
         11,  78,  51,  90,  62,  75,  52,   5,  25,  17, 100,  61,  46,  66,
         91, 124, 115,  23,  65,  77, 103,  88, 107,  57,  21, 104,  54,   8,
        101,  55,  12,   6,  84, 110,  15,  99,  76, 120,  44,  74,  26,  39,
         50,  42,  67,  85,  60,  24,  33,   9], device='cuda:0')
time: 0.0019s
start pruning module.layer2.7.conv1, num of channels: 32
tensor([12, 20, 16, 13,  0, 19, 14,  9,  2,  6, 27, 10, 29, 23,  7,  3],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.7.conv2, num of channels: 32
tensor([ 1, 30, 31, 15, 17, 13, 11, 27, 21,  7, 22, 23, 16,  4, 20, 10],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.7.conv3, num of channels: 128
tensor([ 20, 127,  77,  25, 106,  64,  15,  36, 113,  53,  76,  41,  45,  71,
        103,  92,   2,  21,  22,   1,  32,  14, 104,  54,  66,  38, 100,  85,
         11, 101, 119,  74, 108,   5, 111,  55,  50,  31,   3,  63, 121,  49,
         78,   4, 109, 125,  97,  81,  67,  73,  23,  35,  75,  33,  28, 122,
         68,  69,  30,  59,  89,  16,  90,  44], device='cuda:0')
time: 0.0018s
start pruning module.layer2.8.conv1, num of channels: 32
tensor([18, 15, 17,  9, 10, 31,  6, 28, 23, 12, 30,  4, 21, 14, 19, 16],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.8.conv2, num of channels: 32
tensor([ 1,  0, 23, 31, 11,  8, 25, 13, 10,  4,  6, 17, 30,  7, 21, 16],
       device='cuda:0')
time: 0.0009s
start pruning module.layer2.8.conv3, num of channels: 128
tensor([ 36,   9,  55,  10,  85,  86,   6, 100,  81,  12,  76,  68,  30, 108,
         70,   3,  27,  24,  42,  48,  87,  99, 103,  31,  43, 113,  33, 110,
         89,  44,  17,  65, 104,  77,   5, 115,  13, 119,  45,  21,  25, 126,
        123, 107,  11, 120,  80, 106,  91,  16,  14, 118,  92,  38,  50, 117,
        105, 101,  19,  41,  22,  47,  67, 112], device='cuda:0')
time: 0.0018s
start pruning module.layer3.0.conv1, num of channels: 64
tensor([42, 22,  9, 52, 50, 58,  4, 59, 44, 32, 55,  5, 63, 57, 53, 26, 49, 37,
        43, 21, 38,  7, 10, 28, 35, 61, 30, 11, 56, 20, 47, 24],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.0.conv2, num of channels: 64
tensor([43, 29,  0,  8, 57, 24,  2, 30, 51, 39, 54,  9, 61, 52, 22, 16, 20, 23,
         1, 28, 45, 26, 41, 62, 46, 63, 60, 25, 19,  6, 37, 58],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.0.conv3, num of channels: 256
tensor([ 65,  76, 107,  40, 189,  92, 151, 183, 159,  56, 207, 248, 155, 234,
         87, 139,  21,   4, 251,  15, 212, 192, 101, 188, 190,  93, 104,  27,
         50,  13,  57, 164, 150,  37, 109,  83,  44,  88,  91, 255, 208, 154,
         16,  31,  99, 144,  68, 137, 125,  80, 130, 195, 200,  25,  97,  23,
         79, 175, 185, 219,  42, 163, 191, 232,  47, 133,  22,  55, 199, 140,
        177,   5, 113,  58, 110, 201, 100,   3, 122, 194, 117, 111, 218, 211,
         35, 197,  78, 179, 108,  45,  52,  73, 136,  20,  67,  46,  94, 124,
         48, 121,  36,  26,  49,   6,  60, 142, 141,  32,  59, 178, 143, 129,
        210,  69, 241,  82, 205, 148,  24, 225, 204,  85, 203, 215, 134,  19,
         84,  11], device='cuda:0')
time: 0.0031s
start pruning module.layer3.0.downsample.0, num of channels: 256
tensor([ 64, 255, 110,  89,  34,  38, 189,  65,  19,  35, 156,  33, 141, 155,
         53,  79, 130,  72,  36,  76,  12, 208,  52,  92, 166, 170, 212, 125,
         85,  27,  57, 216,  21,  66, 164, 136,  43,  15, 237,  11, 251, 100,
         25, 150, 147,  93,  70,   7, 129, 167, 187,   1, 101,  98,  91, 122,
          4,  60,  62,  77, 197, 234,  24, 248,   5, 175, 240, 163, 117, 232,
        246, 233, 109,  78, 165, 222,  37, 180, 140, 201,  96, 191,  31, 115,
         16,  47, 207,  90, 228, 185, 107,  42, 174,  23, 144,  83,   8,  97,
         44, 160,  80,  48, 235, 142, 118,  17, 182, 179,  40, 247, 111,  14,
        121, 195, 223, 127, 203, 159,   3, 139, 128,  13, 134, 104,  30,  59,
         67,  26], device='cuda:0')
time: 0.0030s
start pruning module.layer3.1.conv1, num of channels: 64
tensor([ 2, 52,  7, 32,  6, 24, 59, 42, 36, 29, 18, 12,  3, 26, 28, 31, 39, 51,
        58, 50, 35,  5, 13, 34, 62, 37, 21, 49,  1, 60, 57, 46],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.1.conv2, num of channels: 64
tensor([31,  1, 35,  4, 15,  6, 45, 20, 34, 25, 30, 33, 46, 38, 39, 55, 27, 40,
        13,  2, 61, 48, 42, 22, 18, 12, 23, 58, 36, 56, 16,  5],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.1.conv3, num of channels: 256
tensor([ 40,  11,  43, 178, 218, 231, 154,  49, 147, 122, 117, 232,  45, 221,
        199, 228, 247,  79, 240, 212,  52,  81,  78, 180,  27, 112, 155,  30,
        234,  34, 250, 111, 166,  65, 109, 249,   5,  89, 203,  28,  97, 104,
        121,  62,  53,  85, 179,  13, 107, 190, 106, 192, 202,  39, 100, 110,
          7,  20,  96, 187, 219,   6, 174, 194,   8, 116,  80, 227, 235, 136,
        210, 134, 246,  24,  70,  60,  95,  91, 114,   4,  64, 254, 198, 158,
         77, 255, 113, 242, 236, 163, 248, 171,   9,  16, 186, 191,  57,  25,
        181, 176,  90,  87, 244, 206, 152,  21,  88, 184, 230, 214, 135,  94,
        241, 164, 133, 209,  67, 197,  66, 150, 169, 132, 101, 153, 201,  10,
         29,  33], device='cuda:0')
time: 0.0030s
start pruning module.layer3.2.conv1, num of channels: 64
tensor([ 1, 34, 59, 10, 48, 17, 60,  9, 39, 51,  3, 38, 18,  0, 47, 45, 12, 13,
        31, 52, 25,  6, 44, 29,  7, 55, 49, 61, 26, 24,  2, 32],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.2.conv2, num of channels: 64
tensor([16, 48, 53,  7, 54,  9, 59, 57, 43, 32, 24, 50, 21,  0, 13, 35,  5, 60,
        27, 62, 25, 33, 34, 22, 10, 44, 49, 41, 47, 30, 56, 52],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.2.conv3, num of channels: 256
tensor([  1, 112, 175,  20, 148, 136,  39,   3, 199, 147, 110,  95,   5,  19,
        113,  56,  73,  64,  78, 108, 255, 135, 231, 107, 179, 251, 141, 205,
        216, 117,  92, 146, 122,  88,  59, 252,  52, 206, 170,  31, 201, 166,
         97,  16, 219, 115, 188, 245, 203, 232, 161, 155,  21,   0, 165, 106,
        153, 172,  89,  77,  45, 150, 247, 220,   6,  12,   7, 143, 225, 235,
        174, 254, 190, 109,  74, 133,  23,  29,  67, 160, 227,  80, 248,  94,
         17,  70,  91, 240, 189,   4,  60, 101,  32,  85,  62, 202, 131, 119,
        200,  43, 250, 116,  72, 163, 187, 249, 191,  46, 204, 129, 159, 237,
        156,  13,  25,  11,  38, 192, 132, 145,  75, 223, 103, 121,  35, 154,
        238,  54], device='cuda:0')
time: 0.0030s
start pruning module.layer3.3.conv1, num of channels: 64
tensor([50, 36,  6, 11, 37, 54, 47,  9, 20, 31, 34, 63, 13, 46, 62, 45, 58, 16,
        14, 60, 41, 19, 57, 29, 21,  7, 22, 43, 35, 23, 42, 39],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.3.conv2, num of channels: 64
tensor([29, 40, 45, 49, 17, 38, 63, 36, 41, 32, 30, 14,  8, 11, 62, 23, 55, 52,
        48,  5, 33,  3, 12, 21,  0, 46, 26, 25, 60, 59, 19, 57],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.3.conv3, num of channels: 256
tensor([ 42, 206, 115,   1, 213,  35, 148, 244,  94, 198, 117, 105, 205, 254,
        179,  20, 222,  41, 204, 208, 193, 112, 133, 124,  96, 223,   0, 227,
         75,  48,  29,  87, 238, 170,   7,  73,  93, 250,  10,  55,  65,  21,
        182, 251, 140,  52, 189,  64,  54, 146,  51, 212,  63, 236, 119, 171,
        191, 197, 108, 220,  78, 136, 130,  56, 194,  15,  85, 118, 160, 249,
         39, 121, 107,  86,  88,   9, 200,  31, 192, 230, 104, 195,  22,  79,
         25, 157, 145,  50, 113, 120, 175,  59, 196, 100,  60, 167, 162, 125,
        156, 176, 245, 185, 252, 241,  28,  27, 215, 181, 231,  80, 187,  34,
        172, 173, 141,  12,  57,  74, 188,  38, 201, 247,  77,  62, 110, 255,
        235,  47], device='cuda:0')
time: 0.0030s
start pruning module.layer3.4.conv1, num of channels: 64
tensor([31, 57, 10, 58, 42, 60, 51, 26,  1, 24,  3, 11, 41, 21, 40, 49, 50, 17,
        54, 36,  0, 22, 35, 61,  6, 20, 63,  2, 45, 39, 28, 56],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.4.conv2, num of channels: 64
tensor([ 2, 24, 35, 50, 46, 17, 38,  7,  3, 29, 58, 13, 27, 15, 59, 55,  1, 39,
        48, 57, 30, 11, 40,  0,  6, 21, 54, 26, 36, 28,  9,  8],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.4.conv3, num of channels: 256
tensor([ 34, 230,  45, 114, 115, 250, 238, 191, 189, 188, 170, 151, 117,   1,
         96, 210, 192, 220, 236, 203,  41,  93, 204,  86, 154, 177, 132,  75,
         11, 121,  74,  78,  85, 101, 149, 225, 146, 190, 140,  14,  60,  42,
        109, 179,  83, 241,  47,  56,  92, 147,  18, 105,  89,  98,  65, 215,
        112, 224,  29, 244, 233,  57, 100,  50, 228,  55,  27, 137, 198, 155,
          5, 235, 185,  17, 163,  21, 108,  77, 143, 129,   4, 202,  63,  35,
         40,  82, 134, 214, 247, 200,  20, 213,   8, 222,  53, 186, 217, 196,
         10,   7,  44, 180, 133, 219,  67, 237,  19, 130, 183, 206, 232, 131,
        216,  73, 242,  91,  51, 187, 231,  37,  26,  69, 159, 104, 205, 246,
        239,  80], device='cuda:0')
time: 0.0030s
start pruning module.layer3.5.conv1, num of channels: 64
tensor([ 1, 21, 61, 59, 16, 36, 54, 15, 34, 18, 43, 33, 63, 14, 30,  0, 41, 51,
        62, 45, 24, 57, 13, 38, 48, 27, 20,  8, 28, 31, 47, 22],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.5.conv2, num of channels: 64
tensor([60, 35, 18, 53, 33, 17, 29, 39, 58, 15, 50, 38,  9, 12, 14, 28, 59, 42,
        30, 13,  6,  5, 21, 54, 43, 24, 61,  3, 22, 20,  1, 56],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.5.conv3, num of channels: 256
tensor([ 20, 220, 190,  53,  34, 113,   2, 208,  76, 218,  37, 154,  89, 108,
        170,  45, 175,   1, 236,  40, 189, 230,  78, 146,  13,  93,  86, 207,
        114, 186, 211,  44,  74, 144, 234, 117, 159, 191, 202,  84, 245,  80,
         26,  35, 239,   7, 241, 120, 179,  48, 252,  42, 151,  75, 103, 210,
         61, 163,  71, 152,  43, 204,  52, 115,  96, 149, 136,  39, 122, 248,
        250, 137, 126,  82, 225,   6, 148, 131, 206,  88,  31, 150, 107,  98,
        223, 188,   3,  59, 132, 160, 106, 213,  87, 192, 195, 193,  63,  23,
        181, 198, 112, 130, 205, 247, 105,  56, 237,  58,  91, 244, 135, 203,
        214,  60, 174, 229,  11, 215, 183, 121,  57, 233, 217, 156, 235,  28,
        254,  10], device='cuda:0')
time: 0.0030s
start pruning module.layer3.6.conv1, num of channels: 64
tensor([22, 55, 34, 39, 12, 13, 28,  9, 57, 52, 23, 27, 58, 43, 47, 48, 40, 38,
        53, 61, 41,  4, 26, 60, 15, 35,  2, 54, 29, 18, 56, 62],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.6.conv2, num of channels: 64
tensor([17, 10, 53, 31, 51, 57,  0, 22, 28,  3, 23, 43, 60,  5, 61, 27,  2, 39,
        50, 16, 34, 19, 11, 14, 58, 15, 38, 26, 54, 59, 35,  6],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.6.conv3, num of channels: 256
tensor([120,  34,  45, 236, 190, 121,   1, 103, 193, 117, 218,  93, 240, 202,
         20,  37, 154,   2,  35,  21, 220, 152, 109,  80, 239, 179, 136, 114,
        168, 205, 115,  42, 126,  86, 166, 186,  53,   5,  58,  40, 183, 206,
        147,   6, 238,  87, 150, 108,  27, 210,  61,  71,  13, 105, 198, 146,
        149,  92, 189, 159, 245,   3, 111,  75,  96,   8,  82,  76,  49, 235,
         99, 112, 113, 175, 201,  48,  36, 173, 233, 221,  11, 243, 104, 211,
        140, 181, 234, 132,  89,   0, 157,  39,  77, 101,  23, 247,  85, 208,
        242,   7, 153,  25, 170, 204, 130, 188, 174, 226,  30,  47,  31, 203,
        225, 216, 180, 191, 209,   9,  14, 224,  91,  98, 207,  43, 222,  26,
        158,  68], device='cuda:0')
time: 0.0030s
start pruning module.layer3.7.conv1, num of channels: 64
tensor([46, 12, 27, 43, 58, 39, 45, 49, 41, 63,  9, 30, 42, 21, 33, 28, 16,  6,
        51, 38, 44, 55, 36, 10, 54, 11,  3, 32,  7, 40, 23, 37],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.7.conv2, num of channels: 64
tensor([30, 52, 25, 60, 15, 27, 59, 23, 24, 17, 50,  2, 51, 38, 57, 62, 55, 47,
         8, 54, 37,  4,  3, 40,  6, 61, 42, 56, 21,  7, 53, 31],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.7.conv3, num of channels: 256
tensor([ 34,   1, 117, 168,  43, 147,  20,  87,  85, 103, 205, 173, 245, 149,
        240,  53,  47, 104, 206, 126, 165, 174,   2,   5, 170,  78, 234, 179,
        222, 231, 204, 178, 142, 114,  45,   7,  35,  93, 188, 135, 252, 150,
         37, 153, 239, 220, 190,  42, 159, 244, 203, 199, 232,  74,  22, 108,
         86,  49, 120,  89, 148, 115,  80, 189, 140, 200, 166,  30, 158, 138,
          6, 226, 175, 236, 230, 109, 253, 132,   4, 152,  82,  92, 255,  32,
         27, 160, 134,  40,  13,  61,  10, 110, 157, 128, 212, 121,  58,  99,
        223, 151, 133, 218,  48, 241,  38,  73, 217,  90, 202,  81, 229, 106,
        191, 183, 180,  75,  97, 242, 214, 113, 112, 145,  59, 141,  65, 193,
        101, 125], device='cuda:0')
time: 0.0030s
start pruning module.layer3.8.conv1, num of channels: 64
tensor([15, 63, 55, 52, 37, 36, 35, 60, 13,  6, 61,  7, 12,  4, 20, 45, 39,  1,
        46, 51, 62,  3, 57, 26, 47, 44, 49, 31, 14, 24, 33, 25],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.8.conv2, num of channels: 64
tensor([16, 52, 32, 45, 48,  0, 36, 53, 58, 44, 57, 62, 56, 41, 24, 27, 14, 21,
        26, 39, 25, 54, 63,  8, 46, 50, 28, 49, 40, 33, 10, 61],
       device='cuda:0')
time: 0.0012s
start pruning module.layer3.8.conv3, num of channels: 256
tensor([ 96,  87,   7,  34, 148, 152,  29, 205, 170,  45, 255,  97,  57, 136,
        101,   1, 179,  93, 132,  30, 103,  38, 141, 218, 106, 245,  22, 168,
         52,   5,  37, 223, 247, 206,  27, 190, 158,  10, 114,  47, 122, 240,
        104, 253, 210,  28, 220, 178, 167, 145, 201,   8, 184, 182, 160,  43,
        180,  72,  95, 128,  35, 251, 221, 232,  65,  12, 118, 125,  78, 153,
        127, 112,  58,   4,  82, 163, 149, 117, 140,  49, 165,  40,  81, 214,
        208, 203, 115, 147,  33, 231, 200,  23,  54,  91, 213, 110, 242, 146,
        159,  63, 239,  53, 222, 135, 174, 183, 109,  64, 249,  62, 166, 164,
        155, 162,  20, 126, 226,  79, 191, 212,  42, 171, 217,  85, 113,  99,
         51,  25], device='cuda:0')
time: 0.0030s
Global sparsity: 49.47%
epoch: 0, train loss: 2.3169, train acc: 26.3800, test accuracy: 25.7000
step: 0, CrossEntropy loss: 1.0105 (1.0105), train accuracy: 70.312(70.312), lr: 0.0100
step: 100, CrossEntropy loss: 0.3915 (0.4457), train accuracy: 87.500(84.893), lr: 0.0100
step: 200, CrossEntropy loss: 0.2644 (0.3588), train accuracy: 88.281(87.737), lr: 0.0100
step: 300, CrossEntropy loss: 0.3157 (0.3202), train accuracy: 89.062(88.992), lr: 0.0100
epoch: 0, CrossEntropy loss: 0.3009, accuracy: 89.644
test acc: 89.3400
step: 0, CrossEntropy loss: 0.2593 (0.2593), train accuracy: 89.844(89.844), lr: 0.0100
step: 100, CrossEntropy loss: 0.2271 (0.1900), train accuracy: 91.406(93.410), lr: 0.0100
step: 200, CrossEntropy loss: 0.1711 (0.1888), train accuracy: 92.188(93.478), lr: 0.0100
step: 300, CrossEntropy loss: 0.1776 (0.1888), train accuracy: 94.531(93.527), lr: 0.0100
epoch: 1, CrossEntropy loss: 0.1873, accuracy: 93.540
test acc: 90.4800
step: 0, CrossEntropy loss: 0.1521 (0.1521), train accuracy: 95.312(95.312), lr: 0.0100
step: 100, CrossEntropy loss: 0.2044 (0.1621), train accuracy: 94.531(94.299), lr: 0.0100
step: 200, CrossEntropy loss: 0.1327 (0.1625), train accuracy: 95.312(94.271), lr: 0.0100
step: 300, CrossEntropy loss: 0.1122 (0.1610), train accuracy: 96.875(94.352), lr: 0.0100
epoch: 2, CrossEntropy loss: 0.1623, accuracy: 94.296
test acc: 90.9500
step: 0, CrossEntropy loss: 0.1486 (0.1486), train accuracy: 95.312(95.312), lr: 0.0099
step: 100, CrossEntropy loss: 0.1784 (0.1407), train accuracy: 95.312(95.142), lr: 0.0099
step: 200, CrossEntropy loss: 0.0960 (0.1407), train accuracy: 96.875(95.083), lr: 0.0099
step: 300, CrossEntropy loss: 0.1851 (0.1405), train accuracy: 93.750(95.074), lr: 0.0099
epoch: 3, CrossEntropy loss: 0.1423, accuracy: 95.044
test acc: 90.7800
step: 0, CrossEntropy loss: 0.0835 (0.0835), train accuracy: 97.656(97.656), lr: 0.0098
step: 100, CrossEntropy loss: 0.1873 (0.1251), train accuracy: 92.969(95.769), lr: 0.0098
step: 200, CrossEntropy loss: 0.1148 (0.1279), train accuracy: 95.312(95.639), lr: 0.0098
step: 300, CrossEntropy loss: 0.1559 (0.1302), train accuracy: 95.312(95.564), lr: 0.0098
epoch: 4, CrossEntropy loss: 0.1322, accuracy: 95.472
test acc: 91.2000
step: 0, CrossEntropy loss: 0.1407 (0.1407), train accuracy: 96.875(96.875), lr: 0.0098
step: 100, CrossEntropy loss: 0.1153 (0.1208), train accuracy: 95.312(95.862), lr: 0.0098
step: 200, CrossEntropy loss: 0.1604 (0.1193), train accuracy: 94.531(95.958), lr: 0.0098
step: 300, CrossEntropy loss: 0.1164 (0.1223), train accuracy: 97.656(95.850), lr: 0.0098
epoch: 5, CrossEntropy loss: 0.1238, accuracy: 95.776
test acc: 90.7600
step: 0, CrossEntropy loss: 0.1287 (0.1287), train accuracy: 96.875(96.875), lr: 0.0096
step: 100, CrossEntropy loss: 0.1216 (0.1065), train accuracy: 94.531(96.364), lr: 0.0096
step: 200, CrossEntropy loss: 0.0830 (0.1120), train accuracy: 97.656(96.206), lr: 0.0096
step: 300, CrossEntropy loss: 0.1007 (0.1154), train accuracy: 96.094(96.107), lr: 0.0096
epoch: 6, CrossEntropy loss: 0.1156, accuracy: 96.086
test acc: 91.2800
step: 0, CrossEntropy loss: 0.1223 (0.1223), train accuracy: 95.312(95.312), lr: 0.0095
step: 100, CrossEntropy loss: 0.0982 (0.1038), train accuracy: 96.094(96.442), lr: 0.0095
step: 200, CrossEntropy loss: 0.1316 (0.1059), train accuracy: 96.875(96.323), lr: 0.0095
step: 300, CrossEntropy loss: 0.1665 (0.1082), train accuracy: 95.312(96.286), lr: 0.0095
epoch: 7, CrossEntropy loss: 0.1089, accuracy: 96.278
test acc: 91.8200
step: 0, CrossEntropy loss: 0.1416 (0.1416), train accuracy: 95.312(95.312), lr: 0.0094
step: 100, CrossEntropy loss: 0.0817 (0.1017), train accuracy: 97.656(96.442), lr: 0.0094
step: 200, CrossEntropy loss: 0.0818 (0.1031), train accuracy: 96.875(96.420), lr: 0.0094
step: 300, CrossEntropy loss: 0.0848 (0.1039), train accuracy: 98.438(96.447), lr: 0.0094
epoch: 8, CrossEntropy loss: 0.1070, accuracy: 96.298
test acc: 91.8700
step: 0, CrossEntropy loss: 0.1509 (0.1509), train accuracy: 95.312(95.312), lr: 0.0092
step: 100, CrossEntropy loss: 0.1238 (0.1035), train accuracy: 95.312(96.272), lr: 0.0092
step: 200, CrossEntropy loss: 0.0998 (0.1019), train accuracy: 97.656(96.467), lr: 0.0092
step: 300, CrossEntropy loss: 0.0890 (0.1016), train accuracy: 97.656(96.434), lr: 0.0092
epoch: 9, CrossEntropy loss: 0.1024, accuracy: 96.410
test acc: 91.8900
step: 0, CrossEntropy loss: 0.0928 (0.0928), train accuracy: 96.094(96.094), lr: 0.0090
step: 100, CrossEntropy loss: 0.0560 (0.0971), train accuracy: 98.438(96.821), lr: 0.0090
step: 200, CrossEntropy loss: 0.0717 (0.0967), train accuracy: 97.656(96.696), lr: 0.0090
step: 300, CrossEntropy loss: 0.0533 (0.0988), train accuracy: 99.219(96.623), lr: 0.0090
epoch: 10, CrossEntropy loss: 0.1002, accuracy: 96.590
test acc: 91.5100
step: 0, CrossEntropy loss: 0.0661 (0.0661), train accuracy: 96.875(96.875), lr: 0.0089
step: 100, CrossEntropy loss: 0.1200 (0.0896), train accuracy: 92.969(96.844), lr: 0.0089
step: 200, CrossEntropy loss: 0.0921 (0.0926), train accuracy: 97.656(96.797), lr: 0.0089
step: 300, CrossEntropy loss: 0.1047 (0.0939), train accuracy: 95.312(96.795), lr: 0.0089
epoch: 11, CrossEntropy loss: 0.0958, accuracy: 96.698
test acc: 91.4100
step: 0, CrossEntropy loss: 0.0672 (0.0672), train accuracy: 97.656(97.656), lr: 0.0086
step: 100, CrossEntropy loss: 0.1194 (0.0850), train accuracy: 96.094(97.169), lr: 0.0086
step: 200, CrossEntropy loss: 0.0891 (0.0853), train accuracy: 97.656(97.065), lr: 0.0086
step: 300, CrossEntropy loss: 0.1457 (0.0854), train accuracy: 96.875(97.106), lr: 0.0086
epoch: 12, CrossEntropy loss: 0.0876, accuracy: 97.046
test acc: 91.6900
step: 0, CrossEntropy loss: 0.0788 (0.0788), train accuracy: 96.875(96.875), lr: 0.0084
step: 100, CrossEntropy loss: 0.0438 (0.0763), train accuracy: 97.656(97.393), lr: 0.0084
step: 200, CrossEntropy loss: 0.0963 (0.0808), train accuracy: 97.656(97.279), lr: 0.0084
step: 300, CrossEntropy loss: 0.1234 (0.0838), train accuracy: 96.875(97.150), lr: 0.0084
epoch: 13, CrossEntropy loss: 0.0847, accuracy: 97.126
test acc: 91.6700
step: 0, CrossEntropy loss: 0.0759 (0.0759), train accuracy: 97.656(97.656), lr: 0.0082
step: 100, CrossEntropy loss: 0.0550 (0.0784), train accuracy: 98.438(97.432), lr: 0.0082
step: 200, CrossEntropy loss: 0.0757 (0.0803), train accuracy: 97.656(97.283), lr: 0.0082
step: 300, CrossEntropy loss: 0.0728 (0.0818), train accuracy: 98.438(97.220), lr: 0.0082
epoch: 14, CrossEntropy loss: 0.0846, accuracy: 97.132
test acc: 91.7900
step: 0, CrossEntropy loss: 0.0643 (0.0643), train accuracy: 99.219(99.219), lr: 0.0079
step: 100, CrossEntropy loss: 0.0658 (0.0801), train accuracy: 97.656(97.386), lr: 0.0079
step: 200, CrossEntropy loss: 0.0492 (0.0775), train accuracy: 99.219(97.415), lr: 0.0079
step: 300, CrossEntropy loss: 0.0897 (0.0786), train accuracy: 97.656(97.392), lr: 0.0079
epoch: 15, CrossEntropy loss: 0.0797, accuracy: 97.370
test acc: 91.9800
step: 0, CrossEntropy loss: 0.1019 (0.1019), train accuracy: 96.094(96.094), lr: 0.0077
step: 100, CrossEntropy loss: 0.1144 (0.0760), train accuracy: 96.094(97.548), lr: 0.0077
step: 200, CrossEntropy loss: 0.0710 (0.0743), train accuracy: 99.219(97.555), lr: 0.0077
step: 300, CrossEntropy loss: 0.0609 (0.0729), train accuracy: 99.219(97.591), lr: 0.0077
epoch: 16, CrossEntropy loss: 0.0744, accuracy: 97.524
test acc: 91.5100
step: 0, CrossEntropy loss: 0.0324 (0.0324), train accuracy: 100.000(100.000), lr: 0.0074
step: 100, CrossEntropy loss: 0.1187 (0.0697), train accuracy: 95.312(97.834), lr: 0.0074
step: 200, CrossEntropy loss: 0.0789 (0.0712), train accuracy: 98.438(97.757), lr: 0.0074
step: 300, CrossEntropy loss: 0.0691 (0.0706), train accuracy: 96.875(97.693), lr: 0.0074
epoch: 17, CrossEntropy loss: 0.0730, accuracy: 97.596
test acc: 91.8100
step: 0, CrossEntropy loss: 0.0511 (0.0511), train accuracy: 99.219(99.219), lr: 0.0071
step: 100, CrossEntropy loss: 0.0598 (0.0685), train accuracy: 97.656(97.780), lr: 0.0071
step: 200, CrossEntropy loss: 0.0383 (0.0700), train accuracy: 99.219(97.730), lr: 0.0071
step: 300, CrossEntropy loss: 0.0659 (0.0719), train accuracy: 96.875(97.623), lr: 0.0071
epoch: 18, CrossEntropy loss: 0.0742, accuracy: 97.510
test acc: 92.1400
step: 0, CrossEntropy loss: 0.0753 (0.0753), train accuracy: 97.656(97.656), lr: 0.0068
step: 100, CrossEntropy loss: 0.0497 (0.0625), train accuracy: 98.438(97.850), lr: 0.0068
step: 200, CrossEntropy loss: 0.0696 (0.0648), train accuracy: 97.656(97.835), lr: 0.0068
step: 300, CrossEntropy loss: 0.0851 (0.0654), train accuracy: 97.656(97.791), lr: 0.0068
epoch: 19, CrossEntropy loss: 0.0682, accuracy: 97.700
test acc: 92.1800
step: 0, CrossEntropy loss: 0.0254 (0.0254), train accuracy: 99.219(99.219), lr: 0.0065
step: 100, CrossEntropy loss: 0.0284 (0.0583), train accuracy: 99.219(98.198), lr: 0.0065
step: 200, CrossEntropy loss: 0.0952 (0.0606), train accuracy: 96.094(98.123), lr: 0.0065
step: 300, CrossEntropy loss: 0.0511 (0.0606), train accuracy: 98.438(98.079), lr: 0.0065
epoch: 20, CrossEntropy loss: 0.0630, accuracy: 97.936
test acc: 92.0000
step: 0, CrossEntropy loss: 0.0554 (0.0554), train accuracy: 97.656(97.656), lr: 0.0062
step: 100, CrossEntropy loss: 0.0564 (0.0574), train accuracy: 97.656(98.120), lr: 0.0062
step: 200, CrossEntropy loss: 0.0715 (0.0574), train accuracy: 97.656(98.162), lr: 0.0062
step: 300, CrossEntropy loss: 0.0664 (0.0596), train accuracy: 98.438(98.027), lr: 0.0062
epoch: 21, CrossEntropy loss: 0.0605, accuracy: 98.010
test acc: 92.1100
step: 0, CrossEntropy loss: 0.0323 (0.0323), train accuracy: 98.438(98.438), lr: 0.0059
step: 100, CrossEntropy loss: 0.0706 (0.0555), train accuracy: 97.656(98.236), lr: 0.0059
step: 200, CrossEntropy loss: 0.0848 (0.0592), train accuracy: 96.875(98.041), lr: 0.0059
step: 300, CrossEntropy loss: 0.0293 (0.0602), train accuracy: 100.000(98.017), lr: 0.0059
epoch: 22, CrossEntropy loss: 0.0587, accuracy: 98.104
test acc: 92.1400
step: 0, CrossEntropy loss: 0.0140 (0.0140), train accuracy: 100.000(100.000), lr: 0.0056
step: 100, CrossEntropy loss: 0.0766 (0.0492), train accuracy: 96.875(98.399), lr: 0.0056
step: 200, CrossEntropy loss: 0.1029 (0.0504), train accuracy: 95.312(98.414), lr: 0.0056
step: 300, CrossEntropy loss: 0.0264 (0.0516), train accuracy: 99.219(98.375), lr: 0.0056
epoch: 23, CrossEntropy loss: 0.0516, accuracy: 98.364
test acc: 92.5000
step: 0, CrossEntropy loss: 0.0459 (0.0459), train accuracy: 99.219(99.219), lr: 0.0053
step: 100, CrossEntropy loss: 0.0399 (0.0493), train accuracy: 97.656(98.468), lr: 0.0053
step: 200, CrossEntropy loss: 0.0298 (0.0516), train accuracy: 99.219(98.360), lr: 0.0053
step: 300, CrossEntropy loss: 0.0470 (0.0528), train accuracy: 98.438(98.321), lr: 0.0053
epoch: 24, CrossEntropy loss: 0.0527, accuracy: 98.306
test acc: 92.1300
step: 0, CrossEntropy loss: 0.0513 (0.0513), train accuracy: 97.656(97.656), lr: 0.0050
step: 100, CrossEntropy loss: 0.0445 (0.0500), train accuracy: 99.219(98.298), lr: 0.0050
step: 200, CrossEntropy loss: 0.0421 (0.0498), train accuracy: 97.656(98.333), lr: 0.0050
step: 300, CrossEntropy loss: 0.0722 (0.0508), train accuracy: 97.656(98.300), lr: 0.0050
epoch: 25, CrossEntropy loss: 0.0511, accuracy: 98.330
test acc: 92.7500
step: 0, CrossEntropy loss: 0.0499 (0.0499), train accuracy: 97.656(97.656), lr: 0.0047
step: 100, CrossEntropy loss: 0.0451 (0.0421), train accuracy: 99.219(98.646), lr: 0.0047
step: 200, CrossEntropy loss: 0.0704 (0.0443), train accuracy: 97.656(98.624), lr: 0.0047
step: 300, CrossEntropy loss: 0.0433 (0.0453), train accuracy: 98.438(98.534), lr: 0.0047
epoch: 26, CrossEntropy loss: 0.0454, accuracy: 98.558
test acc: 92.3000
step: 0, CrossEntropy loss: 0.0175 (0.0175), train accuracy: 100.000(100.000), lr: 0.0044
step: 100, CrossEntropy loss: 0.1058 (0.0427), train accuracy: 95.312(98.755), lr: 0.0044
step: 200, CrossEntropy loss: 0.0417 (0.0429), train accuracy: 97.656(98.748), lr: 0.0044
step: 300, CrossEntropy loss: 0.0889 (0.0442), train accuracy: 97.656(98.694), lr: 0.0044
epoch: 27, CrossEntropy loss: 0.0438, accuracy: 98.710
test acc: 92.3100
step: 0, CrossEntropy loss: 0.0223 (0.0223), train accuracy: 100.000(100.000), lr: 0.0041
step: 100, CrossEntropy loss: 0.0215 (0.0409), train accuracy: 100.000(98.855), lr: 0.0041
step: 200, CrossEntropy loss: 0.0229 (0.0409), train accuracy: 99.219(98.768), lr: 0.0041
step: 300, CrossEntropy loss: 0.0211 (0.0415), train accuracy: 100.000(98.744), lr: 0.0041
epoch: 28, CrossEntropy loss: 0.0412, accuracy: 98.768
test acc: 92.2700
step: 0, CrossEntropy loss: 0.0251 (0.0251), train accuracy: 99.219(99.219), lr: 0.0038
step: 100, CrossEntropy loss: 0.0580 (0.0357), train accuracy: 98.438(99.049), lr: 0.0038
step: 200, CrossEntropy loss: 0.0184 (0.0386), train accuracy: 100.000(98.892), lr: 0.0038
step: 300, CrossEntropy loss: 0.0204 (0.0386), train accuracy: 98.438(98.866), lr: 0.0038
epoch: 29, CrossEntropy loss: 0.0395, accuracy: 98.844
test acc: 92.6400
step: 0, CrossEntropy loss: 0.0392 (0.0392), train accuracy: 97.656(97.656), lr: 0.0035
step: 100, CrossEntropy loss: 0.0247 (0.0350), train accuracy: 100.000(99.025), lr: 0.0035
step: 200, CrossEntropy loss: 0.0459 (0.0366), train accuracy: 98.438(98.974), lr: 0.0035
step: 300, CrossEntropy loss: 0.0651 (0.0371), train accuracy: 98.438(98.944), lr: 0.0035
epoch: 30, CrossEntropy loss: 0.0374, accuracy: 98.936
test acc: 92.6400
step: 0, CrossEntropy loss: 0.0217 (0.0217), train accuracy: 100.000(100.000), lr: 0.0032
step: 100, CrossEntropy loss: 0.0777 (0.0359), train accuracy: 97.656(99.002), lr: 0.0032
step: 200, CrossEntropy loss: 0.0179 (0.0349), train accuracy: 100.000(99.044), lr: 0.0032
step: 300, CrossEntropy loss: 0.0162 (0.0348), train accuracy: 100.000(99.055), lr: 0.0032
epoch: 31, CrossEntropy loss: 0.0356, accuracy: 99.008
test acc: 92.7400
step: 0, CrossEntropy loss: 0.0631 (0.0631), train accuracy: 97.656(97.656), lr: 0.0029
step: 100, CrossEntropy loss: 0.0603 (0.0347), train accuracy: 98.438(99.010), lr: 0.0029
step: 200, CrossEntropy loss: 0.0165 (0.0353), train accuracy: 100.000(99.009), lr: 0.0029
step: 300, CrossEntropy loss: 0.0197 (0.0348), train accuracy: 100.000(99.014), lr: 0.0029
epoch: 32, CrossEntropy loss: 0.0345, accuracy: 99.028
test acc: 92.6900
step: 0, CrossEntropy loss: 0.0151 (0.0151), train accuracy: 100.000(100.000), lr: 0.0026
step: 100, CrossEntropy loss: 0.0231 (0.0291), train accuracy: 99.219(99.234), lr: 0.0026
step: 200, CrossEntropy loss: 0.0242 (0.0304), train accuracy: 99.219(99.164), lr: 0.0026
step: 300, CrossEntropy loss: 0.0285 (0.0304), train accuracy: 99.219(99.167), lr: 0.0026
epoch: 33, CrossEntropy loss: 0.0312, accuracy: 99.150
test acc: 92.7800
step: 0, CrossEntropy loss: 0.0604 (0.0604), train accuracy: 96.875(96.875), lr: 0.0023
step: 100, CrossEntropy loss: 0.0424 (0.0335), train accuracy: 98.438(99.049), lr: 0.0023
step: 200, CrossEntropy loss: 0.0950 (0.0340), train accuracy: 96.875(99.021), lr: 0.0023
step: 300, CrossEntropy loss: 0.0312 (0.0336), train accuracy: 100.000(99.003), lr: 0.0023
epoch: 34, CrossEntropy loss: 0.0330, accuracy: 99.020
test acc: 92.6200
step: 0, CrossEntropy loss: 0.0189 (0.0189), train accuracy: 100.000(100.000), lr: 0.0021
step: 100, CrossEntropy loss: 0.0305 (0.0270), train accuracy: 98.438(99.327), lr: 0.0021
step: 200, CrossEntropy loss: 0.0080 (0.0286), train accuracy: 100.000(99.273), lr: 0.0021
step: 300, CrossEntropy loss: 0.0325 (0.0286), train accuracy: 99.219(99.281), lr: 0.0021
epoch: 35, CrossEntropy loss: 0.0288, accuracy: 99.282
test acc: 92.6400
step: 0, CrossEntropy loss: 0.0242 (0.0242), train accuracy: 99.219(99.219), lr: 0.0018
step: 100, CrossEntropy loss: 0.0832 (0.0264), train accuracy: 96.094(99.389), lr: 0.0018
step: 200, CrossEntropy loss: 0.0342 (0.0279), train accuracy: 99.219(99.293), lr: 0.0018
step: 300, CrossEntropy loss: 0.0163 (0.0276), train accuracy: 100.000(99.312), lr: 0.0018
epoch: 36, CrossEntropy loss: 0.0276, accuracy: 99.302
test acc: 92.7400
step: 0, CrossEntropy loss: 0.0220 (0.0220), train accuracy: 100.000(100.000), lr: 0.0016
step: 100, CrossEntropy loss: 0.0344 (0.0287), train accuracy: 98.438(99.250), lr: 0.0016
step: 200, CrossEntropy loss: 0.0271 (0.0286), train accuracy: 99.219(99.242), lr: 0.0016
step: 300, CrossEntropy loss: 0.0415 (0.0283), train accuracy: 98.438(99.247), lr: 0.0016
epoch: 37, CrossEntropy loss: 0.0284, accuracy: 99.242
test acc: 92.7500
step: 0, CrossEntropy loss: 0.0605 (0.0605), train accuracy: 97.656(97.656), lr: 0.0014
step: 100, CrossEntropy loss: 0.0581 (0.0257), train accuracy: 97.656(99.304), lr: 0.0014
step: 200, CrossEntropy loss: 0.0398 (0.0257), train accuracy: 99.219(99.324), lr: 0.0014
step: 300, CrossEntropy loss: 0.0198 (0.0261), train accuracy: 100.000(99.310), lr: 0.0014
epoch: 38, CrossEntropy loss: 0.0266, accuracy: 99.296
test acc: 92.8700
step: 0, CrossEntropy loss: 0.0307 (0.0307), train accuracy: 99.219(99.219), lr: 0.0012
step: 100, CrossEntropy loss: 0.0216 (0.0257), train accuracy: 99.219(99.358), lr: 0.0012
step: 200, CrossEntropy loss: 0.0163 (0.0250), train accuracy: 100.000(99.374), lr: 0.0012
step: 300, CrossEntropy loss: 0.0308 (0.0250), train accuracy: 99.219(99.385), lr: 0.0012
epoch: 39, CrossEntropy loss: 0.0251, accuracy: 99.380
test acc: 92.9500
step: 0, CrossEntropy loss: 0.0477 (0.0477), train accuracy: 99.219(99.219), lr: 0.0010
step: 100, CrossEntropy loss: 0.0322 (0.0256), train accuracy: 99.219(99.350), lr: 0.0010
step: 200, CrossEntropy loss: 0.0339 (0.0261), train accuracy: 100.000(99.335), lr: 0.0010
step: 300, CrossEntropy loss: 0.0197 (0.0256), train accuracy: 99.219(99.328), lr: 0.0010
epoch: 40, CrossEntropy loss: 0.0252, accuracy: 99.366
test acc: 92.7600
step: 0, CrossEntropy loss: 0.0124 (0.0124), train accuracy: 100.000(100.000), lr: 0.0008
step: 100, CrossEntropy loss: 0.0204 (0.0226), train accuracy: 100.000(99.513), lr: 0.0008
step: 200, CrossEntropy loss: 0.0284 (0.0219), train accuracy: 99.219(99.518), lr: 0.0008
step: 300, CrossEntropy loss: 0.0308 (0.0226), train accuracy: 98.438(99.483), lr: 0.0008
epoch: 41, CrossEntropy loss: 0.0241, accuracy: 99.416
test acc: 92.8700
step: 0, CrossEntropy loss: 0.0225 (0.0225), train accuracy: 100.000(100.000), lr: 0.0006
step: 100, CrossEntropy loss: 0.0208 (0.0233), train accuracy: 99.219(99.451), lr: 0.0006
step: 200, CrossEntropy loss: 0.0321 (0.0239), train accuracy: 99.219(99.444), lr: 0.0006
step: 300, CrossEntropy loss: 0.0102 (0.0243), train accuracy: 100.000(99.424), lr: 0.0006
epoch: 42, CrossEntropy loss: 0.0242, accuracy: 99.420
test acc: 92.9700
step: 0, CrossEntropy loss: 0.0147 (0.0147), train accuracy: 99.219(99.219), lr: 0.0005
step: 100, CrossEntropy loss: 0.0160 (0.0214), train accuracy: 100.000(99.459), lr: 0.0005
step: 200, CrossEntropy loss: 0.0192 (0.0223), train accuracy: 99.219(99.456), lr: 0.0005
step: 300, CrossEntropy loss: 0.0206 (0.0229), train accuracy: 100.000(99.458), lr: 0.0005
epoch: 43, CrossEntropy loss: 0.0231, accuracy: 99.442
test acc: 92.9900
step: 0, CrossEntropy loss: 0.0205 (0.0205), train accuracy: 99.219(99.219), lr: 0.0004
step: 100, CrossEntropy loss: 0.0240 (0.0219), train accuracy: 99.219(99.489), lr: 0.0004
step: 200, CrossEntropy loss: 0.0293 (0.0219), train accuracy: 100.000(99.514), lr: 0.0004
step: 300, CrossEntropy loss: 0.0164 (0.0225), train accuracy: 100.000(99.473), lr: 0.0004
epoch: 44, CrossEntropy loss: 0.0226, accuracy: 99.462
test acc: 92.9900
step: 0, CrossEntropy loss: 0.0066 (0.0066), train accuracy: 100.000(100.000), lr: 0.0003
step: 100, CrossEntropy loss: 0.0291 (0.0225), train accuracy: 99.219(99.520), lr: 0.0003
step: 200, CrossEntropy loss: 0.0323 (0.0222), train accuracy: 98.438(99.526), lr: 0.0003
step: 300, CrossEntropy loss: 0.0148 (0.0223), train accuracy: 100.000(99.507), lr: 0.0003
epoch: 45, CrossEntropy loss: 0.0225, accuracy: 99.496
test acc: 93.0500
step: 0, CrossEntropy loss: 0.0275 (0.0275), train accuracy: 100.000(100.000), lr: 0.0002
step: 100, CrossEntropy loss: 0.0177 (0.0227), train accuracy: 100.000(99.528), lr: 0.0002
step: 200, CrossEntropy loss: 0.0170 (0.0228), train accuracy: 100.000(99.506), lr: 0.0002
step: 300, CrossEntropy loss: 0.0332 (0.0224), train accuracy: 99.219(99.522), lr: 0.0002
epoch: 46, CrossEntropy loss: 0.0221, accuracy: 99.528
test acc: 92.9700
step: 0, CrossEntropy loss: 0.0331 (0.0331), train accuracy: 99.219(99.219), lr: 0.0001
step: 100, CrossEntropy loss: 0.0287 (0.0226), train accuracy: 99.219(99.428), lr: 0.0001
step: 200, CrossEntropy loss: 0.0292 (0.0223), train accuracy: 100.000(99.510), lr: 0.0001
step: 300, CrossEntropy loss: 0.0177 (0.0215), train accuracy: 99.219(99.533), lr: 0.0001
epoch: 47, CrossEntropy loss: 0.0218, accuracy: 99.508
test acc: 92.9300
step: 0, CrossEntropy loss: 0.0086 (0.0086), train accuracy: 100.000(100.000), lr: 0.0000
step: 100, CrossEntropy loss: 0.0240 (0.0210), train accuracy: 100.000(99.567), lr: 0.0000
step: 200, CrossEntropy loss: 0.0141 (0.0212), train accuracy: 100.000(99.572), lr: 0.0000
step: 300, CrossEntropy loss: 0.0235 (0.0212), train accuracy: 99.219(99.572), lr: 0.0000
epoch: 48, CrossEntropy loss: 0.0216, accuracy: 99.554
test acc: 92.8900
step: 0, CrossEntropy loss: 0.0157 (0.0157), train accuracy: 100.000(100.000), lr: 0.0000
step: 100, CrossEntropy loss: 0.0341 (0.0205), train accuracy: 99.219(99.536), lr: 0.0000
step: 200, CrossEntropy loss: 0.0049 (0.0213), train accuracy: 100.000(99.514), lr: 0.0000
step: 300, CrossEntropy loss: 0.0174 (0.0209), train accuracy: 99.219(99.533), lr: 0.0000
epoch: 49, CrossEntropy loss: 0.0212, accuracy: 99.524
test acc: 92.9300
